{
    "Titanium": {
        "deprecated": null, 
        "description": "<p>The top level Titanium module.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.createBlob-method", 
                "name": "createBlob", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.Blob.html\">Titanium.Blob</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.1", 
                "value": "create and return an instance of <a href=\"Titanium.Blob.html\">Titanium.Blob</a>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.createBuffer-method", 
                "name": "createBuffer", 
                "parameters": [
                    {
                        "description": "Key value pairs.  You can include: <tt>value</tt>, an optional initial value which will be encoded and placed in the buffer.  If value is a Number, <tt>type</tt> must also be set. This is simply a convenient way of calling <a href=\"Titanium.Codec.encodeString.html\">Titanium.Codec.encodeString</a> or <a href=\"Titanium.Codec.encodeNumber.html\">Titanium.Codec.encodeNumber</a> and placing the encoded value in the returned buffer.  <tt>length</tt>: the length of the buffer, with a default of 0 unless <tt>value</tt> is specified, in which case the length of the encoded <tt>value</tt>.  <tt>type</tt>, the type of data encoding to use with <tt>value</tt>, with <a href=\"Titanium.Codec.CHARSET_UTF8.html\">Titanium.Codec.CHARSET_UTF8</a> being the default if <tt>value</tt> is a String, else this argument is required in the case of <tt>value</tt> being a number.  <tt>byteOrder</tt>, the byte order of this buffer, with the default being the OS native byte order is used by default (see <a href=\"Titanium.Codec.getNativeByteOrder.html\">Titanium.Codec.getNativeByteOrder</a>).", 
                        "name": "params", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "<a href=\"Titanium.Buffer-object.html\">Titanium.Buffer</a>", 
                "since": "0.1", 
                "value": "<p>creates a new buffer based on the params</p>"
            }, 
            {
                "filename": "Titanium.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.include-method", 
                "name": "include", 
                "parameters": [
                    {
                        "description": "filename to include", 
                        "name": "name", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>one or more filenames to include as if the Javascript code was written in place.  This is similar to a C <tt>#include</tt> function.</p>"
            }, 
            {
                "filename": "Titanium.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "remove a previously added event listener"
            }
        ], 
        "notes": "<p>Titanium provides a number of built-in objects in the Javascript that are not part of the Titanium namespace.  Specifically, the following are available.</p>\n<h4 id=\"json\">JSON</h4>\n<p>Titanium has a built-in JSON parser with two main functions: <tt>parse</tt> and <tt>stringify</tt>.  <tt>JSON.parse</tt> will safely evaluate a string encoded as Javascript into a Javascript object.  <tt>JSON.stringify</tt> will encode a Javascript object into a string.</p>\n<h4 id=\"timers\">Timers</h4>\n<p>Titanium has built-in support for one-shot and repeating timers with two main functions: <tt>setTimeout</tt> and <tt>setInterval</tt>.  <tt>setTimeout</tt> takes 2 arguments: function and timeout in milliseconds after which the function should be executed and returns a timer handle that can be used to cancel a pending timer with <tt>clearTimeout</tt>.  <tt>setInterval</tt> takes 2 arguments: function and timeout in milliseconds for how often the function should be executed until cancelled and returns a timer handle that can be used to cancel a timer with <tt>clearInterval</tt>.</p>\n<h4 id=\"alert\">Alert</h4>\n<p>Titanium has a built-in convenience function <tt>alert</tt> which can be used as a shortcut to <a href=\"Titanium.UI.createAlertDialog.html\">Titanium.UI.createAlertDialog</a> for creating a message box.  Note that unlike a web browser-based version of <tt>alert</tt>, the method is asynchronous. However, only one alert dialog will be visible and modal at a time.</p>\n<h4 id=\"locale\">Locale</h4>\n<p>The macro <tt>L</tt> can also be used which aliases the method <a href=\"Titanium.Locale.getString.html\">Titanium.Locale.getString</a>.</p>\n<h4 id=\"string_formatting\">String formatting</h4>\n<p>The following are built-in functions available on the <tt>String</tt> class which are Titanium specific and will aid in formatting strings into a locale-specific string.</p>\n<p><tt>String.format</tt>: format a generic string using the <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\">IEEE printf specification</a>.</p>\n<p><tt>String.formatDate</tt>: format a date into a locale specific date format. Optionally pass a second argument (string) as either \"short\" (default), \"medium\" or \"long\" for controlling the date format.</p>\n<p><tt>String.formatTime</tt>: format a date into a locale specific time format.</p>\n<p><tt>String.formatDecimal</tt>: format a number into a locale specific decimal format.</p>\n<p><tt>String.formatCurrency</tt>: format a number into a locale specific currency format.</p>", 
        "objects": [
            "Titanium.Blob", 
            "Titanium.BlobStream", 
            "Titanium.Buffer", 
            "Titanium.BufferStream", 
            "Titanium.IOStream"
        ], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.userAgent-property", 
                "isClassProperty": false, 
                "name": "userAgent", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the user-agent string used by Titanium</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.version-property", 
                "isClassProperty": false, 
                "name": "version", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the version of Titanium that is executing</p>"
            }
        ], 
        "returns": null, 
        "since": "0.1", 
        "subtype": null, 
        "type": "module"
    }, 
    "Titanium.API": {
        "deprecated": null, 
        "description": "<p>The top level API module.  The API module is mainly used for logging.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.API.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.API.debug-method", 
                "name": "debug", 
                "parameters": [
                    {
                        "description": "the message to log", 
                        "name": "message", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>function for logging debug messages</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.API.error-method", 
                "name": "error", 
                "parameters": [
                    {
                        "description": "the message to log", 
                        "name": "message", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>function for logging error messages</p>"
            }, 
            {
                "filename": "Titanium.API.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.API.info-method", 
                "name": "info", 
                "parameters": [
                    {
                        "description": "the message to log", 
                        "name": "message", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>function for logging informational messages</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.API.log-method", 
                "name": "log", 
                "parameters": [
                    {
                        "description": "the log level", 
                        "name": "level", 
                        "type": "string"
                    }, 
                    {
                        "description": "the message to log", 
                        "name": "message", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>function for logging custom severity messages</p>"
            }, 
            {
                "filename": "Titanium.API.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "remove a previously added event listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.API.warn-method", 
                "name": "warn", 
                "parameters": [
                    {
                        "description": "the message to log", 
                        "name": "message", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>function for logging warning messages</p>"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [], 
        "returns": "object", 
        "since": "0.1", 
        "subtype": null, 
        "type": "module"
    }, 
    "Titanium.Accelerometer": {
        "deprecated": null, 
        "description": "<p>The top level Accelerometer module.  The Accelerometer modules contains methods and properties for using the device accelerometer.</p>", 
        "events": [
            {
                "filename": "Titanium.Accelerometer.update-event", 
                "name": "update", 
                "properties": {
                    "source": "the source object that fired the event", 
                    "timestamp": "<p>reference timestamp since the previous change. this is not a valid timestamp and should simply be used to determine the time between events and not an exact timestamp.</p>", 
                    "type": "the name of the event fired", 
                    "x": "<p>the x axis of the device</p>", 
                    "y": "<p>the y axis of the device</p>", 
                    "z": "<p>the z axis of the device</p>"
                }, 
                "value": "<p>fired when the accelerometer changes</p>"
            }
        ], 
        "examples": [
            {
                "code": "<p>Adds an accelerometer update event listener which prints out the x, y and z axis as the device is moved.  You should generally remove the event when not used to conserve device resources.  If you do not have an active event listener, the accelerometer is turned off to conserve device resources.</p>\n<pre><code>Titanium.Accelerometer.addEventListener('update',function(e)\n{\n    Ti.API.debug(\"accelerometer - x:\"+e.x+\",y:\"+e.y+\",z:\"+e.z);\n});\n</code></pre>", 
                "description": "Basic Accelerometer Event"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.Accelerometer.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.Accelerometer.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.Accelerometer.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "remove a previously added event listener"
            }
        ], 
        "notes": "<p>You'll want to be selective about turning on and off the device accelerometer.  It's recommended you turn off the accelerometer when you're not using it.</p>\n<p>You can turn off the accelerometer by simply removing your event listener function.  You can turn it back on by re-adding the same function with <tt>addEventListener</tt>.</p>\n<pre><code>Titanium.Accelerometer.removeEventListener('update',myFunction);\n</code></pre>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [], 
        "returns": "object", 
        "since": "0.1", 
        "subtype": null, 
        "type": "module"
    }, 
    "Titanium.Analytics": {
        "deprecated": null, 
        "description": "<p>The top level Analytics module.  The Analytics module is used for transmitting developer-defined Analytics event for your application to the Appcelerator Analytics product. It can be used to augment additional context or application-specific information which can then be accessed during analysis using Analytics.</p>", 
        "events": [], 
        "examples": [
            {
                "code": "<p>This examples shows how to send a featureEvent during an application session to indicate some feature was triggered/used by the user that you would like to track.</p>\n<pre><code>Titanium.Analytics.featureEvent('app.feature.blah',{product:'killer'});\n</code></pre>", 
                "description": "Custom Feature Event"
            }
        ], 
        "methods": [
            {
                "deprecated": false, 
                "filename": "Titanium.Analytics.addEvent-method", 
                "name": "addEvent", 
                "parameters": [
                    {
                        "description": "the event type", 
                        "name": "type", 
                        "type": "string"
                    }, 
                    {
                        "description": "the event name", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event data or null if not specified. the object must be serializable as JSON", 
                        "name": "data", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>send a generic event for the application session</p>"
            }, 
            {
                "filename": "Titanium.Analytics.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Analytics.featureEvent-method", 
                "name": "featureEvent", 
                "parameters": [
                    {
                        "description": "the event name", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event data or null if not specified. the object must be serializable as JSON", 
                        "name": "data", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>send an analytics feature event for the application session</p>"
            }, 
            {
                "filename": "Titanium.Analytics.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Analytics.navEvent-method", 
                "name": "navEvent", 
                "parameters": [
                    {
                        "description": "the <tt>from</tt> location in the nav event", 
                        "name": "from", 
                        "type": "string"
                    }, 
                    {
                        "description": "the <tt>to</tt> location in the nav event", 
                        "name": "to", 
                        "type": "string"
                    }, 
                    {
                        "description": "the event name", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event data or null if not specified. the object must be serializable as JSON", 
                        "name": "data", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>send an analytics nav event for the application session</p>"
            }, 
            {
                "filename": "Titanium.Analytics.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "remove a previously added event listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Analytics.settingsEvent-method", 
                "name": "settingsEvent", 
                "parameters": [
                    {
                        "description": "the event name", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event data or null if not specified. the object must be serializable as JSON", 
                        "name": "data", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>send a analytics settings event for the application session</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Analytics.timedEvent-method", 
                "name": "timedEvent", 
                "parameters": [
                    {
                        "description": "the event name", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "the event start as a Date object", 
                        "name": "start", 
                        "type": "date"
                    }, 
                    {
                        "description": "the event end as a Date object", 
                        "name": "stop", 
                        "type": "date"
                    }, 
                    {
                        "description": "the event duration", 
                        "name": "duration", 
                        "type": "float"
                    }, 
                    {
                        "description": "event data or null if not specified. the object must be serializable as JSON", 
                        "name": "data", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>send an analytics timed event for the application session</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Analytics.userEvent-method", 
                "name": "userEvent", 
                "parameters": [
                    {
                        "description": "the event name", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event data or null if not specified. the object must be serializable as JSON", 
                        "name": "data", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>send an analytics user event for the application session</p>"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [], 
        "returns": "object", 
        "since": "0.1", 
        "subtype": null, 
        "type": "module"
    }, 
    "Titanium.Android": {
        "deprecated": null, 
        "description": "<p>The top level Android module. <tt>Ti.Android.currentActivity</tt> provides each context an Activity. This object cannot be created directly.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.Android.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.createBroadcastIntent-method", 
                "name": "createBroadcastIntent", 
                "parameters": [], 
                "platforms": [
                    "android"
                ], 
                "returntype": "<a href=\"Titanium.Android.Intent.html\">Titanium.Android.Intent</a>", 
                "since": "1.5", 
                "value": "<p>Create a <a href=\"Titanium.Android.Intent.html\">Titanium.Android.Intent</a> to be used to start a Broadcast.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.createIntent-method", 
                "name": "createIntent", 
                "parameters": [], 
                "platforms": [
                    "android"
                ], 
                "returntype": "<a href=\"Titanium.Android.Intent.html\">Titanium.Android.Intent</a>", 
                "since": "1.5", 
                "value": "<p>Create a <a href=\"Titanium.Android.Intent.html\">Titanium.Android.Intent</a>. Used to start other Activities and for marshaling data.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.createIntentChooser-method", 
                "name": "createIntentChooser", 
                "parameters": [], 
                "platforms": [
                    "android"
                ], 
                "returntype": "<a href=\"Titanium.Android.Intent.html\">Titanium.Android.Intent</a>", 
                "since": "1.5", 
                "value": "<p>Display chooser interface to allow selection of desired target.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.createNotification-method", 
                "name": "createNotification", 
                "parameters": [
                    {
                        "description": "Options dictionary", 
                        "name": "options", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "<a href=\"Titanium.Android.Notification.html\">Titanium.Android.Notification</a>", 
                "since": "1.5", 
                "value": "<p>Crate a <a href=\"Titanium.Android.Notification.html\">Titanium.Android.Notification</a>. Used to notify the user of an event.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.createPendingIntent-method", 
                "name": "createPendingIntent", 
                "parameters": [
                    {
                        "description": "The Intent that will be executed", 
                        "name": "intent", 
                        "type": "<a href=\"Titanium.Android.Intent.html\">Titanium.Android.Intent</a>"
                    }, 
                    {
                        "description": "(optional, default: 0) Can be any of <a href=\"Titanium.Android.FLAG_CANCEL_CURRENT.html\">Titanium.Android.FLAG_CANCEL_CURRENT</a>, <a href=\"Titanium.Android.FLAG_NO_CREATE.html\">Titanium.Android.FLAG_NO_CREATE</a>, <a href=\"Titanium.Android.FLAG_ONE_SHOT.html\">Titanium.Android.FLAG_ONE_SHOT</a>, <a href=\"Titanium.Android.FLAG_UPDATE_CURRENT.html\">Titanium.Android.FLAG_UPDATE_CURRENT</a>", 
                        "name": "flags", 
                        "type": "int"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "<a href=\"Titanium.Android.PendingIntent.html\">Titanium.Android.PendingIntent</a>", 
                "since": "1.5", 
                "value": "<p>Create a <a href=\"Titanium.Android.PendingIntent.html\">Titanium.Android.PendingIntent</a> to be used inside a <a href=\"Titanium.Android.Notification.html\">Titanium.Android.Notification</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.createService-method", 
                "name": "createService", 
                "parameters": [
                    {
                        "description": "An Intent created with <a href=\"Titanium.Android.createServiceIntent-method.html\">Titanium.Android.createServiceIntent</a> which specifies the service to be instantiated.", 
                        "name": "intent", 
                        "type": "<a href=\"Titanium.Android.Intent.html\">Titanium.Android.Intent</a>"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "<a href=\"Titanium.Android.Service.html\">Titanium.Android.Service</a>", 
                "since": "1.5", 
                "value": "<p>Create a <a href=\"Titanium.Android.Service.html\">Titanium.Android.Service</a> so you can start/stop it and listen for events from it.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.createServiceIntent-method", 
                "name": "createServiceIntent", 
                "parameters": [
                    {
                        "description": "Options dictionary -- pass in a <tt>url</tt> option to specify the path to a javascript-based service you create.", 
                        "name": "options", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "<a href=\"Titanium.Android.Intent.html\">Titanium.Android.Intent</a>", 
                "since": "1.5", 
                "value": "<p>Create an <a href=\"Titanium.Android.Intent.html\">Titanium.Android.Intent</a> to be used to start a Service.</p>"
            }, 
            {
                "filename": "Titanium.Android.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.isServiceRunning-method", 
                "name": "isServiceRunning", 
                "parameters": [
                    {
                        "description": "An Intent created with <a href=\"Titanium.Android.createServiceIntent-method.html\">Titanium.Android.createServiceIntent</a> which specifies the service to check.", 
                        "name": "intent", 
                        "type": "<a href=\"Titanium.Android.Intent.html\">Titanium.Android.Intent</a>"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "boolean", 
                "since": "1.5", 
                "value": "<p>Check on state of Service.</p>"
            }, 
            {
                "filename": "Titanium.Android.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "remove a previously added event listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.startService-method", 
                "name": "startService", 
                "parameters": [
                    {
                        "description": "An Intent created with <a href=\"Titanium.Android.createServiceIntent-method.html\">Titanium.Android.createServiceIntent</a> which specifies the service to start.", 
                        "name": "intent", 
                        "type": "<a href=\"Titanium.Android.Intent.html\">Titanium.Android.Intent</a>"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>Start a simple service</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.stopService-method", 
                "name": "stopService", 
                "parameters": [
                    {
                        "description": "An Intent created with <a href=\"Titanium.Android.createServiceIntent-method.html\">Titanium.Android.createServiceIntent</a> which specifies the service to stop.", 
                        "name": "intent", 
                        "type": "<a href=\"Titanium.Android.Intent.html\">Titanium.Android.Intent</a>"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>Stop a simple service that was started with <tt>startService</tt>.</p>"
            }
        ], 
        "notes": "<p>Several (almost all) of the constants you see above are directly taken from Android.  So if we've failed to document all of them, have a look online at the <a href=\"http://developer.android.com/reference/android/app/Service.html\">Android SDK reference pages</a>.</p>\n<p>The most important page there will be the <a href=\"http://developer.android.com/reference/android/content/Intent.html\">Intent reference</a>, which will give you the meaning of those ACTION, EXTRA and CATEGORY constants.</p>", 
        "objects": [
            "Titanium.Android.Activity", 
            "Titanium.Android.Intent", 
            "Titanium.Android.Menu", 
            "Titanium.Android.MenuItem", 
            "Titanium.Android.Notification", 
            "Titanium.Android.PendingIntent", 
            "Titanium.Android.R", 
            "Titanium.Android.RemoteViews", 
            "Titanium.Android.Service"
        ], 
        "parameters": [], 
        "platforms": [
            "android"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_AIRPLANE_MODE_CHANGED-property", 
                "isClassProperty": true, 
                "name": "ACTION_AIRPLANE_MODE_CHANGED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_ALL_APPS-property", 
                "isClassProperty": true, 
                "name": "ACTION_ALL_APPS", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_ANSWER-property", 
                "isClassProperty": true, 
                "name": "ACTION_ANSWER", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_ATTACH_DATA-property", 
                "isClassProperty": true, 
                "name": "ACTION_ATTACH_DATA", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_BATTERY_CHANGED-property", 
                "isClassProperty": true, 
                "name": "ACTION_BATTERY_CHANGED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_BATTERY_LOW-property", 
                "isClassProperty": true, 
                "name": "ACTION_BATTERY_LOW", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_BATTERY_OKAY-property", 
                "isClassProperty": true, 
                "name": "ACTION_BATTERY_OKAY", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_BOOT_COMPLETED-property", 
                "isClassProperty": true, 
                "name": "ACTION_BOOT_COMPLETED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_BUG_REPORT-property", 
                "isClassProperty": true, 
                "name": "ACTION_BUG_REPORT", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_CALL-property", 
                "isClassProperty": true, 
                "name": "ACTION_CALL", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_CALL_BUTTON-property", 
                "isClassProperty": true, 
                "name": "ACTION_CALL_BUTTON", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_CAMERA_BUTTON-property", 
                "isClassProperty": true, 
                "name": "ACTION_CAMERA_BUTTON", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_CHOOSER-property", 
                "isClassProperty": true, 
                "name": "ACTION_CHOOSER", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_CLOSE_SYSTEM_DIALOGS-property", 
                "isClassProperty": true, 
                "name": "ACTION_CLOSE_SYSTEM_DIALOGS", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_CONFIGURATION_CHANGED-property", 
                "isClassProperty": true, 
                "name": "ACTION_CONFIGURATION_CHANGED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_CREATE_SHORTCUT-property", 
                "isClassProperty": true, 
                "name": "ACTION_CREATE_SHORTCUT", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_DATE_CHANGED-property", 
                "isClassProperty": true, 
                "name": "ACTION_DATE_CHANGED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_DEFAULT-property", 
                "isClassProperty": true, 
                "name": "ACTION_DEFAULT", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_DELETE-property", 
                "isClassProperty": true, 
                "name": "ACTION_DELETE", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_DEVICE_STORAGE_LOW-property", 
                "isClassProperty": true, 
                "name": "ACTION_DEVICE_STORAGE_LOW", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_DIAL-property", 
                "isClassProperty": true, 
                "name": "ACTION_DIAL", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_EDIT-property", 
                "isClassProperty": true, 
                "name": "ACTION_EDIT", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_GET_CONTENT-property", 
                "isClassProperty": true, 
                "name": "ACTION_GET_CONTENT", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_GTALK_SERVICE_CONNECTED-property", 
                "isClassProperty": true, 
                "name": "ACTION_GTALK_SERVICE_CONNECTED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_GTALK_SERVICE_DISCONNECTED-property", 
                "isClassProperty": true, 
                "name": "ACTION_GTALK_SERVICE_DISCONNECTED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_HEADSET_PLUG-property", 
                "isClassProperty": true, 
                "name": "ACTION_HEADSET_PLUG", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_INPUT_METHOD_CHANGED-property", 
                "isClassProperty": true, 
                "name": "ACTION_INPUT_METHOD_CHANGED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_INSERT-property", 
                "isClassProperty": true, 
                "name": "ACTION_INSERT", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_INSERT_OR_EDIT-property", 
                "isClassProperty": true, 
                "name": "ACTION_INSERT_OR_EDIT", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_MAIN-property", 
                "isClassProperty": true, 
                "name": "ACTION_MAIN", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_MANAGE_PACKAGE_STORAGE-property", 
                "isClassProperty": true, 
                "name": "ACTION_MANAGE_PACKAGE_STORAGE", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_MEDIA_BAD_REMOVAL-property", 
                "isClassProperty": true, 
                "name": "ACTION_MEDIA_BAD_REMOVAL", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_MEDIA_BUTTON-property", 
                "isClassProperty": true, 
                "name": "ACTION_MEDIA_BUTTON", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_MEDIA_CHECKING-property", 
                "isClassProperty": true, 
                "name": "ACTION_MEDIA_CHECKING", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_MEDIA_EJECT-property", 
                "isClassProperty": true, 
                "name": "ACTION_MEDIA_EJECT", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_MEDIA_MOUNTED-property", 
                "isClassProperty": true, 
                "name": "ACTION_MEDIA_MOUNTED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_MEDIA_NOFS-property", 
                "isClassProperty": true, 
                "name": "ACTION_MEDIA_NOFS", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_MEDIA_REMOVED-property", 
                "isClassProperty": true, 
                "name": "ACTION_MEDIA_REMOVED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_MEDIA_SCANNER_FINISHED-property", 
                "isClassProperty": true, 
                "name": "ACTION_MEDIA_SCANNER_FINISHED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_MEDIA_SCANNER_SCAN_FILE-property", 
                "isClassProperty": true, 
                "name": "ACTION_MEDIA_SCANNER_SCAN_FILE", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_MEDIA_SCANNER_STARTED-property", 
                "isClassProperty": true, 
                "name": "ACTION_MEDIA_SCANNER_STARTED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_MEDIA_SHARED-property", 
                "isClassProperty": true, 
                "name": "ACTION_MEDIA_SHARED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_MEDIA_UNMOUNTABLE-property", 
                "isClassProperty": true, 
                "name": "ACTION_MEDIA_UNMOUNTABLE", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_MEDIA_UNMOUNTED-property", 
                "isClassProperty": true, 
                "name": "ACTION_MEDIA_UNMOUNTED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_NEW_OUTGOING_CALL-property", 
                "isClassProperty": true, 
                "name": "ACTION_NEW_OUTGOING_CALL", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_PACKAGE_ADDED-property", 
                "isClassProperty": true, 
                "name": "ACTION_PACKAGE_ADDED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_PACKAGE_CHANGED-property", 
                "isClassProperty": true, 
                "name": "ACTION_PACKAGE_CHANGED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_PACKAGE_DATA_CLEARED-property", 
                "isClassProperty": true, 
                "name": "ACTION_PACKAGE_DATA_CLEARED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_PACKAGE_INSTALL-property", 
                "isClassProperty": true, 
                "name": "ACTION_PACKAGE_INSTALL", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_PACKAGE_REMOVED-property", 
                "isClassProperty": true, 
                "name": "ACTION_PACKAGE_REMOVED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_PACKAGE_REPLACED-property", 
                "isClassProperty": true, 
                "name": "ACTION_PACKAGE_REPLACED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_PACKAGE_RESTARTED-property", 
                "isClassProperty": true, 
                "name": "ACTION_PACKAGE_RESTARTED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_PICK-property", 
                "isClassProperty": true, 
                "name": "ACTION_PICK", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_PICK_ACTIVITY-property", 
                "isClassProperty": true, 
                "name": "ACTION_PICK_ACTIVITY", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_POWER_CONNECTED-property", 
                "isClassProperty": true, 
                "name": "ACTION_POWER_CONNECTED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_POWER_DISCONNECTED-property", 
                "isClassProperty": true, 
                "name": "ACTION_POWER_DISCONNECTED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_POWER_USAGE_SUMMARY-property", 
                "isClassProperty": true, 
                "name": "ACTION_POWER_USAGE_SUMMARY", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_PROVIDER_CHANGED-property", 
                "isClassProperty": true, 
                "name": "ACTION_PROVIDER_CHANGED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_REBOOT-property", 
                "isClassProperty": true, 
                "name": "ACTION_REBOOT", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_RUN-property", 
                "isClassProperty": true, 
                "name": "ACTION_RUN", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_SCREEN_OFF-property", 
                "isClassProperty": true, 
                "name": "ACTION_SCREEN_OFF", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_SCREEN_ON-property", 
                "isClassProperty": true, 
                "name": "ACTION_SCREEN_ON", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_SEARCH-property", 
                "isClassProperty": true, 
                "name": "ACTION_SEARCH", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_SEARCH_LONG_PRESS-property", 
                "isClassProperty": true, 
                "name": "ACTION_SEARCH_LONG_PRESS", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_SEND-property", 
                "isClassProperty": true, 
                "name": "ACTION_SEND", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_SENDTO-property", 
                "isClassProperty": true, 
                "name": "ACTION_SENDTO", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_SEND_MULTIPLE-property", 
                "isClassProperty": true, 
                "name": "ACTION_SEND_MULTIPLE", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_SET_WALLPAPER-property", 
                "isClassProperty": true, 
                "name": "ACTION_SET_WALLPAPER", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_SHUTDOWN-property", 
                "isClassProperty": true, 
                "name": "ACTION_SHUTDOWN", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_SYNC-property", 
                "isClassProperty": true, 
                "name": "ACTION_SYNC", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_SYSTEM_TUTORIAL-property", 
                "isClassProperty": true, 
                "name": "ACTION_SYSTEM_TUTORIAL", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_TIME_CHANGED-property", 
                "isClassProperty": true, 
                "name": "ACTION_TIME_CHANGED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_TIME_TICK-property", 
                "isClassProperty": true, 
                "name": "ACTION_TIME_TICK", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_UID_REMOVED-property", 
                "isClassProperty": true, 
                "name": "ACTION_UID_REMOVED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_UMS_CONNECTED-property", 
                "isClassProperty": true, 
                "name": "ACTION_UMS_CONNECTED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_UMS_DISCONNECTED-property", 
                "isClassProperty": true, 
                "name": "ACTION_UMS_DISCONNECTED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_USER_PRESENT-property", 
                "isClassProperty": true, 
                "name": "ACTION_USER_PRESENT", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_VIEW-property", 
                "isClassProperty": true, 
                "name": "ACTION_VIEW", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_VOICE_COMMAND-property", 
                "isClassProperty": true, 
                "name": "ACTION_VOICE_COMMAND", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_WALLPAPER_CHANGED-property", 
                "isClassProperty": true, 
                "name": "ACTION_WALLPAPER_CHANGED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.ACTION_WEB_SEARCH-property", 
                "isClassProperty": true, 
                "name": "ACTION_WEB_SEARCH", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.CATEGORY_ALTERNATIVE-property", 
                "isClassProperty": true, 
                "name": "CATEGORY_ALTERNATIVE", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.CATEGORY_BROWSABLE-property", 
                "isClassProperty": true, 
                "name": "CATEGORY_BROWSABLE", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.CATEGORY_DEFAULT-property", 
                "isClassProperty": true, 
                "name": "CATEGORY_DEFAULT", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.CATEGORY_DEVELOPMENT_PREFERENCE-property", 
                "isClassProperty": true, 
                "name": "CATEGORY_DEVELOPMENT_PREFERENCE", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.CATEGORY_EMBED-property", 
                "isClassProperty": true, 
                "name": "CATEGORY_EMBED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST-property", 
                "isClassProperty": true, 
                "name": "CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.CATEGORY_HOME-property", 
                "isClassProperty": true, 
                "name": "CATEGORY_HOME", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.CATEGORY_INFO-property", 
                "isClassProperty": true, 
                "name": "CATEGORY_INFO", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.CATEGORY_LAUNCHER-property", 
                "isClassProperty": true, 
                "name": "CATEGORY_LAUNCHER", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.CATEGORY_MONKEY-property", 
                "isClassProperty": true, 
                "name": "CATEGORY_MONKEY", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.CATEGORY_OPENABLE-property", 
                "isClassProperty": true, 
                "name": "CATEGORY_OPENABLE", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.CATEGORY_PREFERENCE-property", 
                "isClassProperty": true, 
                "name": "CATEGORY_PREFERENCE", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.CATEGORY_SAMPLE_CODE-property", 
                "isClassProperty": true, 
                "name": "CATEGORY_SAMPLE_CODE", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.CATEGORY_SELECTED_ALTERNATIVE-property", 
                "isClassProperty": true, 
                "name": "CATEGORY_SELECTED_ALTERNATIVE", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.CATEGORY_TAB-property", 
                "isClassProperty": true, 
                "name": "CATEGORY_TAB", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.CATEGORY_TEST-property", 
                "isClassProperty": true, 
                "name": "CATEGORY_TEST", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.CATEGORY_UNIT_TEST-property", 
                "isClassProperty": true, 
                "name": "CATEGORY_UNIT_TEST", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.DEFAULT_ALL-property", 
                "isClassProperty": true, 
                "name": "DEFAULT_ALL", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Use all default values (where applicable).</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.DEFAULT_LIGHTS-property", 
                "isClassProperty": true, 
                "name": "DEFAULT_LIGHTS", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Use the default notification lights.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.DEFAULT_SOUND-property", 
                "isClassProperty": true, 
                "name": "DEFAULT_SOUND", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Use the default notification sound.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.DEFAULT_VIBRATE-property", 
                "isClassProperty": true, 
                "name": "DEFAULT_VIBRATE", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Use the default notification vibrate.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.EXTRA_ALARM_COUNT-property", 
                "isClassProperty": true, 
                "name": "EXTRA_ALARM_COUNT", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.EXTRA_BCC-property", 
                "isClassProperty": true, 
                "name": "EXTRA_BCC", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.EXTRA_CC-property", 
                "isClassProperty": true, 
                "name": "EXTRA_CC", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.EXTRA_DATA_REMOVED-property", 
                "isClassProperty": true, 
                "name": "EXTRA_DATA_REMOVED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.EXTRA_DONT_KILL_APP-property", 
                "isClassProperty": true, 
                "name": "EXTRA_DONT_KILL_APP", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.EXTRA_EMAIL-property", 
                "isClassProperty": true, 
                "name": "EXTRA_EMAIL", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.EXTRA_INTENT-property", 
                "isClassProperty": true, 
                "name": "EXTRA_INTENT", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.EXTRA_KEY_EVENT-property", 
                "isClassProperty": true, 
                "name": "EXTRA_KEY_EVENT", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.EXTRA_PHONE_NUMBER-property", 
                "isClassProperty": true, 
                "name": "EXTRA_PHONE_NUMBER", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.EXTRA_REPLACING-property", 
                "isClassProperty": true, 
                "name": "EXTRA_REPLACING", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.EXTRA_SHORTCUT_ICON-property", 
                "isClassProperty": true, 
                "name": "EXTRA_SHORTCUT_ICON", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.EXTRA_SHORTCUT_ICON_RESOURCE-property", 
                "isClassProperty": true, 
                "name": "EXTRA_SHORTCUT_ICON_RESOURCE", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.EXTRA_SHORTCUT_INTENT-property", 
                "isClassProperty": true, 
                "name": "EXTRA_SHORTCUT_INTENT", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.EXTRA_SHORTCUT_NAME-property", 
                "isClassProperty": true, 
                "name": "EXTRA_SHORTCUT_NAME", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.EXTRA_STREAM-property", 
                "isClassProperty": true, 
                "name": "EXTRA_STREAM", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.EXTRA_SUBJECT-property", 
                "isClassProperty": true, 
                "name": "EXTRA_SUBJECT", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.EXTRA_TEMPLATE-property", 
                "isClassProperty": true, 
                "name": "EXTRA_TEMPLATE", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.EXTRA_TEXT-property", 
                "isClassProperty": true, 
                "name": "EXTRA_TEXT", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.EXTRA_TITLE-property", 
                "isClassProperty": true, 
                "name": "EXTRA_TITLE", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.EXTRA_UID-property", 
                "isClassProperty": true, 
                "name": "EXTRA_UID", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.FILL_IN_ACTION-property", 
                "isClassProperty": true, 
                "name": "FILL_IN_ACTION", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.FILL_IN_CATEGORIES-property", 
                "isClassProperty": true, 
                "name": "FILL_IN_CATEGORIES", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.FILL_IN_COMPONENT-property", 
                "isClassProperty": true, 
                "name": "FILL_IN_COMPONENT", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.FILL_IN_DATA-property", 
                "isClassProperty": true, 
                "name": "FILL_IN_DATA", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.FILL_IN_PACKAGE-property", 
                "isClassProperty": true, 
                "name": "FILL_IN_PACKAGE", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.FLAG_ACTIVITY_BROUGHT_TO_FRONT-property", 
                "isClassProperty": true, 
                "name": "FLAG_ACTIVITY_BROUGHT_TO_FRONT", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.FLAG_ACTIVITY_CLEAR_TOP-property", 
                "isClassProperty": true, 
                "name": "FLAG_ACTIVITY_CLEAR_TOP", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET-property", 
                "isClassProperty": true, 
                "name": "FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS-property", 
                "isClassProperty": true, 
                "name": "FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.FLAG_ACTIVITY_FORWARD_RESULT-property", 
                "isClassProperty": true, 
                "name": "FLAG_ACTIVITY_FORWARD_RESULT", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY-property", 
                "isClassProperty": true, 
                "name": "FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.FLAG_ACTIVITY_MULTIPLE_TASK-property", 
                "isClassProperty": true, 
                "name": "FLAG_ACTIVITY_MULTIPLE_TASK", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.FLAG_ACTIVITY_NEW_TASK-property", 
                "isClassProperty": true, 
                "name": "FLAG_ACTIVITY_NEW_TASK", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.FLAG_ACTIVITY_NO_ANIMATION-property", 
                "isClassProperty": true, 
                "name": "FLAG_ACTIVITY_NO_ANIMATION", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.FLAG_ACTIVITY_NO_HISTORY-property", 
                "isClassProperty": true, 
                "name": "FLAG_ACTIVITY_NO_HISTORY", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.FLAG_ACTIVITY_NO_USER_ACTION-property", 
                "isClassProperty": true, 
                "name": "FLAG_ACTIVITY_NO_USER_ACTION", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.FLAG_ACTIVITY_PREVIOUS_IS_TOP-property", 
                "isClassProperty": true, 
                "name": "FLAG_ACTIVITY_PREVIOUS_IS_TOP", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.FLAG_ACTIVITY_REORDER_TO_FRONT-property", 
                "isClassProperty": true, 
                "name": "FLAG_ACTIVITY_REORDER_TO_FRONT", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.FLAG_ACTIVITY_RESET_TASK_IF_NEEDED-property", 
                "isClassProperty": true, 
                "name": "FLAG_ACTIVITY_RESET_TASK_IF_NEEDED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.FLAG_ACTIVITY_SINGLE_TOP-property", 
                "isClassProperty": true, 
                "name": "FLAG_ACTIVITY_SINGLE_TOP", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.FLAG_AUTO_CANCEL-property", 
                "isClassProperty": true, 
                "name": "FLAG_AUTO_CANCEL", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Bit to be bitwise-ored into the flags field that should be set if the notification should be canceled when it is clicked by the user.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.FLAG_CANCEL_CURRENT-property", 
                "isClassProperty": true, 
                "name": "FLAG_CANCEL_CURRENT", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.FLAG_DEBUG_LOG_RESOLUTION-property", 
                "isClassProperty": true, 
                "name": "FLAG_DEBUG_LOG_RESOLUTION", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.FLAG_FROM_BACKGROUND-property", 
                "isClassProperty": true, 
                "name": "FLAG_FROM_BACKGROUND", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.FLAG_GRANT_READ_URI_PERMISSION-property", 
                "isClassProperty": true, 
                "name": "FLAG_GRANT_READ_URI_PERMISSION", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.FLAG_GRANT_WRITE_URI_PERMISSION-property", 
                "isClassProperty": true, 
                "name": "FLAG_GRANT_WRITE_URI_PERMISSION", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.FLAG_INSISTENT-property", 
                "isClassProperty": true, 
                "name": "FLAG_INSISTENT", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Bit to be bitwise-ored into the flags field that if set, the audio will be repeated until the notification is cancelled or the notification window is opened.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.FLAG_NO_CLEAR-property", 
                "isClassProperty": true, 
                "name": "FLAG_NO_CLEAR", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Bit to be bitwise-ored into the flags field that should be set if the notification should not be canceled when the user clicks the Clear all button.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.FLAG_NO_CREATE-property", 
                "isClassProperty": true, 
                "name": "FLAG_NO_CREATE", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.FLAG_ONE_SHOT-property", 
                "isClassProperty": true, 
                "name": "FLAG_ONE_SHOT", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.FLAG_ONGOING_EVENT-property", 
                "isClassProperty": true, 
                "name": "FLAG_ONGOING_EVENT", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Bit to be bitwise-ored into the flags field that should be set if this notification is in reference to something that is ongoing, like a phone call.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.FLAG_ONLY_ALERT_ONCE-property", 
                "isClassProperty": true, 
                "name": "FLAG_ONLY_ALERT_ONCE", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Bit to be bitwise-ored into the flags field that should be set if you want the sound and/or vibration play each time the notification is sent, even if it has not been canceled before that.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.FLAG_RECEIVER_REGISTERED_ONLY-property", 
                "isClassProperty": true, 
                "name": "FLAG_RECEIVER_REGISTERED_ONLY", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.FLAG_SHOW_LIGHTS-property", 
                "isClassProperty": true, 
                "name": "FLAG_SHOW_LIGHTS", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Bit to be bitwise-ored into the flags field that should be set if you want the LED on for this notification.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.FLAG_UPDATE_CURRENT-property", 
                "isClassProperty": true, 
                "name": "FLAG_UPDATE_CURRENT", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.PENDING_INTENT_FOR_ACTIVITY-property", 
                "isClassProperty": true, 
                "name": "PENDING_INTENT_FOR_ACTIVITY", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.PENDING_INTENT_FOR_BROADCAST-property", 
                "isClassProperty": true, 
                "name": "PENDING_INTENT_FOR_BROADCAST", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.PENDING_INTENT_FOR_SERVICE-property", 
                "isClassProperty": true, 
                "name": "PENDING_INTENT_FOR_SERVICE", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.PENDING_INTENT_MAX_VALUE-property", 
                "isClassProperty": true, 
                "name": "PENDING_INTENT_MAX_VALUE", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.R-property", 
                "isClassProperty": true, 
                "name": "R", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>Accessor for android resources</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.RESULT_CANCELED-property", 
                "isClassProperty": true, 
                "name": "RESULT_CANCELED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.RESULT_FIRST_USER-property", 
                "isClassProperty": true, 
                "name": "RESULT_FIRST_USER", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.RESULT_OK-property", 
                "isClassProperty": true, 
                "name": "RESULT_OK", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.SCREEN_ORIENTATION_BEHIND-property", 
                "isClassProperty": true, 
                "name": "SCREEN_ORIENTATION_BEHIND", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.SCREEN_ORIENTATION_LANDSCAPE-property", 
                "isClassProperty": true, 
                "name": "SCREEN_ORIENTATION_LANDSCAPE", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.SCREEN_ORIENTATION_NOSENSOR-property", 
                "isClassProperty": true, 
                "name": "SCREEN_ORIENTATION_NOSENSOR", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.SCREEN_ORIENTATION_PORTRAIT-property", 
                "isClassProperty": true, 
                "name": "SCREEN_ORIENTATION_PORTRAIT", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.SCREEN_ORIENTATION_SENSOR-property", 
                "isClassProperty": true, 
                "name": "SCREEN_ORIENTATION_SENSOR", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.SCREEN_ORIENTATION_UNSPECIFIED-property", 
                "isClassProperty": true, 
                "name": "SCREEN_ORIENTATION_UNSPECIFIED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.SCREEN_ORIENTATION_USER-property", 
                "isClassProperty": true, 
                "name": "SCREEN_ORIENTATION_USER", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.STREAM_DEFAULT-property", 
                "isClassProperty": true, 
                "name": "STREAM_DEFAULT", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Use this constant as the value for audioStreamType to request that the default stream type for notifications be used.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.URI_INTENT_SCHEME-property", 
                "isClassProperty": true, 
                "name": "URI_INTENT_SCHEME", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": ""
            }
        ], 
        "returns": null, 
        "since": "1.5", 
        "subtype": null, 
        "type": "module"
    }, 
    "Titanium.Android.Activity": {
        "deprecated": null, 
        "description": "<p>The Titanium binding of an <a href=\"http://developer.android.com/reference/android/app/Activity.html\">Android Activity</a></p>", 
        "events": [
            {
                "filename": "Titanium.Android.Activity.create-event", 
                "name": "create", 
                "properties": {
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>Fired from the Activity's <a href=\"http://developer.android.com/reference/android/app/Activity.html#onCreate(android.os.Bundle)\">onCreate</a></p>"
            }, 
            {
                "filename": "Titanium.Android.Activity.destroy-event", 
                "name": "destroy", 
                "properties": {
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>Fired from the Activity's <a href=\"http://developer.android.com/reference/android/app/Activity.html#onDestroy()\">onDestroy</a></p>"
            }, 
            {
                "filename": "Titanium.Android.Activity.newIntent-event", 
                "name": "newIntent", 
                "properties": {
                    "intent": "<p>the <a href=\"Titanium.Android.Intent.html\">Titanium.Android.Intent</a> passed to the native <tt>onNewIntent</tt> method.</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>Fired when the application is already running and certain flags are set in the Intent. Fired from the Activity's <a href=\"http://developer.android.com/reference/android/app/Activity.html#onNewIntent(android.content.Intent)\">onNewIntent</a></p>"
            }, 
            {
                "filename": "Titanium.Android.Activity.pause-event", 
                "name": "pause", 
                "properties": {
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>Fired from the Activity's <a href=\"http://developer.android.com/reference/android/app/Activity.html#onPause()\">onPause</a></p>"
            }, 
            {
                "filename": "Titanium.Android.Activity.resume-event", 
                "name": "resume", 
                "properties": {
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>Fired from the Activity's <a href=\"http://developer.android.com/reference/android/app/Activity.html#onResume()\">onResume</a></p>"
            }, 
            {
                "filename": "Titanium.Android.Activity.start-event", 
                "name": "start", 
                "properties": {
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>Fired from the Activity's <a href=\"http://developer.android.com/reference/android/app/Activity.html#onStart()\">onStart</a></p>"
            }, 
            {
                "filename": "Titanium.Android.Activity.stop-event", 
                "name": "stop", 
                "properties": {
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>Fired from the Activity's <a href=\"http://developer.android.com/reference/android/app/Activity.html#onStop()\">onStop</a></p>"
            }
        ], 
        "examples": [
            {
                "code": "<pre><code>activity.startActivityForResult(intent, function(e) {\n    // The request code used to start this Activity\n    var requestCode = e.requestCode;\n    // The result code returned from the Activity (http://developer.android.com/reference/android/app/Activity.html#StartingActivities)\n    var resultCode = e.resultCode;\n    // A Titanium.Android.Intent filled with data returned from the Activity\n    var intent = e.intent;\n    // The Activity the received the result\n    var source = e.source;\n});\n</code></pre>", 
                "description": "Callback example"
            }
        ], 
        "methods": [
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Activity.finish-method", 
                "name": "finish", 
                "parameters": [], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>Called when the activity is done and should be closed. Also see Android's documentation for <a href=\"http://developer.android.com/reference/android/app/Activity.html#finish()\">finish</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Activity.getIntent-method", 
                "name": "getIntent", 
                "parameters": [], 
                "platforms": [
                    "android"
                ], 
                "returntype": "<a href=\"Titanium.Android.Intent.html\">Titanium.Android.Intent</a>", 
                "since": "1.5", 
                "value": "<p>Returns the <a href=\"Titanium.Android.Intent.html\">Titanium.Android.Intent</a> that was used to start this Activity.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Activity.getString-method", 
                "name": "getString", 
                "parameters": [
                    {
                        "description": "A Resource ID from the Application or Android.", 
                        "name": "resourceId", 
                        "type": "int"
                    }, 
                    {
                        "description": "Optional format arguments for the String resource", 
                        "name": "format", 
                        "type": "Array<Object>"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "string", 
                "since": "1.5", 
                "value": "<p>Get an Android or Application string using the passed-in Resource ID and optional format arguments. Also see Android's documentation for <a href=\"http://developer.android.com/reference/android/content/Context.html#getString(int)\">getString</a> and <a href=\"http://developer.android.com/guide/topics/resources/string-resource.html#String\">String Resources</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Activity.setRequestedOrientation-method", 
                "name": "setRequestedOrientation", 
                "parameters": [
                    {
                        "description": "Can be one of <a href=\"Titanium.Android.SCREEN_ORIENTATION_BEHIND.html\">Titanium.Android.SCREEN_ORIENTATION_BEHIND</a>, <a href=\"Titanium.Android.SCREEN_ORIENTATION_LANDSCAPE.html\">Titanium.Android.SCREEN_ORIENTATION_LANDSCAPE</a>, <a href=\"Titanium.Android.SCREEN_ORIENTATION_NOSENSOR.html\">Titanium.Android.SCREEN_ORIENTATION_NOSENSOR</a>, <a href=\"Titanium.Android.SCREEN_ORIENTATION_PORTRAIT.html\">Titanium.Android.SCREEN_ORIENTATION_PORTRAIT</a>, <a href=\"Titanium.Android.SCREEN_ORIENTATION_SENSOR.html\">Titanium.Android.SCREEN_ORIENTATION_SENSOR</a>, <a href=\"Titanium.Android.SCREEN_ORIENTATION_UNSPECIFIED.html\">Titanium.Android.SCREEN_ORIENTATION_UNSPECIFIED</a>, <a href=\"Titanium.Android.SCREEN_ORIENTATION_USER.html\">Titanium.Android.SCREEN_ORIENTATION_USER</a>", 
                        "name": "orientation", 
                        "type": "int"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>Set the requested Activity orientation. Also see Android's documentation for <a href=\"http://developer.android.com/reference/android/app/Activity.html#setRequestedOrientation(int)\">setRequestedOrientation</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Activity.setResult-method", 
                "name": "setResult", 
                "parameters": [
                    {
                        "description": "The result code for this Activity. Must be one of <a href=\"Titanium.Android.RESULT_OK.html\">Titanium.Android.RESULT_OK</a>, <a href=\"Titanium.Android.RESULT_CANCELED.html\">Titanium.Android.RESULT_CANCELED</a>, <a href=\"Titanium.Android.RESULT_FIRST_USER.html\">Titanium.Android.RESULT_FIRST_USER</a>", 
                        "name": "resultCode", 
                        "type": "int"
                    }, 
                    {
                        "description": "An optional <a href=\"Titanium.Android.Intent.html\">Titanium.Android.Intent</a> with extra result data", 
                        "name": "intent", 
                        "type": "<a href=\"Titanium.Android.Intent.html\">Titanium.Android.Intent</a>"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>Sets the result of this Activity using an Intent. This should be used in the case when the Activity responds to startActivityForResult. Also see Android's documentation for <a href=\"http://developer.android.com/reference/android/app/Activity.html#setResult(int)\">setResult</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Activity.startActivity-method", 
                "name": "startActivity", 
                "parameters": [
                    {
                        "description": "Description of the Activity to start", 
                        "name": "intent", 
                        "type": "<a href=\"Titanium.Android.Intent.html\">Titanium.Android.Intent</a>"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>Starts a new Activity, using the passed in Intent as the description. Also see Android's documentation for <a href=\"http://developer.android.com/reference/android/app/Activity.html#startActivity(android.content.Intent)\">startActivity</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Activity.startActivityForResult-method", 
                "name": "startActivityForResult", 
                "parameters": [
                    {
                        "description": "Description of the Activity to start", 
                        "name": "intent", 
                        "type": "<a href=\"Titanium.Android.Intent.html\">Titanium.Android.Intent</a>"
                    }, 
                    {
                        "description": "A callback function that is executed when the Activity has set it's result. See example in <a href=\"Titanium.Android.Activity-object.html\">Titanium.Android.Activity</a>.", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>The same as <tt>startActivity</tt>, but also accepts a callback function for handling the result of the started Activity. Also see Android's documentation for <a href=\"http://developer.android.com/reference/android/app/Activity.html#startActivityForResult(android.content.Intent, int)\">startActivityForResult</a></p>"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Activity.intent-property", 
                "isClassProperty": false, 
                "name": "intent", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "<a href=\"Titanium.Android.Intent.html\">Titanium.Android.Intent</a>", 
                "type_jsca": "`Titanium.Android.Intent`", 
                "value": "<p>The Intent that was used to start this Activity</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Activity.onCreateOptionsMenu-property", 
                "isClassProperty": false, 
                "name": "onCreateOptionsMenu", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "function", 
                "type_jsca": "function", 
                "value": "<p>A callback function that is called to initially create an Android <a href=\"http://developer.android.com/guide/topics/ui/menus.html#options-menu\">Options Menu</a> for this Activity when the user presses the Menu button. See the menu examples in <a href=\"Titanium.Android.Menu.html\">Titanium.Android.Menu</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Activity.onPrepareOptionsMenu-property", 
                "isClassProperty": false, 
                "name": "onPrepareOptionsMenu", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "function", 
                "type_jsca": "function", 
                "value": "<p>A callback function that is called to prepare an <a href=\"http://developer.android.com/guide/topics/ui/menus.html#options-menu\">Options Menu</a> for displaying on this Activity when the user presses the Menu button. See the menu examples in <a href=\"Titanium.Android.Menu.html\">Titanium.Android.Menu</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Activity.requestedOrientation-property", 
                "isClassProperty": false, 
                "name": "requestedOrientation", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The requested orientation of this Activity. See possible constant values that begin with SCREEN_ORIENTATION in the <a href=\"Titanium.Android.html\">Titanium.Android</a> module.</p>"
            }
        ], 
        "returns": null, 
        "since": "1.5", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.Android.Calendar": {
        "deprecated": null, 
        "description": "<p>The Android.Calendar module provides proxies and methods for accessing the native Android calendar functionality.</p>", 
        "events": [], 
        "examples": [
            {
                "code": "<p>Prints the names of all of your calendars known to Android, then prints the names of calendars that you have selected in the native Android calendar application.  The latter could be a subset, because (for example) Android -- via your Google account -- may know about more calendars that you have access to but that you have not selected inside the calendar app.</p>\n<pre><code>function showCalendars(calendars) {\n    for (var i = 0; i < calendars.length; i++) {\n        Ti.API.info(calendars[i].name);\n    }\n}\n\nTi.API.info('ALL CALENDARS:');\nshowCalendars(Ti.Android.Calendar.allCalendars);\nTi.API.info('SELECTABLE CALENDARS:');\nshowCalendars(Ti.Android.Calendar.selectableCalendars);\n</code></pre>", 
                "description": "All Calendars vs Selectable Calendars"
            }, 
            {
                "code": "<p>This example will look at each event in a year for a given calendar.  Just set the desired calendar's id and the desired year to see it in action.  You can see calendar ids by running the example above.</p>\n<pre><code>var win = Ti.UI.currentWindow;\nvar sv = Ti.UI.createScrollView();\nwin.add(sv);\n\nvar console = Ti.UI.createLabel({\n    backgroundColor: 'white', color: 'black', text: 'generating info...'\n});\nsv.add(console);\n\nvar consoleString = '';\n\nfunction print(s) {\n    Ti.API.info(s);\n    if (consoleString.length > 0) {\n        consoleString = consoleString + '';\n    }\n    consoleString = consoleString + s;\n}\n\n// SHOW ALL EVENTS FOR 2010 FOR ONE CALENDAR\nvar YEAR = 2010;\nvar TEST_WITH_THIS_CAL_ID = 3;\nvar calendar = Ti.Android.Calendar.getCalendarById(TEST_WITH_THIS_CAL_ID);\n\nfunction printReminder(r) {\n    var typetext = '[method unknown]';\n    if (r.method == Ti.Android.Calendar.METHOD_EMAIL) {\n        typetext = 'Email';\n    } else if (r.method == Ti.Android.Calendar.METHOD_SMS) {\n        typetext = 'SMS';\n    } else if (r.method == Ti.Android.Calendar.METHOD_ALERT) {\n        typetext = 'Alert';\n    } else if (r.method == Ti.Android.Calendar.METHOD_DEFAULT) {\n        typetext = '[default reminder method]';\n    }\n    print(typetext + ' reminder to be sent ' + r.minutes + ' minutes before the event');\n}\n\nfunction printAlert(a) {\n    print('Alert id ' + a.id + ' begin ' + a.begin + '; end ' + a.end + '; alarmTime ' + a.alarmTime + '; minutes ' + a.minutes);\n}\n\nfunction printEvent(event) {\n    if (event.allDay) {\n        print('Event: ' + event.title + '; ' + event.begin.toLocaleDateString() + ' (all day)');\n    } else {\n        print('Event: ' + event.title + '; ' + event.begin.toLocaleDateString() + ' ' + event.begin.toLocaleTimeString()+ '-' + event.end.toLocaleTimeString());\n    }\n\n    var reminders = event.reminders;\n    if (reminders && reminders.length) {\n        print('There is/are ' + reminders.length + ' reminder(s)');\n        for (var i = 0; i < reminders.length; i++) {\n            printReminder(reminders[i]);\n        }\n    }\n\n    print('hasAlarm? ' + event.hasAlarm);\n    var alerts = event.alerts;\n    if (alerts && alerts.length) {\n        for (i = 0; i < alerts.length; i++) {\n            printAlert(alerts[i]);\n        }\n    }\n\n    var status = event.status;\n    if (status == Ti.Android.Calendar.STATUS_TENTATIVE) {\n        print('This event is tentative');\n    }\n    if (status == Ti.Android.Calendar.STATUS_CONFIRMED) {\n        print('This event is confirmed');\n    }\n    if (status == Ti.Android.Calendar.STATUS_CANCELED) {\n        print('This event was canceled');\n    }\n}\n\nvar events = calendar.getEventsInYear(YEAR);\nif (events && events.length) {\n    print(events.length + ' event(s) in ' + YEAR);\n    print('');\n    for (var i = 0; i < events.length; i++) {\n        printEvent(events[i]);\n        print('');\n    }\n} else {\n    print('No events on 2010-12-6');\n}\n\nconsole.text = consoleString;\n</code></pre>", 
                "description": "Events in a year"
            }, 
            {
                "code": "<p>This example creates an event and adds an e-mail reminder for 10 minutes before the event.</p>\n<pre><code>var CALENDAR_TO_USE = 3;\nvar calendar = Ti.Android.Calendar.getCalendarById(CALENDAR_TO_USE);\n\n// Create the event\nvar eventBegins = new Date(2010, 11, 26, 12, 0, 0);\nvar eventEnds = new Date(2010, 11, 26, 14, 0, 0);\nvar details = {\n    title: 'Do some stuff',\n    description: \"I'm going to do some stuff at this time.\",\n    begin: eventBegins,\n    end: eventEnds\n};\n\nvar event = calendar.createEvent(details);\n\n// Now add a reminder via e-mail for 10 minutes before the event.\nvar reminderDetails = {\n    minutes: 10,\n    method: Ti.Android.Calendar.METHOD_EMAIL\n};\nevent.createReminder(reminderDetails);\n</code></pre>", 
                "description": "Create an Event and Reminder"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.Android.Calendar.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.Android.Calendar.createAlert-method", 
                "name": "createAlert", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.Android.Calendar.Alert.html\">Titanium.Android.Calendar.Alert</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "object", 
                "since": "1.5", 
                "value": "create and return an instance of <a href=\"Titanium.Android.Calendar.Alert.html\">Titanium.Android.Calendar.Alert</a>"
            }, 
            {
                "filename": "Titanium.Android.Calendar.createCalendar-method", 
                "name": "createCalendar", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.Android.Calendar.Calendar.html\">Titanium.Android.Calendar.Calendar</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "object", 
                "since": "1.5", 
                "value": "create and return an instance of <a href=\"Titanium.Android.Calendar.Calendar.html\">Titanium.Android.Calendar.Calendar</a>"
            }, 
            {
                "filename": "Titanium.Android.Calendar.createEvent-method", 
                "name": "createEvent", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.Android.Calendar.Event.html\">Titanium.Android.Calendar.Event</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "object", 
                "since": "1.5", 
                "value": "create and return an instance of <a href=\"Titanium.Android.Calendar.Event.html\">Titanium.Android.Calendar.Event</a>"
            }, 
            {
                "filename": "Titanium.Android.Calendar.createReminder-method", 
                "name": "createReminder", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.Android.Calendar.Reminder.html\">Titanium.Android.Calendar.Reminder</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "object", 
                "since": "1.5", 
                "value": "create and return an instance of <a href=\"Titanium.Android.Calendar.Reminder.html\">Titanium.Android.Calendar.Reminder</a>"
            }, 
            {
                "filename": "Titanium.Android.Calendar.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.getCalendarById-method", 
                "name": "getCalendarById", 
                "parameters": [
                    {
                        "description": "The system id of the calendar to be retrieved.", 
                        "name": "id", 
                        "type": "int"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "object", 
                "since": "1.5", 
                "value": "<p>Returns the <a href=\"Titanium.Android.Calendar.Calendar.html\">Titanium.Android.Calendar.Calendar</a> object specified by the given integer id.</p>"
            }, 
            {
                "filename": "Titanium.Android.Calendar.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "remove a previously added event listener"
            }
        ], 
        "notes": "<p>The API supports retrieving information about existing events and creating new events.  However, modifying or deleting existing events is not yet supported.  Additionally, recurring events are not yet supported.</p>", 
        "objects": [
            "Titanium.Android.Calendar.Alert", 
            "Titanium.Android.Calendar.Calendar", 
            "Titanium.Android.Calendar.Event", 
            "Titanium.Android.Calendar.Reminder"
        ], 
        "parameters": [], 
        "platforms": [
            "android"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.METHOD_ALERT-property", 
                "isClassProperty": true, 
                "name": "METHOD_ALERT", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for the <a href=\"Titanium.Android.Calendar.Reminder.html\">Titanium.Android.Calendar.Reminder</a> method property.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.METHOD_DEFAULT-property", 
                "isClassProperty": true, 
                "name": "METHOD_DEFAULT", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for the <a href=\"Titanium.Android.Calendar.Reminder.html\">Titanium.Android.Calendar.Reminder</a> method property.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.METHOD_EMAIL-property", 
                "isClassProperty": true, 
                "name": "METHOD_EMAIL", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for the <a href=\"Titanium.Android.Calendar.Reminder.html\">Titanium.Android.Calendar.Reminder</a> method property.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.METHOD_SMS-property", 
                "isClassProperty": true, 
                "name": "METHOD_SMS", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for the <a href=\"Titanium.Android.Calendar.Reminder.html\">Titanium.Android.Calendar.Reminder</a> method property.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.STATE_DISMISSED-property", 
                "isClassProperty": true, 
                "name": "STATE_DISMISSED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for the <a href=\"Titanium.Android.Calendar.Alert-object.html\">Titanium.Android.Calendar.Alert</a> state property.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.STATE_FIRED-property", 
                "isClassProperty": true, 
                "name": "STATE_FIRED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for the <a href=\"Titanium.Android.Calendar.Alert-object.html\">Titanium.Android.Calendar.Alert</a> state property.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.STATE_SCHEDULED-property", 
                "isClassProperty": true, 
                "name": "STATE_SCHEDULED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for the <a href=\"Titanium.Android.Calendar.Alert-object.html\">Titanium.Android.Calendar.Alert</a> state property.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.STATUS_CANCELED-property", 
                "isClassProperty": true, 
                "name": "STATUS_CANCELED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for the <a href=\"Titanium.Android.Calendar.Event.html\">Titanium.Android.Calendar.Event</a> status property.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.STATUS_CONFIRMED-property", 
                "isClassProperty": true, 
                "name": "STATUS_CONFIRMED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for the <a href=\"Titanium.Android.Calendar.Event.html\">Titanium.Android.Calendar.Event</a> status property.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.STATUS_TENTATIVE-property", 
                "isClassProperty": true, 
                "name": "STATUS_TENTATIVE", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for the <a href=\"Titanium.Android.Calendar.Event.html\">Titanium.Android.Calendar.Event</a> status property.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.VISIBILITY_CONFIDENTIAL-property", 
                "isClassProperty": true, 
                "name": "VISIBILITY_CONFIDENTIAL", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for the <a href=\"Titanium.Android.Calendar.Event.html\">Titanium.Android.Calendar.Event</a> visibility property.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.VISIBILITY_DEFAULT-property", 
                "isClassProperty": true, 
                "name": "VISIBILITY_DEFAULT", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for the <a href=\"Titanium.Android.Calendar.Event.html\">Titanium.Android.Calendar.Event</a> visibility property.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.VISIBILITY_PRIVATE-property", 
                "isClassProperty": true, 
                "name": "VISIBILITY_PRIVATE", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for the <a href=\"Titanium.Android.Calendar.Event.html\">Titanium.Android.Calendar.Event</a> visibility property.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.VISIBILITY_PUBLIC-property", 
                "isClassProperty": true, 
                "name": "VISIBILITY_PUBLIC", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for the <a href=\"Titanium.Android.Calendar.Event.html\">Titanium.Android.Calendar.Event</a> visibility property.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.allAlerts-property", 
                "isClassProperty": false, 
                "name": "allAlerts", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "array", 
                "type_jsca": "array", 
                "value": "<p>Array of <a href=\"Titanium.Android.Calendar.Alert-object.html\">Titanium.Android.Calendar.Alert</a> objects representing all alerts.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.allCalendars-property", 
                "isClassProperty": false, 
                "name": "allCalendars", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "array", 
                "type_jsca": "array", 
                "value": "<p>Array of <a href=\"Titanium.Android.Calendar.Calendar.html\">Titanium.Android.Calendar.Calendar</a> objects representing all the calendars known to the native calendar app.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.selectableCalendars-property", 
                "isClassProperty": false, 
                "name": "selectableCalendars", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "array", 
                "type_jsca": "array", 
                "value": "<p>Array of <a href=\"Titanium.Android.Calendar.Calendar.html\">Titanium.Android.Calendar.Calendar</a> objects representing calendars selected within the native calendar app. This may be a subset of allCalendars; for example, the native calendar application may know -- via your Gooogle account -- about calendars that you have access to but have not selected to be displayed in the native calendar app.</p>"
            }
        ], 
        "returns": "object", 
        "since": "1.5", 
        "subtype": null, 
        "type": "module"
    }, 
    "Titanium.Android.Calendar.Alert": {
        "deprecated": null, 
        "description": "<p>An object which represents a single alert for an event in an Android calendar.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Alert.alarmTime-property", 
                "isClassProperty": false, 
                "name": "alarmTime", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "date", 
                "type_jsca": "date", 
                "value": "<p>The date/time at which the alert's alarm is triggered.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Alert.begin-property", 
                "isClassProperty": false, 
                "name": "begin", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "date", 
                "type_jsca": "date", 
                "value": "<p>The date/time at which the corresponding event begins.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Alert.end-property", 
                "isClassProperty": false, 
                "name": "end", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "date", 
                "type_jsca": "date", 
                "value": "<p>The date/time at which the corresponding event ends.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Alert.eventId-property", 
                "isClassProperty": false, 
                "name": "eventId", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The integer id of the event for which the alert is set.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Alert.id-property", 
                "isClassProperty": false, 
                "name": "id", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>The id of the alert.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Alert.minutes-property", 
                "isClassProperty": false, 
                "name": "minutes", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The minutes before the event when the alert should trigger.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Alert.state-property", 
                "isClassProperty": false, 
                "name": "state", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The current state of the alert.  Possible values are the STATE_ constants in <a href=\"Titanium.Android.Calendar.html\">Titanium.Android.Calendar</a>.</p>"
            }
        ], 
        "returns": null, 
        "since": "1.5", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.Android.Calendar.Calendar": {
        "deprecated": null, 
        "description": "<p>An object which represents a single calendar in Android.</p>", 
        "events": [], 
        "examples": [
            {
                "code": "<p>See <a href=\"Titanium.Android.Calendar-module.html\">Titanium.Android.Calendar</a> for examples.</p>", 
                "description": "Events on December 5, 2015"
            }
        ], 
        "methods": [
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Calendar.createEvent-method", 
                "name": "createEvent", 
                "parameters": [
                    {
                        "description": "An object defining the properties of the event.  These correspond to properties of <a href=\"Titanium.Android.Calendar.Event.html\">Titanium.Android.Calendar.Event</a>.", 
                        "name": "properties", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "object", 
                "since": "1.5", 
                "value": "<p>Add an event to the calendar. Returns the created <a href=\"Titanium.Android.Calendar.Event.html\">Titanium.Android.Calendar.Event</a>.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Calendar.getEventById-method", 
                "name": "getEventById", 
                "parameters": [
                    {
                        "description": "The integer id of the event to return.", 
                        "name": "id", 
                        "type": "int"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "object", 
                "since": "1.5", 
                "value": "<p>Returns the <a href=\"Titanium.Android.Calendar.Event.html\">Titanium.Android.Calendar.Event</a> object for the event with the given integer id.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Calendar.getEventsBetweenDates-method", 
                "name": "getEventsBetweenDates", 
                "parameters": [
                    {
                        "description": "The start date.", 
                        "name": "date1", 
                        "type": "date"
                    }, 
                    {
                        "description": "The end date.", 
                        "name": "date2", 
                        "type": "date"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "array", 
                "since": "1.5", 
                "value": "<p>Returns an array of <a href=\"Titanium.Android.Calendar.Event.html\">Titanium.Android.Calendar.Event</a> objects with all events in the given date range.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Calendar.getEventsInDate-method", 
                "name": "getEventsInDate", 
                "parameters": [
                    {
                        "description": "The year of the desired date.", 
                        "name": "year", 
                        "type": "int"
                    }, 
                    {
                        "description": "The month of the desired date.  The month is zero-based, therefore January is 0 and December is 11.", 
                        "name": "month", 
                        "type": "int"
                    }, 
                    {
                        "description": "The day for which events should be returned.", 
                        "name": "day", 
                        "type": "int"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "array", 
                "since": "1.5", 
                "value": "<p>Returns an array of <a href=\"Titanium.Android.Calendar.Event.html\">Titanium.Android.Calendar.Event</a> objects with all events on the given date.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Calendar.getEventsInMonth-method", 
                "name": "getEventsInMonth", 
                "parameters": [
                    {
                        "description": "The year of the desired month.", 
                        "name": "year", 
                        "type": "int"
                    }, 
                    {
                        "description": "The month for which events should be returned.  The month is zero-based, therefore January is 0 and December is 11.", 
                        "name": "month", 
                        "type": "int"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "array", 
                "since": "1.5", 
                "value": "<p>Returns an array of <a href=\"Titanium.Android.Calendar.Event.html\">Titanium.Android.Calendar.Event</a> objects with all events in the given month.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Calendar.getEventsInYear-method", 
                "name": "getEventsInYear", 
                "parameters": [
                    {
                        "description": "The year for which all events should be returned.", 
                        "name": "year", 
                        "type": "int"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "array", 
                "since": "1.5", 
                "value": "<p>Returns an array of <a href=\"Titanium.Android.Calendar.Event.html\">Titanium.Android.Calendar.Event</a> objects with all events in the given year.</p>"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Calendar.hidden-property", 
                "isClassProperty": false, 
                "name": "hidden", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>Whether the calendar is hidden.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Calendar.id-property", 
                "isClassProperty": false, 
                "name": "id", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>The id of the calendar.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Calendar.name-property", 
                "isClassProperty": false, 
                "name": "name", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>The display name of the calendar.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Calendar.selected-property", 
                "isClassProperty": false, 
                "name": "selected", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>Whether the calendar is selected.</p>"
            }
        ], 
        "returns": null, 
        "since": "1.5", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.Android.Calendar.Event": {
        "deprecated": null, 
        "description": "<p>An object which represents a single event in an Android calendar.</p>", 
        "events": [], 
        "examples": [
            {
                "code": "<p>See <a href=\"Titanium.Android.Calendar-module.html\">Titanium.Android.Calendar</a> for examples of retrieving event information and creating events.</p>", 
                "description": "Event API"
            }
        ], 
        "methods": [
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Event.createAlert-method", 
                "name": "createAlert", 
                "parameters": [
                    {
                        "description": "Properties for the new alert, corresponding to properties of <a href=\"Titanium.Android.Calendar.Alert-object.html\">Titanium.Android.Calendar.Alert</a>.", 
                        "name": "data", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "object", 
                "since": "1.5", 
                "value": "<p>create an alert for this event.  Pass a dictionary object containing attributes corresponding to properties of <a href=\"Titanium.Android.Calendar.Alert-object.html\">Titanium.Android.Calendar.Alert</a>.  Returns the created alert.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Event.createReminder-method", 
                "name": "createReminder", 
                "parameters": [
                    {
                        "description": "Properties for the new reminder, corresponding to properties of <a href=\"Titanium.Android.Calendar.Reminder.html\">Titanium.Android.Calendar.Reminder</a>.", 
                        "name": "data", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "object", 
                "since": "1.5", 
                "value": "<p>create a reminder for this event.  Pass a dictionary object containing attributes corresponding to properties of <a href=\"Titanium.Android.Calendar.Reminder.html\">Titanium.Android.Calendar.Reminder</a>.  Returns the created Reminder.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Event.getExtendedProperty-method", 
                "name": "getExtendedProperty", 
                "parameters": [
                    {
                        "description": "The name of the extended property whose value should be returned.", 
                        "name": "name", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "string", 
                "since": "1.5", 
                "value": "<p>Returns the value of the given extended property key string.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Event.setExtendedProperty-method", 
                "name": "setExtendedProperty", 
                "parameters": [
                    {
                        "description": "The name of the extended property whose value should be set.", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "The value to which to set the named extended property.", 
                        "name": "value", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>Set the value of the named extended property.</p>"
            }
        ], 
        "notes": "<p>The API supports retrieving information about existing events and creating new events.  However, modifying or deleting existing events is not yet supported.  Additionally, recurring events are not yet supported.</p>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Event.alerts-property", 
                "isClassProperty": false, 
                "name": "alerts", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "array", 
                "type_jsca": "array", 
                "value": "<p>An array of <a href=\"Titanium.Android.Calendar.Alert-object.html\">Titanium.Android.Calendar.Alert</a> objects which are the alerts - if any - for this event.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Event.allDay-property", 
                "isClassProperty": false, 
                "name": "allDay", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>Whether the event is all day.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Event.begin-property", 
                "isClassProperty": false, 
                "name": "begin", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "date", 
                "type_jsca": "date", 
                "value": "<p>The date/time at which the event begins.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Event.description-property", 
                "isClassProperty": false, 
                "name": "description", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>The event description.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Event.end-property", 
                "isClassProperty": false, 
                "name": "end", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "date", 
                "type_jsca": "date", 
                "value": "<p>The date/time at which the event ends.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Event.extendedProperties-property", 
                "isClassProperty": false, 
                "name": "extendedProperties", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>An object containing extended properties of the event.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Event.hasAlarm-property", 
                "isClassProperty": false, 
                "name": "hasAlarm", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>Whether an alarm is scheduled for the event.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Event.hasExtendedProperties-property", 
                "isClassProperty": false, 
                "name": "hasExtendedProperties", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": ""
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Event.id-property", 
                "isClassProperty": false, 
                "name": "id", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>The id of the event.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Event.location-property", 
                "isClassProperty": false, 
                "name": "location", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>The event location.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Event.reminders-property", 
                "isClassProperty": false, 
                "name": "reminders", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "array", 
                "type_jsca": "array", 
                "value": "<p>An array of <a href=\"Titanium.Android.Calendar.Reminder.html\">Titanium.Android.Calendar.Reminder</a> objects which are the reminders - if any - for this event.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Event.status-property", 
                "isClassProperty": false, 
                "name": "status", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The status of the event.  Possible values are the STATUS constants in <a href=\"Titanium.Android.Calendar-module.html\">Titanium.Android.Calendar</a>.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Event.title-property", 
                "isClassProperty": false, 
                "name": "title", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>The title string for the event.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Event.visibility-property", 
                "isClassProperty": false, 
                "name": "visibility", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The event's visibility.  Possible values are the VISIBILITY constants in <a href=\"Titanium.Android.Calendar-module.html\">Titanium.Android.Calendar</a>.</p>"
            }
        ], 
        "returns": null, 
        "since": "1.5", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.Android.Calendar.Reminder": {
        "deprecated": null, 
        "description": "<p>An object which represents a single reminder for an event in an Android calendar.  Reminders should not be created directly, but rather by using the createReminder method of <a href=\"Titanium.Android.Calendar.Event-object.html\">Titanium.Android.Calendar.Event</a>.</p>", 
        "events": [], 
        "examples": [
            {
                "code": "<p>See <a href=\"Titanium.Android.Calendar-module.html\">Titanium.Android.Calendar</a> for examples of retrieving reminder information and creating reminders for events.</p>", 
                "description": "Reminder API"
            }
        ], 
        "methods": [], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Reminder.id-property", 
                "isClassProperty": false, 
                "name": "id", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>The id of the reminder.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Reminder.method-property", 
                "isClassProperty": false, 
                "name": "method", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The reminder method.  Possible values are the METHOD constants in <a href=\"Titanium.Android.Calendar-module.html\">Titanium.Android.Calendar</a>.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Calendar.Reminder.minutes-property", 
                "isClassProperty": false, 
                "name": "minutes", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The minutes before the event when the reminder should occur.</p>"
            }
        ], 
        "returns": null, 
        "since": "1.5", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.Android.Intent": {
        "deprecated": null, 
        "description": "<p>The Titanium binding of an <a href=\"http://developer.android.com/reference/android/content/Intent.html\">Android Intent</a></p>", 
        "events": [], 
        "examples": [
            {
                "code": "<pre><code>var intent = Ti.Android.createIntent({\n    action: Ti.Android.ACTION_MAIN,\n    url: 'activity1.js'\n});\nintent.addCategory(Ti.Android.CATEGORY_LAUNCHER);\nTi.Android.currentActivity.startActivity(intent);\n</code></pre>", 
                "description": "Create an Intent for Launching an Activity"
            }, 
            {
                "code": "<pre><code>var intent = Ti.Android.createIntent({\n    action: Ti.Android.ACTION_GET_CONTENT,\n    type: \"vnd.android.cursor.item/phone\"\n});\n</code></pre>", 
                "description": "Create an Intent to get a Contact URI from the user's contacts"
            }, 
            {
                "code": "<pre><code>var intent = Ti.Android.createIntent({\n    action: Ti.Android.ACTION_PICK,\n    type: \"image/*\"\n});\nintent.addCategory(Ti.Android.CATEGORY_DEFAULT);\n</code></pre>", 
                "description": "Pick a Photo from the Photo Gallery"
            }
        ], 
        "methods": [
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Intent.addCategory-method", 
                "name": "addCategory", 
                "parameters": [
                    {
                        "description": "The category name. See the category constants in <a href=\"Titanium.Android-module.html\">Titanium.Android</a>", 
                        "name": "name", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>Add a category to this Intent. See the category constants in <a href=\"Titanium.Android-module.html\">Titanium.Android</a>.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Intent.addFlags-method", 
                "name": "addFlags", 
                "parameters": [
                    {
                        "description": "the flags to add to the existing set.", 
                        "name": "flags", 
                        "type": "int"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>augment the existing flags on the Intent.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Intent.getBooleanExtra-method", 
                "name": "getBooleanExtra", 
                "parameters": [
                    {
                        "description": "The boolean property to get", 
                        "name": "name", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "boolean", 
                "since": "1.5", 
                "value": "<p>Get a boolean property from this Intent</p>"
            }, 
            {
                "filename": "Titanium.Android.Intent.getData-method", 
                "name": "getData", 
                "parameters": [], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>Get the Data URI from this Intent</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Intent.getDoubleExtra-method", 
                "name": "getDoubleExtra", 
                "parameters": [
                    {
                        "description": "The double property to get", 
                        "name": "name", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "double", 
                "since": "1.5", 
                "value": "<p>Get a double property from this Intent</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Intent.getIntExtra-method", 
                "name": "getIntExtra", 
                "parameters": [
                    {
                        "description": "The int property to get", 
                        "name": "name", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "int", 
                "since": "1.5", 
                "value": "<p>Get a int property from this Intent</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Intent.getLongExtra-method", 
                "name": "getLongExtra", 
                "parameters": [
                    {
                        "description": "The long property to get", 
                        "name": "name", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "int", 
                "since": "1.5", 
                "value": "<p>Get a long property from this Intent</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Intent.getStringExtra-method", 
                "name": "getStringExtra", 
                "parameters": [
                    {
                        "description": "The string property to get", 
                        "name": "name", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "string", 
                "since": "1.5", 
                "value": "<p>Get a string property from this Intent</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Intent.hasExtra-method", 
                "name": "hasExtra", 
                "parameters": [
                    {
                        "description": "The property name to check for", 
                        "name": "name", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "boolean", 
                "since": "1.5", 
                "value": "<p>Returns whether or not this Intent has a property</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Intent.putExtra-method", 
                "name": "putExtra", 
                "parameters": [
                    {
                        "description": "The property name", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "The property value", 
                        "name": "value", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>Put an extra property on this Intent</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Intent.putExtraUri-method", 
                "name": "putExtraUri", 
                "parameters": [
                    {
                        "description": "The property name", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "The URI string", 
                        "name": "value", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>Put a URI property on this Intent (useful for <a href=\"Titanium.Android.EXTRA_STREAM-property.html\">Titanium.Android.EXTRA_STREAM</a>)</p>"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Intent.action-property", 
                "isClassProperty": false, 
                "name": "action", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>An action constant from <a href=\"Titanium.Android-module.html\">Titanium.Android</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Intent.className-property", 
                "isClassProperty": false, 
                "name": "className", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>The Java class name of the activity (packageName must also be set)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Intent.data-property", 
                "isClassProperty": false, 
                "name": "data", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>The Intent's Data URI. See also Android's <a href=\"http://developer.android.com/reference/android/content/Intent.html#setData(android.net.Uri)\">Intent.setData</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Intent.flags-property", 
                "isClassProperty": false, 
                "name": "flags", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Intent flags. See the flags constants in <a href=\"Titanium.Android-module.html\">Titanium.Android</a>.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Intent.packageName-property", 
                "isClassProperty": false, 
                "name": "packageName", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>The fully-qualified Java package name of the activity</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Intent.type-property", 
                "isClassProperty": false, 
                "name": "type", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>The mime type for this Intent. See also Android's <a href=\"http://developer.android.com/reference/android/content/Intent.html#setType(java.lang.String)\">Intent.setType</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Intent.url-property", 
                "isClassProperty": false, 
                "name": "url", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>The URL to a Titanium Javascript Activity</p>"
            }
        ], 
        "returns": null, 
        "since": "1.5", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.Android.Menu": {
        "deprecated": null, 
        "description": "<p>The Titanium binding of an <a href=\"http://developer.android.com/reference/android/view/Menu.html\">Android Menu</a></p>", 
        "events": [], 
        "examples": [
            {
                "code": "<pre><code>activity.onCreateOptionsMenu = function(e) {\n    var menu = e.menu;\n    var menuItem = menu.add({ title: \"Item 1\" });\n    menuItem.setIcon(\"item1.png\");\n    menuItem.addEventListener(\"click\", function(e) {\n        Ti.API.debug(\"I was clicked\");\n    });\n};\n</code></pre>", 
                "description": "Simple menu create"
            }, 
            {
                "code": "<pre><code>var win = Ti.UI.createWindow({ fullscreen: true });\n\nvar LOGIN = 1, LOGOUT = 2;\nvar loggedIn = false;\nactivity.onCreateOptionsMenu = function(e) {\n    var menu = e.menu;\n    var login = menu.add({ title: \"Login\", itemId: LOGIN });\n    login.setIcon(\"login.png\");\n    login.addEventListener(\"click\", function(e) {\n        loggedIn = true;\n    });\n    var logout = menu.add({ title: \"Logout\", itemId: LOGOUT });\n    logout.setIcon(\"logout.png\");\n    logout.addEventListener(\"click\", function(e) {\n        loggedIn = false;\n    });\n};\n\nactivity.onPrepareOptionsMenu = function(e) {\n    var menu = e.menu;\n    menu.findItem(LOGIN).setVisible(!loggedIn);\n    menu.findItem(LOGOUT).setVisible(loggedIn);\n};\nwin.open();\n</code></pre>", 
                "description": "Dynamic menu create"
            }
        ], 
        "methods": [
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Menu.add-method", 
                "name": "add", 
                "parameters": [
                    {
                        "description": "creation options. Supported options are itemId, groupId, title, and order.", 
                        "name": "options", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "<a href=\"Titanium.Android.MenuItem.html\">Titanium.Android.MenuItem</a>", 
                "since": "1.5", 
                "value": "<p>creates a <a href=\"Titanium.Android.MenuItem.html\">Titanium.Android.MenuItem</a> from the passed creation options.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Menu.clear-method", 
                "name": "clear", 
                "parameters": [], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>clear all items from the menu. You should release all references you have retained to <a href=\"Titanium.Android.MenuItem.html\">Titanium.Android.MenuItem</a> previously created.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Menu.close-method", 
                "name": "close", 
                "parameters": [], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>close the menu if visible</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Menu.findItem-method", 
                "name": "findItem", 
                "parameters": [
                    {
                        "description": "integer itemId or <a href=\"Titanium.Android.MenuItem.html\">Titanium.Android.MenuItem</a>", 
                        "name": "item", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "<a href=\"Titanium.Android.MenuItem.html\">Titanium.Android.MenuItem</a>", 
                "since": "1.5", 
                "value": "<p>locate a <a href=\"Titanium.Android.MenuItem.html\">Titanium.Android.MenuItem</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Menu.getItem-method", 
                "name": "getItem", 
                "parameters": [
                    {
                        "description": "item at index where index < size()", 
                        "name": "index", 
                        "type": "int"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "<a href=\"Titanium.Android.MenuItem.html\">Titanium.Android.MenuItem</a>", 
                "since": "1.5", 
                "value": "<p>return the <a href=\"Titanium.Android.MenuItem.html\">Titanium.Android.MenuItem</a> at a specific index</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Menu.hasVisibleItems-method", 
                "name": "hasVisibleItems", 
                "parameters": [], 
                "platforms": [
                    "android"
                ], 
                "returntype": "boolean", 
                "since": "1.5", 
                "value": "<p>query for any visible menu items</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Menu.removeGroup-method", 
                "name": "removeGroup", 
                "parameters": [
                    {
                        "description": "groupId of items to remove.", 
                        "name": "groupId", 
                        "type": "int"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>remove all <a href=\"Titanium.Android.MenuItem.html\">Titanium.Android.MenuItem</a> with the specified groupId</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Menu.removeItem-method", 
                "name": "removeItem", 
                "parameters": [
                    {
                        "description": "itemId of item to remove.", 
                        "name": "itemId", 
                        "type": "int"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>remove a specific <a href=\"Titanium.Android.MenuItem.html\">Titanium.Android.MenuItem</a> by the specified itemId</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Menu.setGroupEnabled-method", 
                "name": "setGroupEnabled", 
                "parameters": [
                    {
                        "description": "groupId to enable or disable", 
                        "name": "groupId", 
                        "type": "int"
                    }, 
                    {
                        "description": "true to enable, false to disable.", 
                        "name": "enabled", 
                        "type": "boolean"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>enable or disable a group of <a href=\"Titanium.Android.MenuItem.html\">Titanium.Android.MenuItem</a> by groupId</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Menu.setGroupVisible-method", 
                "name": "setGroupVisible", 
                "parameters": [
                    {
                        "description": "groupId to enable or disable", 
                        "name": "groupId", 
                        "type": "int"
                    }, 
                    {
                        "description": "true to show, false to hide", 
                        "name": "visible", 
                        "type": "boolean"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>show or hide a group of <a href=\"Titanium.Android.MenuItem.html\">Titanium.Android.MenuItem</a> by groupId</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Menu.size-method", 
                "name": "size", 
                "parameters": [], 
                "platforms": [
                    "android"
                ], 
                "returntype": "int", 
                "since": "1.5", 
                "value": "<p>number of <a href=\"Titanium.Android.MenuItem.html\">Titanium.Android.MenuItem</a> in this menu</p>"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Menu.items-property", 
                "isClassProperty": false, 
                "name": "items", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "array", 
                "type_jsca": "array", 
                "value": "<p>array of <a href=\"Titanium.Android.MenuItem.html\">Titanium.Android.MenuItem</a></p>"
            }
        ], 
        "returns": null, 
        "since": "1.5", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.Android.MenuItem": {
        "deprecated": null, 
        "description": "<p>The Titanium binding of an <a href=\"http://developer.android.com/reference/android/view/MenuItem.html\">Android MenuItem</a></p>", 
        "events": [
            {
                "filename": "Titanium.Android.MenuItem.click-event", 
                "name": "click", 
                "properties": {
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>fired when the user presses the button</p>"
            }
        ], 
        "examples": [], 
        "methods": [
            {
                "deprecated": false, 
                "filename": "Titanium.Android.MenuItem.getCondensedTitle-method", 
                "name": "getCondensedTitle", 
                "parameters": [], 
                "platforms": [
                    "android"
                ], 
                "returntype": "string", 
                "since": "1.5", 
                "value": "<p>retrieve the condensed title of the item</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.MenuItem.getGroupId-method", 
                "name": "getGroupId", 
                "parameters": [], 
                "platforms": [
                    "android"
                ], 
                "returntype": "int", 
                "since": "1.5", 
                "value": "<p>retrieve the groupId for this item</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.MenuItem.getItemId-method", 
                "name": "getItemId", 
                "parameters": [], 
                "platforms": [
                    "android"
                ], 
                "returntype": "int", 
                "since": "1.5", 
                "value": "<p>retrieve the itemId for this item</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.MenuItem.getOrder-method", 
                "name": "getOrder", 
                "parameters": [], 
                "platforms": [
                    "android"
                ], 
                "returntype": "int", 
                "since": "1.5", 
                "value": "<p>retrieve the sort order</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.MenuItem.getTitle-method", 
                "name": "getTitle", 
                "parameters": [], 
                "platforms": [
                    "android"
                ], 
                "returntype": "string", 
                "since": "1.5", 
                "value": "<p>retrieve the title of the item</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.MenuItem.isEnabled-method", 
                "name": "isEnabled", 
                "parameters": [], 
                "platforms": [
                    "android"
                ], 
                "returntype": "boolean", 
                "since": "1.5", 
                "value": "<p>retrieve the enabled state of the menu</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.MenuItem.isVisible-method", 
                "name": "isVisible", 
                "parameters": [], 
                "platforms": [
                    "android"
                ], 
                "returntype": "boolean", 
                "since": "1.5", 
                "value": "<p>retrieve the visible state of the menu</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.MenuItem.setCondensedTitle-method", 
                "name": "setCondensedTitle", 
                "parameters": [
                    {
                        "description": "new condensed title", 
                        "name": "condensedTitle", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>set the condensed title for the item</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.MenuItem.setEnabled-method", 
                "name": "setEnabled", 
                "parameters": [
                    {
                        "description": "true to enable item, false to disable", 
                        "name": "enabled", 
                        "type": "boolean"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>set the enabled state of the item</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.MenuItem.setIcon-method", 
                "name": "setIcon", 
                "parameters": [
                    {
                        "description": "icon to use with the item", 
                        "name": "icon", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>set the icon for the item</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.MenuItem.setTitle-method", 
                "name": "setTitle", 
                "parameters": [
                    {
                        "description": "new title", 
                        "name": "title", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>set the title for the item</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.MenuItem.setVisible-method", 
                "name": "setVisible", 
                "parameters": [
                    {
                        "description": "true to show the item, false to hide", 
                        "name": "visible", 
                        "type": "boolean"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>set the visible state of the item</p>"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Android.MenuItem.enabled-property", 
                "isClassProperty": false, 
                "name": "enabled", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>set the enabled state of the item</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.MenuItem.groupId-property", 
                "isClassProperty": false, 
                "name": "groupId", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>groupId for this item (Read-only)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.MenuItem.itemId-property", 
                "isClassProperty": false, 
                "name": "itemId", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>itemId for this item (Read-only)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.MenuItem.order-property", 
                "isClassProperty": false, 
                "name": "order", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>integer used for controlling sort order (Read-only)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.MenuItem.title-property", 
                "isClassProperty": false, 
                "name": "title", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>item title</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.MenuItem.titleCondensed-property", 
                "isClassProperty": false, 
                "name": "titleCondensed", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>condensed item title</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.MenuItem.visible-property", 
                "isClassProperty": false, 
                "name": "visible", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>set the visible state of the item</p>"
            }
        ], 
        "returns": null, 
        "since": "1.5", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.Android.Notification": {
        "deprecated": null, 
        "description": "<p>The Titanium binding of an <a href=\"http://developer.android.com/reference/android/app/Notification.html\">Android Notification</a>. </p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.Android.Notification.setLatestEventInfo-method", 
                "name": "setLatestEventInfo", 
                "parameters": [], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>Sets the latest event info using the builtin Notification View for this notification. See Android's documentation for <a href=\"http://developer.android.com/reference/android/app/Notification.html#setLatestEventInfo(android.content.Context, java.lang.CharSequence, java.lang.CharSequence, android.app.PendingIntent)\">setLatestEventInfo</a></p>"
            }
        ], 
        "notes": "<p>If you pass contentTitle and/or contentText into <a href=\"Titanium.Android.createNotification-method.html\">Titanium.Android.createNotification</a>, then setLatestEventInfo will automatically be called with those properties (there's no need to call it separately unless you want to). You can also use a custom layout.xml wrapped in a <a href=\"Titanium.Android.RemoteViews.html\">Titanium.Android.RemoteViews</a> object in the contentView property, which gives more fine grained control and customization to how the notification actually behaves.</p>\n<p>Also see <a href=\"http://developer.android.com/guide/topics/ui/notifiers/notifications.html\">Android's developer guide for Notifications</a></p>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Notification.audioStreamType-property", 
                "isClassProperty": false, 
                "name": "audioStreamType", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The audio stream type to use when playing the sound.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Notification.contentIntent-property", 
                "isClassProperty": false, 
                "name": "contentIntent", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>The <a href=\"Titanium.Android.PendingIntent.html\">Titanium.Android.PendingIntent</a> to execute when the expanded status entry is clicked.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Notification.contentText-property", 
                "isClassProperty": false, 
                "name": "contentText", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>Description text of the notification.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Notification.contentTitle-property", 
                "isClassProperty": false, 
                "name": "contentTitle", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>Title of the notification.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Notification.defaults-property", 
                "isClassProperty": false, 
                "name": "defaults", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Specifies which values should be taken from the defaults.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Notification.deleteIntent-property", 
                "isClassProperty": false, 
                "name": "deleteIntent", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>The <a href=\"Titanium.Android.PendingIntent.html\">Titanium.Android.PendingIntent</a> to execute when the status entry is deleted by the user with the \"Clear All Notifications\" button.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Notification.flags-property", 
                "isClassProperty": false, 
                "name": "flags", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Set of flags for the notification, defaults to <a href=\"Titanium.Android.FLAG_AUTO_CANCEL-property.html\">Titanium.Android.FLAG_AUTO_CANCEL</a>. Possible values: <a href=\"Titanium.Android.FLAG_AUTO_CANCEL-property.html\">Titanium.Android.FLAG_AUTO_CANCEL</a>, <a href=\"Titanium.Android.FLAG_INSISTENT-property.html\">Titanium.Android.FLAG_INSISTENT</a>, <a href=\"Titanium.Android.FLAG_NO_CLEAR-property.html\">Titanium.Android.FLAG_NO_CLEAR</a>, <a href=\"Titanium.Android.FLAG_ONGOING_EVENT-property.html\">Titanium.Android.FLAG_ONGOING_EVENT</a>, <a href=\"Titanium.Android.FLAG_ONLY_ALERT_ONCE-property.html\">Titanium.Android.FLAG_ONLY_ALERT_ONCE</a>, <a href=\"Titanium.Android.FLAG_SHOW_LIGHTS-property.html\">Titanium.Android.FLAG_SHOW_LIGHTS</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Notification.icon-property", 
                "isClassProperty": false, 
                "name": "icon", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int, string", 
                "type_jsca": "int, string", 
                "value": "<p>A resource id or URL to an icon (the URL must be an image located in Resources/android/images/<density> or an Android content URI)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Notification.ledARGB-property", 
                "isClassProperty": false, 
                "name": "ledARGB", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The color for the LED to blink</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Notification.ledOffMS-property", 
                "isClassProperty": false, 
                "name": "ledOffMS", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The number of milliseconds for the LED to be off while it's flashing.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Notification.ledOnMS-property", 
                "isClassProperty": false, 
                "name": "ledOnMS", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The number of milliseconds for the LED to be on while it's flashing.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Notification.number-property", 
                "isClassProperty": false, 
                "name": "number", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The number of events that this notification represents.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Notification.sound-property", 
                "isClassProperty": false, 
                "name": "sound", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>A URL to the sound to play (supports Android + Titanium URLs)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Notification.tickerText-property", 
                "isClassProperty": false, 
                "name": "tickerText", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>Text to scroll across the screen when this item is added to the status bar.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Notification.when-property", 
                "isClassProperty": false, 
                "name": "when", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "date, int", 
                "type_jsca": "date, int", 
                "value": "<p>The timestamp for the notification (defaults to the current time)</p>"
            }
        ], 
        "returns": null, 
        "since": "1.5", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.Android.NotificationManager": {
        "deprecated": null, 
        "description": "<p>Module to notify users of events that happen. It is a thin wrapper on <a href=\"http://developer.android.com/reference/android/app/NotificationManager.html\">NotificationManager</a>.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.Android.NotificationManager.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.NotificationManager.cancel-method", 
                "name": "cancel", 
                "parameters": [
                    {
                        "description": "The id you assigned to a notification.", 
                        "name": "id", 
                        "type": "int"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>Cancel a previously shown notification.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.NotificationManager.cancelAll-method", 
                "name": "cancelAll", 
                "parameters": [], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>Cancel all previously shown notifications.</p>"
            }, 
            {
                "filename": "Titanium.Android.NotificationManager.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.NotificationManager.notify-method", 
                "name": "notify", 
                "parameters": [
                    {
                        "description": "An id that may be used to cancel a shown notification.", 
                        "name": "id", 
                        "type": "int"
                    }, 
                    {
                        "description": "An instance of <a href=\"Titanium.Android.Notification-object.html\">Titanium.Android.Notification</a> created with <a href=\"Titanium.Android.createNotification-method.html\">Titanium.Android.createNotification</a>.", 
                        "name": "notification", 
                        "type": "<a href=\"Titanium.Android.Notification-object.html\">Titanium.Android.Notification</a>"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>Add a persistent notification to the status bar.</p>"
            }, 
            {
                "filename": "Titanium.Android.NotificationManager.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "remove a previously added event listener"
            }
        ], 
        "notes": "<p>The constants above are taken from <a href=\"http://developer.android.com/reference/android/app/Notification.html\">Notification</a>.</p>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Android.NotificationManager.DEFAULT_ALL-property", 
                "isClassProperty": true, 
                "name": "DEFAULT_ALL", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Use all default values (where applicable).</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.NotificationManager.DEFAULT_LIGHTS-property", 
                "isClassProperty": true, 
                "name": "DEFAULT_LIGHTS", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Use the default notification lights.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.NotificationManager.DEFAULT_SOUND-property", 
                "isClassProperty": true, 
                "name": "DEFAULT_SOUND", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Use the default notification sound.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.NotificationManager.DEFAULT_VIBRATE-property", 
                "isClassProperty": true, 
                "name": "DEFAULT_VIBRATE", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Use the default notification vibrate.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.NotificationManager.FLAG_AUTO_CANCEL-property", 
                "isClassProperty": true, 
                "name": "FLAG_AUTO_CANCEL", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Bit to be bitwise-ored into the flags field that should be set if the notification should be canceled when it is clicked by the user.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.NotificationManager.FLAG_INSISTENT-property", 
                "isClassProperty": true, 
                "name": "FLAG_INSISTENT", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Bit to be bitwise-ored into the flags field that if set, the audio will be repeated until the notification is cancelled or the notification window is opened.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.NotificationManager.FLAG_NO_CLEAR-property", 
                "isClassProperty": true, 
                "name": "FLAG_NO_CLEAR", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Bit to be bitwise-ored into the flags field that should be set if the notification should not be canceled when the user clicks the Clear all button.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.NotificationManager.FLAG_ONGOING_EVENT-property", 
                "isClassProperty": true, 
                "name": "FLAG_ONGOING_EVENT", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Bit to be bitwise-ored into the flags field that should be set if this notification is in reference to something that is ongoing, like a phone call.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.NotificationManager.FLAG_ONLY_ALERT_ONCE-property", 
                "isClassProperty": true, 
                "name": "FLAG_ONLY_ALERT_ONCE", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Bit to be bitwise-ored into the flags field that should be set if you want the sound and/or vibration play each time the notification is sent, even if it has not been canceled before that.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.NotificationManager.FLAG_SHOW_LIGHTS-property", 
                "isClassProperty": true, 
                "name": "FLAG_SHOW_LIGHTS", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Bit to be bitwise-ored into the flags field that should be set if you want the LED on for this notification.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.NotificationManager.STREAM_DEFAULT-property", 
                "isClassProperty": true, 
                "name": "STREAM_DEFAULT", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Use this constant as the value for audioStreamType to request that the default stream type for notifications be used.</p>"
            }
        ], 
        "returns": null, 
        "since": "1.5", 
        "subtype": null, 
        "type": "module"
    }, 
    "Titanium.Android.PendingIntent": {
        "deprecated": null, 
        "description": "<p>The Titanium binding of an <a href=\"http://developer.android.com/reference/android/app/PendingIntent.html\">Android Pending Intent</a></p>", 
        "events": [], 
        "examples": [], 
        "methods": [], 
        "notes": "<p>The type of Intent you choose will effect what kind of PendingIntent is created. Each type corresponds directly with a get method on Android's PendingIntent:</p>\n<ul>\n<li><a href=\"Titanium.Android.createIntent-method.html\">Titanium.Android.createIntent</a> uses <a href=\"http://developer.android.com/reference/android/app/PendingIntent.html#getActivity(android.content.Context, int, android.content.Intent, int)\">PendingIntent.getActivity</a></li>\n<li><a href=\"Titanium.Android.createBroadcastIntent-method.html\">Titanium.Android.createBroadcastIntent</a> uses <a href=\"http://developer.android.com/reference/android/app/PendingIntent.html#getBroadcast(android.content.Context, int, android.content.Intent, int)\">PendingIntent.getBroadcast</a></li>\n<li><a href=\"Titanium.Android.createServiceIntent-method.html\">Titanium.Android.createServiceIntent</a> uses <a href=\"http://developer.android.com/reference/android/app/PendingIntent.html#getService(android.content.Context, int, android.content.Intent, int)\">PendingIntent.getService</a></li>\n</ul>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Android.PendingIntent.flags-property", 
                "isClassProperty": false, 
                "name": "flags", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Flags used for creating the Pending Intent. Possible values are <a href=\"Titanium.Android.FLAG_CANCEL_CURRENT-property.html\">Titanium.Android.FLAG_CANCEL_CURRENT</a>, <a href=\"Titanium.Android.FLAG_NO_CREATE-property.html\">Titanium.Android.FLAG_NO_CREATE</a>, <a href=\"Titanium.Android.FLAG_ONE_SHOT-property.html\">Titanium.Android.FLAG_ONE_SHOT</a>, and <a href=\"Titanium.Android.FLAG_UPDATE_CURRENT-property.html\">Titanium.Android.FLAG_UPDATE_CURRENT</a>.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.PendingIntent.intent-property", 
                "isClassProperty": false, 
                "name": "intent", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "<a href=\"Titanium.Android.Intent-object.html\">Titanium.Android.Intent</a>", 
                "type_jsca": "`Titanium.Android.Intent`", 
                "value": "<p>The intent data to pass to the Activity launched by this PendingIntent</p>"
            }
        ], 
        "returns": null, 
        "since": "1.5", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.Android.R": {
        "deprecated": null, 
        "description": "<p>The Titanium binding of <a href=\"http://developer.android.com/reference/android/R.html\">android.R</a>.  Note that this accesses Android system-wide resources, not your application's resources.  To access your application's resources, you want <a href=\"Titanium.App.Android.R.html\">Titanium.App.Android.R</a>.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [], 
        "notes": "<p>These properties and sub-properties are queried directly against the <tt>android.R</tt> class, and should have the same syntax. For example, to retrieve the \"OK\" string in Android:</p>\n<p><tt>Ti.Android.currentActivity.getString(Ti.Android.R.string.ok);</tt></p>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Android.R.anim-property", 
                "isClassProperty": false, 
                "name": "anim", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>Animation resources, see <a href=\"http://developer.android.com/reference/android/R.anim.html\">http://developer.android.com/reference/android/R.anim.html</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.R.array-property", 
                "isClassProperty": false, 
                "name": "array", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>Array resources, see <a href=\"http://developer.android.com/reference/android/R.array.html\">http://developer.android.com/reference/android/R.array.html</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.R.attr-property", 
                "isClassProperty": false, 
                "name": "attr", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>Attribute resources, see <a href=\"http://developer.android.com/reference/android/R.attr.html\">http://developer.android.com/reference/android/R.attr.html</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.R.color-property", 
                "isClassProperty": false, 
                "name": "color", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>Color resources, see <a href=\"http://developer.android.com/reference/android/R.color.html\">http://developer.android.com/reference/android/R.color.html</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.R.dimen-property", 
                "isClassProperty": false, 
                "name": "dimen", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>Dimension resources, see <a href=\"http://developer.android.com/reference/android/R.dimen.html\">http://developer.android.com/reference/android/R.dimen.html</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.R.drawable-property", 
                "isClassProperty": false, 
                "name": "drawable", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>Drawable resources, see <a href=\"http://developer.android.com/reference/android/R.drawable.html\">http://developer.android.com/reference/android/R.drawable.html</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.R.id-property", 
                "isClassProperty": false, 
                "name": "id", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>ID resources, see <a href=\"http://developer.android.com/reference/android/R.id.html\">http://developer.android.com/reference/android/R.id.html</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.R.integer-property", 
                "isClassProperty": false, 
                "name": "integer", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>Integer resources, see <a href=\"http://developer.android.com/reference/android/R.integer.html\">http://developer.android.com/reference/android/R.integer.html</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.R.layout-property", 
                "isClassProperty": false, 
                "name": "layout", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>Layout resources, see <a href=\"http://developer.android.com/reference/android/R.layout.html\">http://developer.android.com/reference/android/R.layout.html</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.R.string-property", 
                "isClassProperty": false, 
                "name": "string", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>String resources, see <a href=\"http://developer.android.com/reference/android/R.string.html\">http://developer.android.com/reference/android/R.string.html</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.R.style-property", 
                "isClassProperty": false, 
                "name": "style", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>Style resources, see <a href=\"http://developer.android.com/reference/android/R.style.html\">http://developer.android.com/reference/android/R.style.html</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.R.styleable-property", 
                "isClassProperty": false, 
                "name": "styleable", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>Styleable reosurces, see <a href=\"http://developer.android.com/reference/android/R.styleable.html\">http://developer.android.com/reference/android/R.styleable.html</a></p>"
            }
        ], 
        "returns": null, 
        "since": "1.5", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.Android.RemoteViews": {
        "deprecated": null, 
        "description": "<p>The Titanium binding of <a href=\"http://developer.android.com/reference/android/widget/RemoteViews.html\">Android RemoteViews</a>. RemoteViews are an API for referencing and updating views that live in another process (i.e. in a <a href=\"Titanium.Android.Notification-object.html\">Titanium.Android.Notification</a>)</p>", 
        "events": [], 
        "examples": [
            {
                "code": "<pre><code>var AppR = Ti.App.Android.R;\nvar customLayout = Ti.Android.createRemoteViews(AppR.layout.custom_layout);\ncustomLayout.setTextViewText(AppR.id.custom_text, \"Hello World\");\n</code></pre>", 
                "description": "Create a RemoteViews based on a custom layout called \"custom_layout.xml\", and set a label's text."
            }
        ], 
        "methods": [
            {
                "deprecated": false, 
                "filename": "Titanium.Android.RemoteViews.setBoolean-method", 
                "name": "setBoolean", 
                "parameters": [
                    {
                        "description": "The resource id of the View (also see <a href=\"Titanium.App.Android.R.html\">Titanium.App.Android.R</a>)", 
                        "name": "viewId", 
                        "type": "int"
                    }, 
                    {
                        "description": "The name of the method to call", 
                        "name": "methodName", 
                        "type": "string"
                    }, 
                    {
                        "description": "The boolean to pass to the method", 
                        "name": "value", 
                        "type": "boolean"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.6", 
                "value": "<p>Call a method taking one boolean on a view in the layout for this RemoteViews. See Android's documentation for <a href=\"http://developer.android.com/reference/android/widget/RemoteViews.html#setBoolean(int, java.lang.String, boolean)\">setBoolean</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.RemoteViews.setChronometer-method", 
                "name": "setChronometer", 
                "parameters": [
                    {
                        "description": "The resource id of the Chronometer whose values will change (also see <a href=\"Titanium.App.Android.R.html\">Titanium.App.Android.R</a>)", 
                        "name": "viewId", 
                        "type": "int"
                    }, 
                    {
                        "description": "The time at which the timer would have read 0:00", 
                        "name": "base", 
                        "type": "date"
                    }, 
                    {
                        "description": "The Chronometer format string, or null to simply display the timer value", 
                        "name": "format", 
                        "type": "string"
                    }, 
                    {
                        "description": "True if you want the clock to be started, false if not", 
                        "name": "started", 
                        "type": "boolean"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.6", 
                "value": "<p>Sets a chronometer's base, format, and started flag. See Android's documentation for <a href=\"http://developer.android.com/reference/android/widget/RemoteViews.html#setChronometer(int, long, java.lang.String, boolean)\">setChronometer</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.RemoteViews.setDouble-method", 
                "name": "setDouble", 
                "parameters": [
                    {
                        "description": "The resource id of the View (also see <a href=\"Titanium.App.Android.R.html\">Titanium.App.Android.R</a>)", 
                        "name": "viewId", 
                        "type": "int"
                    }, 
                    {
                        "description": "The name of the method to call", 
                        "name": "methodName", 
                        "type": "string"
                    }, 
                    {
                        "description": "The double to pass to the method", 
                        "name": "value", 
                        "type": "double"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.6", 
                "value": "<p>Call a method taking one double on a view in the layout for this RemoteViews. See Android's documentation for <a href=\"http://developer.android.com/reference/android/widget/RemoteViews.html#setDouble(int, java.lang.String, double)\">setDouble</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.RemoteViews.setImageViewResource-method", 
                "name": "setImageViewResource", 
                "parameters": [
                    {
                        "description": "The resource id of the ImageView whose image should change (also see <a href=\"Titanium.App.Android.R.html\">Titanium.App.Android.R</a>)", 
                        "name": "viewId", 
                        "type": "int"
                    }, 
                    {
                        "description": "The resource id of the image", 
                        "name": "srcId", 
                        "type": "int"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.6", 
                "value": "<p>Sets an ImageView's source given a Resource ID. See Android's documentation for <a href=\"http://developer.android.com/reference/android/widget/RemoteViews.html#setImageViewResource(int, int)\">setImageViewResource</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.RemoteViews.setImageViewUri-method", 
                "name": "setImageViewUri", 
                "parameters": [
                    {
                        "description": "The resource id of the ImageView whose image should change (also see <a href=\"Titanium.App.Android.R.html\">Titanium.App.Android.R</a>)", 
                        "name": "viewId", 
                        "type": "int"
                    }, 
                    {
                        "description": "The URI of the image (both Android and Titanium URLs are supported)", 
                        "name": "uri", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.6", 
                "value": "<p>Sets an ImageView's source given a URI (supports both Android and Titanium URLs). See Android's documentation for <a href=\"http://developer.android.com/reference/android/widget/RemoteViews.html#setImageViewUri(int, android.net.Uri)\">setImageViewUri</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.RemoteViews.setInt-method", 
                "name": "setInt", 
                "parameters": [
                    {
                        "description": "The resource id of the View (also see <a href=\"Titanium.App.Android.R.html\">Titanium.App.Android.R</a>)", 
                        "name": "viewId", 
                        "type": "int"
                    }, 
                    {
                        "description": "The name of the method to call", 
                        "name": "methodName", 
                        "type": "string"
                    }, 
                    {
                        "description": "The int to pass to the method", 
                        "name": "value", 
                        "type": "int"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.6", 
                "value": "<p>Call a method taking one int on a view in the layout for this RemoteViews. See Android's documentation for <a href=\"http://developer.android.com/reference/android/widget/RemoteViews.html#setInt(int, java.lang.String, int)\">setInt</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.RemoteViews.setOnClickPendingIntent-method", 
                "name": "setOnClickPendingIntent", 
                "parameters": [
                    {
                        "description": "The resource id of the View to add a click listener to (also see <a href=\"Titanium.App.Android.R.html\">Titanium.App.Android.R</a>)", 
                        "name": "viewId", 
                        "type": "int"
                    }, 
                    {
                        "description": "The PendingIntent to execute when this view is clicked", 
                        "name": "pendingIntent", 
                        "type": "<tt>Ti.Android.PendingIntent</tt>"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.6", 
                "value": "<p>Launches a <a href=\"Titanium.Android.PendingIntent-object.html\">Titanium.Android.PendingIntent</a> when the specified view is clicked. See Android's documentation for <a href=\"http://developer.android.com/reference/android/widget/RemoteViews.html#setOnClickPendingIntent(int, android.app.PendingIntent)\">setOnClickPendingIntent</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.RemoteViews.setProgressBar-method", 
                "name": "setProgressBar", 
                "parameters": [
                    {
                        "description": "The resource id of the ProgressBar to change (also see <a href=\"Titanium.App.Android.R.html\">Titanium.App.Android.R</a>)", 
                        "name": "viewId", 
                        "type": "int"
                    }, 
                    {
                        "description": "The new max value of the ProgressBar", 
                        "name": "max", 
                        "type": "int"
                    }, 
                    {
                        "description": "The new progress value of the ProgressBar (from 0..max)", 
                        "name": "progress", 
                        "type": "int"
                    }, 
                    {
                        "description": "Whether or not the progress in indeterminate", 
                        "name": "indeterminate", 
                        "type": "boolean"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.6", 
                "value": "<p>Sets the progress, max value, and indeterminate flag of a ProgressBar. See Android's documentation for <a href=\"http://developer.android.com/reference/android/widget/RemoteViews.html#setProgressBar(int, int, int, boolean)\">setProgressBar</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.RemoteViews.setString-method", 
                "name": "setString", 
                "parameters": [
                    {
                        "description": "The resource id of the View (also see <a href=\"Titanium.App.Android.R.html\">Titanium.App.Android.R</a>)", 
                        "name": "viewId", 
                        "type": "int"
                    }, 
                    {
                        "description": "The name of the method to call", 
                        "name": "methodName", 
                        "type": "string"
                    }, 
                    {
                        "description": "The String to pass to the method", 
                        "name": "value", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.6", 
                "value": "<p>Call a method taking one String on a view in the layout for this RemoteViews. See Android's documentation for <a href=\"http://developer.android.com/reference/android/widget/RemoteViews.html#setString(int, java.lang.String, java.lang.String)\">setString</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.RemoteViews.setTextColor-method", 
                "name": "setTextColor", 
                "parameters": [
                    {
                        "description": "The resource id of the View whose text color will change (also see <a href=\"Titanium.App.Android.R.html\">Titanium.App.Android.R</a>)", 
                        "name": "viewId", 
                        "type": "int"
                    }, 
                    {
                        "description": "A color as an integer", 
                        "name": "color", 
                        "type": "int"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.6", 
                "value": "<p>Sets the text color of a view. See Android's documentation for <a href=\"http://developer.android.com/reference/android/widget/RemoteViews.html#setTextColor(int, int)\">setTextColor</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.RemoteViews.setTextViewText-method", 
                "name": "setTextViewText", 
                "parameters": [
                    {
                        "description": "The resource id of the TextView whose text will change (also see <a href=\"Titanium.App.Android.R.html\">Titanium.App.Android.R</a>)", 
                        "name": "viewId", 
                        "type": "int"
                    }, 
                    {
                        "description": "The new text of the TextView", 
                        "name": "text", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.6", 
                "value": "<p>Sets the text of a TextView. See Android's documentation for <a href=\"http://developer.android.com/reference/android/widget/RemoteViews.html#setTextViewText(int, java.lang.CharSequence)\">setTextViewText</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.RemoteViews.setUri-method", 
                "name": "setUri", 
                "parameters": [
                    {
                        "description": "The resource id of the View (also see <a href=\"Titanium.App.Android.R.html\">Titanium.App.Android.R</a>)", 
                        "name": "viewId", 
                        "type": "int"
                    }, 
                    {
                        "description": "The name of the method to call", 
                        "name": "methodName", 
                        "type": "string"
                    }, 
                    {
                        "description": "The URI (as a string) to pass to the method", 
                        "name": "value", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.6", 
                "value": "<p>Call a method taking one Uri on a view in the layout for this RemoteViews. See Android's documentation for <a href=\"http://developer.android.com/reference/android/widget/RemoteViews.html#setUri(int, java.lang.String, android.net.Uri)\">setUri</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.RemoteViews.setViewVisibility-method", 
                "name": "setViewVisibility", 
                "parameters": [
                    {
                        "description": "The resource id of the View whose visibility will change (also see <a href=\"Titanium.App.Android.R.html\">Titanium.App.Android.R</a>)", 
                        "name": "viewId", 
                        "type": "int"
                    }, 
                    {
                        "description": "The visibility, one of <a href=\"Titanium.Android.VISIBLE.html\">Titanium.Android.VISIBLE</a>, <a href=\"Titanium.Android.INVISIBLE.html\">Titanium.Android.INVISIBLE</a>, or <a href=\"Titanium.Android.GONE.html\">Titanium.Android.GONE</a>", 
                        "name": "visibility", 
                        "type": "int"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.6", 
                "value": "<p>Sets the visibility of a View. See Android's documentation for <a href=\"http://developer.android.com/reference/android/widget/RemoteViews.html#setViewVisibility(int, int)\">setViewVisibility</a></p>"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android"
        ], 
        "properties": [], 
        "returns": null, 
        "since": "1.6", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.Android.Service": {
        "deprecated": null, 
        "description": "<p>The Titanium binding of an <a href=\"http://developer.android.com/reference/android/app/Service.html\">Android Service</a>.  Can be used to start/stop the service directly and listen for service-specific events.  In the Javascript-based services you write, this can be referenced with <a href=\"Titanium.Android.currentService.html\">Titanium.Android.currentService</a>.  You can create an instance of the service with <a href=\"Titanium.Android.createService-method.html\">Titanium.Android.createService</a>.</p>", 
        "events": [
            {
                "filename": "Titanium.Android.Service.pause-event", 
                "name": "pause", 
                "properties": {
                    "iteration": "<p>incrementing integer indicating which iteration of an interval-based Service is pausing.  For example, if you have an interval-based Service running every 10 seconds, iteration 3 would occur at about 30 seconds after you start the instance (assuming your service code runs quickly.)</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>For Javascript-based Services which you create, <tt>pause</tt> fires after each time the Javascript code executes.  <tt>resume</tt> and <tt>pause</tt> happen in pairs, with <tt>resume</tt> firing just before your Javascript service code executes, and <tt>pause</tt> just after.</p>"
            }, 
            {
                "filename": "Titanium.Android.Service.resume-event", 
                "name": "resume", 
                "properties": {
                    "iteration": "<p>incrementing integer indicating which iteration of an interval-based Service is resuming.  For example, if you have an interval-based Service running every 10 seconds, iteration 3 would occur at about 30 seconds after you start the instance (assuming your service code runs quickly.)</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>For Javascript-based Services which you create, <tt>resume</tt> fires each time the Javascript code executes.  For example, if your Service runs on an interval of 10000 (10 seconds), you would expect to see <tt>resume</tt> fired every 10 seconds, just as the Javascript service code you wrote is about to execute.</p>"
            }, 
            {
                "filename": "Titanium.Android.Service.start-event", 
                "name": "start", 
                "properties": {
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>Fired when the bound Service instance starts.  Bound service instances are created via <a href=\"Titanium.Android.createService-method.html\">Titanium.Android.createService</a>.</p>"
            }, 
            {
                "filename": "Titanium.Android.Service.stop-event", 
                "name": "stop", 
                "properties": {
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>Fired when the bound Service instance stops, meaning <a href=\"Titanium.Android.Service.stop-method.html\">Titanium.Android.Service.stop</a> or <a href=\"Titanium.Android.stopService-method.html\">Titanium.Android.stopService</a> has been called and there are no more bound, un-stopped clients.</p>"
            }
        ], 
        "examples": [
            {
                "code": "<p>Your service code in its own Javascript file.  It reads the <a href=\"Titanium.Android.Intent-object.html\">Titanium.Android.Intent</a> which created it, to see what it should say besides \"Hello World\".</p>\n<p>File: myservice.js:</p>\n<pre><code>var service = Titanium.Android.currentService;\nvar intent = service.intent;\nvar message = intent.getStringExtra(\"message_to_echo\");\nTitanium.API.info(\"Hello World!  I am a Service.  I have this to say: \" + message);\n</code></pre>\n\n<p>Register the service in tiapp.xml:</p>\n<pre><code><android xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <services>\n        <service url=\"myservice.js\" type=\"interval\"/>\n    </services>\n</android>\n</code></pre>\n\n<p>Code in \"regular\" Titanium file to launch the service and listen for pause/resume events.  Code also stops the service after its code runs 3 times.</p>\n<pre><code>var intent = Titanium.Android.createServiceIntent( { url: 'myservice.js' } );\n// Service should run its code every 2 seconds.\nintent.putExtra('interval', 2000);\n// A message that the service should 'echo'\nintent.putExtra('message_to_echo', 'Titanium rocks!');\n\nvar service = Titanium.Android.createService(intent);\nservice.addEventListener('resume', function(e) {\n    Titanium.API.info('Service code resumes, iteration ' + e.iteration);\n});\nservice.addEventListener('pause', function(e) {\n    Titanium.API.info('Service code pauses, iteration ' + e.iteration);\n    if (e.iteration === 3) {\n        Titanium.API.info('Service code has run 3 times, will now stop it.');\n        service.stop();\n    }\n});\nservice.start();\n</code></pre>\n\n<p>Console Output:</p>\n<pre><code>[INFO] [29,1942] Service code resumes, iteration 1\n[INFO] [70,2029] Hello World! I am a Service. I have this to say: Titanium rocks!\n[INFO] [3,2070] Service code pauses, iteration 1\n[INFO] [2,3915] Service code resumes, iteration 2\n[INFO] [31,3961] Hello World! I am a Service. I have this to say: Titanium rocks!\n[INFO] [5,3968] Service code pauses, iteration 2\n[INFO] [2,5917] Service code resumes, iteration 3\n[INFO] [27,5961] Hello World! I am a Service. I have this to say: Titanium rocks!\n[INFO] [16,5980] Service code pauses, iteration 3\n[INFO] [1,5981] Service code has run 3 times, will now stop it.\n</code></pre>", 
                "description": "Hello World Service"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.Android.Service.start-method", 
                "name": "start", 
                "parameters": [], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>Start the Service.  Effective only if this instance of <a href=\"Titanium.Android.Service-object.html\">Titanium.Android.Service</a> was created with <a href=\"Titanium.Android.createService-method.html\">Titanium.Android.createService</a>.</p>"
            }, 
            {
                "filename": "Titanium.Android.Service.stop-method", 
                "name": "stop", 
                "parameters": [], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>Stop this running instance of the Service.</p>"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Service.intent-property", 
                "isClassProperty": false, 
                "name": "intent", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "<a href=\"Titanium.Android.Intent-object.html\">Titanium.Android.Intent</a>", 
                "type_jsca": "`Titanium.Android.Intent`", 
                "value": "<p>(read-only) The <a href=\"Titanium.Android.Intent-object.html\">Titanium.Android.Intent</a> used to start or bind to the Service.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Android.Service.serviceInstanceId-property", 
                "isClassProperty": false, 
                "name": "serviceInstanceId", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>(read-only) A service can be started more than once -- this number (based on an incrementing integer) indicates which \"start number\" in the sequence the current service instance is.</p>"
            }
        ], 
        "returns": null, 
        "since": "1.5", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.App": {
        "deprecated": null, 
        "description": "<p>The top level App module.  The App module is mainly used for accessing information about the application at runtime.</p>", 
        "events": [
            {
                "filename": "Titanium.App.proximity-event", 
                "name": "proximity", 
                "properties": {
                    "source": "the source object that fired the event", 
                    "state": "<p>the proximity state value</p>", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>fired when a proximity state changes</p>"
            }
        ], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.App.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.App.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "the event name", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "optional data payload for the event. NOTE: you can only pass JSON serializable data since the data must be transportable between contexts.", 
                        "name": "data", 
                        "type": "object"
                    }, 
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.App.getArguments-method", 
                "name": "getArguments", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.1", 
                "value": "<p>return the arguments passed to the application on startup as a dictionary</p>"
            }, 
            {
                "filename": "Titanium.App.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "remove a previously added event listener"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.App.copyright-property", 
                "isClassProperty": false, 
                "name": "copyright", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the application's copyright</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.App.description-property", 
                "isClassProperty": false, 
                "name": "description", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the application's description</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.App.guid-property", 
                "isClassProperty": false, 
                "name": "guid", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the application's globally unique id (this is system generated and consistent through all versions)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.App.id-property", 
                "isClassProperty": false, 
                "name": "id", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the application's app id as specified in Titanium Developer</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.App.idleTimerDisabled-property", 
                "isClassProperty": false, 
                "name": "idleTimerDisabled", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>property for controlling whether the phone screen will be locked on idle time. Can be set to true to disable the timer</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.App.name-property", 
                "isClassProperty": false, 
                "name": "name", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the application's name</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.App.proximityDetection-property", 
                "isClassProperty": false, 
                "name": "proximityDetection", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>a boolean to indicate whether proximity detection is enabled</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.App.proximityState-property", 
                "isClassProperty": false, 
                "name": "proximityState", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the state of the device's proximity detector</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.App.publisher-property", 
                "isClassProperty": false, 
                "name": "publisher", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the application's publisher</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.App.url-property", 
                "isClassProperty": false, 
                "name": "url", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the application url</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.App.version-property", 
                "isClassProperty": false, 
                "name": "version", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the application's version</p>"
            }
        ], 
        "returns": "object", 
        "since": "0.1", 
        "subtype": null, 
        "type": "module"
    }, 
    "Titanium.App.Android": {
        "deprecated": null, 
        "description": "<p>A module used to access the Android's <a href=\"http://developer.android.com/guide/topics/resources/index.html\">Application Resources</a></p>", 
        "events": [], 
        "examples": [
            {
                "code": "<p>In Titanium, you can specify custom Android resources by placing them in <tt>platform/android</tt> under the top directory of your project. For example, to create a custom strings.xml, You could create and populate <tt>platform/android/res/values/mystrings.xml</tt> with the following data:</p>\n<pre><code><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n    <string name=\"mystring\">testing 1 2 3</string>\n</resources>\n</code></pre>\n\n<p>And in Javascript, you could retrieve like this:</p>\n<pre><code>var activity = Ti.Android.currentActivity;\nvar R = Ti.App.Android.R;\n\nvar mystring = activity.getString(R.string.mystring);\nTi.API.debug(\"mystring=\"+mystring);\n</code></pre>", 
                "description": "Custom String Resource"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.App.Android.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.App.Android.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.App.Android.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "remove a previously added event listener"
            }
        ], 
        "notes": null, 
        "objects": [
            "Titanium.App.Android.R"
        ], 
        "parameters": [], 
        "platforms": [
            "android"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.App.Android.R-property", 
                "isClassProperty": true, 
                "name": "R", 
                "platforms": [
                    "android"
                ], 
                "since": "1.5", 
                "type": "<a href=\"Titanium.App.Android.R.html\">Titanium.App.Android.R</a>", 
                "type_jsca": "`Titanium.App.Android.R`", 
                "value": "<p>The R namespace for Application Resources</p>"
            }
        ], 
        "returns": null, 
        "since": "1.5", 
        "subtype": null, 
        "type": "module"
    }, 
    "Titanium.App.Android.R": {
        "deprecated": null, 
        "description": "<p>The Titanium binding of <a href=\"http://developer.android.com/guide/topics/resources/index.html\">Application Resources</a>.  This gives you access to resources you have packaged for your own application.  If you want to access the system-wide Android <tt>R</tt>, use <a href=\"Titanium.Android.R-object.html\">Titanium.Android.R</a>.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [], 
        "notes": "<p>These properties and sub-properties are queried directly against your Application's <tt>R</tt> class, and should have the same syntax.  For example, if you have a file <tt>platform/android/res/drawable/icon.png</tt> in your project, you could then access its integer id like this:</p>\n<pre><code>var resid = Titanium.App.Android.R.drawable.icon;\n</code></pre>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android"
        ], 
        "properties": [], 
        "returns": null, 
        "since": "1.5", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.App.Properties": {
        "deprecated": null, 
        "description": "<p>The App Properties module is used for storing application related property/value pairs which persist beyond application sessions.</p>", 
        "events": [], 
        "examples": [
            {
                "code": "<p>In this example, we store a string property:</p>\n<pre><code>Titanium.App.Properties.setString(\"my_prop\",\"cool\");\n</code></pre>", 
                "description": "store a property"
            }, 
            {
                "code": "<p>In this example, we print out all the saved properties to the console:</p>\n<pre><code>var props = Titanium.App.Properties.listProperties();\nfor (var c=0;c<props.length;c++)\n{\n    var value = Titanium.App.Properties.getString(props[c]);\n    Titanium.API.info(props[c]+\" = \"+value);\n}\n</code></pre>", 
                "description": "enumerate over saved properties"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.App.Properties.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.5", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.App.Properties.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.5", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.App.Properties.getBool-method", 
                "name": "getBool", 
                "parameters": [
                    {
                        "description": "return a boolean value for property", 
                        "name": "property", 
                        "type": "string"
                    }, 
                    {
                        "description": "optional default value if property is not found", 
                        "name": "default", 
                        "type": "boolean"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "boolean", 
                "since": "0.5", 
                "value": "<p>return a boolean value</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.App.Properties.getDouble-method", 
                "name": "getDouble", 
                "parameters": [
                    {
                        "description": "return a double value for property", 
                        "name": "property", 
                        "type": "string"
                    }, 
                    {
                        "description": "optional default value if property is not found", 
                        "name": "default", 
                        "type": "double"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "double", 
                "since": "0.5", 
                "value": "<p>return a double value</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.App.Properties.getInt-method", 
                "name": "getInt", 
                "parameters": [
                    {
                        "description": "return a integer value for property", 
                        "name": "property", 
                        "type": "string"
                    }, 
                    {
                        "description": "optional default value if property is not found", 
                        "name": "default", 
                        "type": "int"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "int", 
                "since": "0.5", 
                "value": "<p>return an integer value</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.App.Properties.getList-method", 
                "name": "getList", 
                "parameters": [
                    {
                        "description": "return an array value for property", 
                        "name": "property", 
                        "type": "string"
                    }, 
                    {
                        "description": "optional default value if property is not found", 
                        "name": "default", 
                        "type": "array"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "array", 
                "since": "0.5", 
                "value": "<p>return a value as an array</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.App.Properties.getString-method", 
                "name": "getString", 
                "parameters": [
                    {
                        "description": "return a string value for property", 
                        "name": "property", 
                        "type": "string"
                    }, 
                    {
                        "description": "optional default value if property is not found", 
                        "name": "default", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "string", 
                "since": "0.5", 
                "value": "<p>return a string value</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.App.Properties.hasProperty-method", 
                "name": "hasProperty", 
                "parameters": [
                    {
                        "description": "property name to check", 
                        "name": "property", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "boolean", 
                "since": "0.5", 
                "value": "<p>returns true if the property exists</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.App.Properties.listProperties-method", 
                "name": "listProperties", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "array", 
                "since": "0.5", 
                "value": "<p>return an array of property propertys</p>"
            }, 
            {
                "filename": "Titanium.App.Properties.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.5", 
                "value": "remove a previously added event listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.App.Properties.removeProperty-method", 
                "name": "removeProperty", 
                "parameters": [
                    {
                        "description": "property name to remove", 
                        "name": "property", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.5", 
                "value": "<p>remove an existing property</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.App.Properties.setBool-method", 
                "name": "setBool", 
                "parameters": [
                    {
                        "description": "property name", 
                        "name": "property", 
                        "type": "string"
                    }, 
                    {
                        "description": "value", 
                        "name": "value", 
                        "type": "boolean"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.5", 
                "value": "<p>set a property as a boolean value</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.App.Properties.setDouble-method", 
                "name": "setDouble", 
                "parameters": [
                    {
                        "description": "property name", 
                        "name": "property", 
                        "type": "string"
                    }, 
                    {
                        "description": "value", 
                        "name": "value", 
                        "type": "double"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.5", 
                "value": "<p>set a property as a double value</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.App.Properties.setInt-method", 
                "name": "setInt", 
                "parameters": [
                    {
                        "description": "property name", 
                        "name": "property", 
                        "type": "string"
                    }, 
                    {
                        "description": "value", 
                        "name": "value", 
                        "type": "int"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.5", 
                "value": "<p>set a property as an integer value</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.App.Properties.setList-method", 
                "name": "setList", 
                "parameters": [
                    {
                        "description": "property name", 
                        "name": "property", 
                        "type": "string"
                    }, 
                    {
                        "description": "value", 
                        "name": "value", 
                        "type": "array"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.5", 
                "value": "<p>set a property as an array value</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.App.Properties.setString-method", 
                "name": "setString", 
                "parameters": [
                    {
                        "description": "property name", 
                        "name": "property", 
                        "type": "string"
                    }, 
                    {
                        "description": "value", 
                        "name": "value", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.5", 
                "value": "<p>set a property as a string value</p>"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "android", 
            "ipad"
        ], 
        "properties": [], 
        "returns": "object", 
        "since": "0.5", 
        "subtype": null, 
        "type": "module"
    }, 
    "Titanium.App.iOS": {
        "deprecated": null, 
        "description": "<p>The top level App iOS module.  The App iOS module is only available on iOS based devices.</p>", 
        "events": [
            {
                "filename": "Titanium.App.iOS.notification-event", 
                "name": "notification", 
                "properties": {
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>fired when a local notification is received by the app.  the following event properties are available: <tt>date</tt>, <tt>timezone</tt>, <tt>alertBody</tt>, <tt>alertAction</tt>, <tt>alertLaunchImage</tt>, <tt>sound</tt>, <tt>bound</tt>, <tt>userInfo</tt>.</p>"
            }
        ], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.App.iOS.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.App.iOS.cancelAllLocalNotifications-method", 
                "name": "cancelAllLocalNotifications", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>cancel all scheduled local notifications</p>"
            }, 
            {
                "filename": "Titanium.App.iOS.cancelLocalNotification-method", 
                "name": "cancelLocalNotification", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>cancel a specific local notification</p>"
            }, 
            {
                "filename": "Titanium.App.iOS.createBackgroundService-method", 
                "name": "createBackgroundService", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.App.iOS.BackgroundService.html\">Titanium.App.iOS.BackgroundService</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "1.5", 
                "value": "create and return an instance of <a href=\"Titanium.App.iOS.BackgroundService.html\">Titanium.App.iOS.BackgroundService</a>"
            }, 
            {
                "filename": "Titanium.App.iOS.createLocalNotification-method", 
                "name": "createLocalNotification", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.App.iOS.LocalNotification.html\">Titanium.App.iOS.LocalNotification</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "1.5", 
                "value": "create and return an instance of <a href=\"Titanium.App.iOS.LocalNotification.html\">Titanium.App.iOS.LocalNotification</a>"
            }, 
            {
                "filename": "Titanium.App.iOS.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.App.iOS.registerBackgroundService-method", 
                "name": "registerBackgroundService", 
                "parameters": [
                    {
                        "description": "dictionary of key/values that are used to create the service. the <tt>url</tt> property should point to a local JavaScript url that will be executed when the app is backgrounded.", 
                        "name": "params", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "1.5", 
                "value": "<p>register a background service to run when the app is backgrounded</p>"
            }, 
            {
                "filename": "Titanium.App.iOS.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "remove a previously added event listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.App.iOS.scheduleLocalNotification-method", 
                "name": "scheduleLocalNotification", 
                "parameters": [
                    {
                        "description": "dictionary of key/values that are used to create the notification. the <tt>date</tt> property is when the notification should fire, <tt>repeat</tt> is an optional property of one of: <tt>weekly</tt>, <tt>daily</tt>, <tt>yearly,</tt> <tt>monthly</tt>, <tt>alertBody</tt> is an optional property that is the body of the alert when the notification is displayed, <tt>alertAction</tt> is an optional property that represents the alert button text or the 'slide to unlock...' slider in place of unlock, <tt>alertLaunchImage</tt> is an optional property that specifies the launch image to display instead of Default.png when launching the application, <tt>badge</tt> is the optional badge value for the application, <tt>sound</tt> is the optional property to specify the sound to play when the notification is triggered and <tt>userInfo</tt> is the optional property which specifies data passed to the application upon launch when the notification is triggered.", 
                        "name": "params", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "1.5", 
                "value": "<p>schedule a local notification</p>"
            }
        ], 
        "notes": null, 
        "objects": [
            "Titanium.App.iOS.BackgroundService", 
            "Titanium.App.iOS.LocalNotification"
        ], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "ipad"
        ], 
        "properties": [], 
        "returns": "object", 
        "since": "1.5", 
        "subtype": null, 
        "type": "module"
    }, 
    "Titanium.App.iOS.BackgroundService": {
        "deprecated": null, 
        "description": "<p>The BackgroundService is created by <a href=\"Titanium.App.iOS.registerBackgroundService.html\">Titanium.App.iOS.registerBackgroundService</a>.<br>\n</p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.App.iOS.BackgroundService.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.App.iOS.BackgroundService.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.App.iOS.BackgroundService.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "remove a previously added event listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.App.iOS.BackgroundService.stop-method", 
                "name": "stop", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>stop the service from the current background session to conserve resources</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.App.iOS.BackgroundService.unregister-method", 
                "name": "unregister", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>unregister the background service</p>"
            }
        ], 
        "notes": "<p>The background service runs when the Application is placed in the background and will continue to run until the service is stopped with the <tt>stop</tt> method or the <tt>unregister</tt> method.</p>\n<p>Stopping a running background service will converse resources while its running in the background. However, if the application is foregrounded and then backgrounded again, it will run again.  If you want to permanently stop running the background service, you must call <tt>unregister</tt>.</p>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "ipad"
        ], 
        "properties": [], 
        "returns": null, 
        "since": "1.5", 
        "subtype": "proxy", 
        "type": "object"
    }, 
    "Titanium.App.iOS.LocalNotification": {
        "deprecated": null, 
        "description": "<p>The LocalNotification is created by <a href=\"Titanium.App.iOS.scheduleLocalNotification-method.html\">Titanium.App.iOS.scheduleLocalNotification</a>.<br>\n</p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.App.iOS.LocalNotification.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.App.iOS.LocalNotification.cancel-method", 
                "name": "cancel", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>cancel the pending notification</p>"
            }, 
            {
                "filename": "Titanium.App.iOS.LocalNotification.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.App.iOS.LocalNotification.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "remove a previously added event listener"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "ipad"
        ], 
        "properties": [], 
        "returns": null, 
        "since": "1.5", 
        "subtype": "proxy", 
        "type": "object"
    }, 
    "Titanium.Blob": {
        "deprecated": null, 
        "description": "<p>The blob is an abstract data type that represents binary information, often obtained through HTTPClient or via files. It often is used to store text or the actual data of an image.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "deprecated": false, 
                "filename": "Titanium.Blob.imageAsThumbnail-method", 
                "name": "imageAsThumbnail", 
                "parameters": [
                    {
                        "description": "the size of the thumbnail, in either width or height", 
                        "name": "size", 
                        "type": "int"
                    }, 
                    {
                        "description": "the optional width of the thumbnail's border. The default is 1.", 
                        "name": "borderSize", 
                        "type": "int"
                    }, 
                    {
                        "description": "the radius of the thumbnail's corners. The default is 0.", 
                        "name": "cornerRadius", 
                        "type": "int"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.9", 
                "value": "<p>Generate a thumbnail version of an image, optionally with a border and rounded corners (currently iPhone/iPad only)</p>"
            }
        ], 
        "notes": "", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [], 
        "returns": null, 
        "since": "0.9", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.BlobStream": {
        "deprecated": null, 
        "description": "<p>Wrapper around <a href=\"Titanium.Blob-object.html\">Titanium.Blob</a> that implements the <a href=\"Titanium.IOStream.html\">Titanium.IOStream</a> interface</p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "deprecated": false, 
                "filename": "Titanium.BlobStream.close-method", 
                "name": "close", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.7", 
                "value": "<p>closes stream and throws exception on error</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.BlobStream.isReadable-method", 
                "name": "isReadable", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "Boolean", 
                "since": "1.7", 
                "value": "<p>reads true if stream is readable, false otherwise</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.BlobStream.isWriteable-method", 
                "name": "isWriteable", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "Boolean", 
                "since": "1.7", 
                "value": "<p>reads true if stream is writeable, false otherwise</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.BlobStream.read-method", 
                "name": "read", 
                "parameters": [
                    {
                        "description": "buffer to read stream data into", 
                        "name": "buffer", 
                        "type": "<a href=\"Titanium.Buffer.html\">Titanium.Buffer</a>"
                    }, 
                    {
                        "description": "(Optional) offset to start reading buffer data from", 
                        "name": "offset", 
                        "type": "Number"
                    }, 
                    {
                        "description": "(Optional) length of data to read from buffer", 
                        "name": "length", 
                        "type": "Number"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "Number", 
                "since": "1.7", 
                "value": "<p>reads data from stream into a buffer.  Optional offset and length arguments to specify position in buffer in whichto start writing the read data, and the amount of data to read.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.BlobStream.write-method", 
                "name": "write", 
                "parameters": [
                    {
                        "description": "buffer to write to stream", 
                        "name": "buffer", 
                        "type": "<a href=\"Titanium.Buffer.html\">Titanium.Buffer</a>"
                    }, 
                    {
                        "description": "(Optional) offset to start writing buffer data from", 
                        "name": "offset", 
                        "type": "Number"
                    }, 
                    {
                        "description": "(Optional) length of data to write from buffer", 
                        "name": "length", 
                        "type": "Number"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "Number", 
                "since": "1.7", 
                "value": "<p>writes data from buffer to stream. Optional offset and length arguments to specify position in buffer in which to start reading data that is written to the stream, and the length of the data to take from the buffer.</p>"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "android", 
            "ipad"
        ], 
        "properties": [], 
        "returns": null, 
        "since": "1.7", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.Buffer": {
        "deprecated": null, 
        "description": "<p>Buffer is a container for raw data. A buffer is created by the method <a href=\"Titanium.createBuffer.html\">Titanium.createBuffer</a>.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "deprecated": false, 
                "filename": "Titanium.Buffer.append-method", 
                "name": "append", 
                "parameters": [
                    {
                        "description": "buffer to append to current buffer", 
                        "name": "sourceBuffer", 
                        "type": "<a href=\"Titanium.Buffer-object.html\">Titanium.Buffer</a>"
                    }, 
                    {
                        "description": "(Optional) offset to start reading buffer data from", 
                        "name": "sourceOffset", 
                        "type": "Number"
                    }, 
                    {
                        "description": "(Optional) length of data to read from buffer", 
                        "name": "sourceLength", 
                        "type": "Number"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "Number", 
                "since": "1.7", 
                "value": "<p>appends <tt>sourceBuffer</tt> to the current buffer.  Buffer is grown dynamically to accommodate the additional data if need be.  returns the number of bytes appended. Optional offset and length arguments to specify from where in -- and how much of -- source buffer to take.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Buffer.clear-method", 
                "name": "clear", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.7", 
                "value": "<p>Clears buffer contents but does not change the size of the buffer</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Buffer.clone-method", 
                "name": "clone", 
                "parameters": [
                    {
                        "description": "(Optional) offset of buffer to start clone", 
                        "name": "offset", 
                        "type": "Number"
                    }, 
                    {
                        "description": "(Optional) length of buffer data starting at offset to clone", 
                        "name": "length", 
                        "type": "Number"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "<a href=\"Titanium.Buffer-object.html\">Titanium.Buffer</a>", 
                "since": "1.7", 
                "value": "<p>create new copy of the current buffer.  Optional offset and length arguments to specify from where in -- and how much of -- source buffer to take.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Buffer.copy-method", 
                "name": "copy", 
                "parameters": [
                    {
                        "description": "buffer to copy into current buffer", 
                        "name": "sourceBuffer", 
                        "type": "<a href=\"Titanium.Buffer-object.html\">Titanium.Buffer</a>"
                    }, 
                    {
                        "description": "offset to copy new buffer at", 
                        "name": "offset", 
                        "type": "Number"
                    }, 
                    {
                        "description": "(Optional) offset of sourceBuffer to copy data from", 
                        "name": "sourceOffset", 
                        "type": "Number"
                    }, 
                    {
                        "description": "(Optional) length of data from sourceBuffer to copy", 
                        "name": "sourceLength", 
                        "type": "Number"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "Number", 
                "since": "1.7", 
                "value": "<p>copies the contents of <tt>sourceBuffer</tt> into the current buffer at <tt>offset</tt>.  will not expand buffer if there is not enough room in the current buffer to accomodate all the requested data from <tt>sourceBuffer</tt>.  returns the number of bytes copied.  Optional sourceOffset and length arguments to specify from where in -- and how much of -- source buffer to take.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Buffer.fill-method", 
                "name": "fill", 
                "parameters": [
                    {
                        "description": "byte to fill buffer with", 
                        "name": "fillByte", 
                        "type": "Number"
                    }, 
                    {
                        "description": "(Optional) offset of where to start fill", 
                        "name": "offset", 
                        "type": "Number"
                    }, 
                    {
                        "description": "(Optional) number of bytes to fill", 
                        "name": "length", 
                        "type": "Number"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.7", 
                "value": "<p>fills buffer with <tt>fillByte</tt>.  Optional offset and length arguments to specify that filling should occur starting at particular offset and finish when <tt>length</tt> bytes have been written or the end of the buffer is reached.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Buffer.insert-method", 
                "name": "insert", 
                "parameters": [
                    {
                        "description": "buffer to insert into current buffer", 
                        "name": "sourceBuffer", 
                        "type": "<a href=\"Titanium.Buffer-object.html\">Titanium.Buffer</a>"
                    }, 
                    {
                        "description": "offset to insert new buffer at", 
                        "name": "offset", 
                        "type": "Number"
                    }, 
                    {
                        "description": "(Optional) offset of sourceBuffer to insert data from", 
                        "name": "sourceOffset", 
                        "type": "Number"
                    }, 
                    {
                        "description": "(Optional) length of data from sourceBuffer to insert", 
                        "name": "sourceLength", 
                        "type": "Number"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "Number", 
                "since": "1.7", 
                "value": "<p>inserts <tt>sourceBuffer</tt> into the current buffer at <tt>offset</tt>.  Buffer is grown to accommodate the new data.  returns the number of bytes inserted.  Optional sourceOffset and length arguments to specify from where in -- and how much of -- source buffer to take.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Buffer.release-method", 
                "name": "release", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.7", 
                "value": "<p>Releases the space allocated to the buffer, sets length to 0.  This is effectively the same as <tt>buffer.length = 0</tt></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Buffer.toBlob-method", 
                "name": "toBlob", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "<a href=\"Titanium.Blob-object.html\">Titanium.Blob</a>", 
                "since": "1.7", 
                "value": "<p>Converts this buffer to a <a href=\"Titanium.Blob-object.html\">Titanium.Blob</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Buffer.toString-method", 
                "name": "toString", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "String", 
                "since": "1.7", 
                "value": "<p>Converts this buffer to a String</p>"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "android", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Buffer.byteOrder-property", 
                "isClassProperty": false, 
                "name": "byteOrder", 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "since": "1.7", 
                "type": "Number", 
                "type_jsca": "Number", 
                "value": "<p>The byte order of this buffer. The OS native byte order is used by default.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Buffer.length-property", 
                "isClassProperty": false, 
                "name": "length", 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "since": "1.7", 
                "type": "Number", 
                "type_jsca": "Number", 
                "value": "<p>The length of the buffer in bytes. When <tt>length</tt> is modified the buffer will be re-sized while preserving existing data where possible. If the new buffer length is smaller than the length of the existing data then the existing data will be truncated down to the size of the new buffer.  Resizing the buffer via setting length should be used sparingly due to the associated overhead.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Buffer.type-property", 
                "isClassProperty": false, 
                "name": "type", 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "since": "1.7", 
                "type": "String", 
                "type_jsca": "String", 
                "value": "<p>The type of data encoding to use with <tt>value</tt>. Required when <tt>value</tt> is a Number. When <tt>value</tt> is a String, <a href=\"Titanium.Codec.CHARSET_UTF8.html\">Titanium.Codec.CHARSET_UTF8</a> is the default.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Buffer.value-property", 
                "isClassProperty": false, 
                "name": "value", 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "since": "1.7", 
                "type": "Number, String", 
                "type_jsca": "Number, String", 
                "value": "<p>Data to be encoded. If <tt>value</tt> is a Number, <tt>type</tt> must also be set. (this is simply a convenient way of calling <a href=\"Titanium.Codec.encodeString.html\">Titanium.Codec.encodeString</a> or <a href=\"Titanium.Codec.encodeNumber.html\">Titanium.Codec.encodeNumber</a>).</p>"
            }
        ], 
        "returns": null, 
        "since": "1.7", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.BufferStream": {
        "deprecated": null, 
        "description": "<p>Wrapper around <a href=\"Titanium.Buffer-object.html\">Titanium.Buffer</a> that implements the <a href=\"Titanium.IOStream.html\">Titanium.IOStream</a> interface</p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "deprecated": false, 
                "filename": "Titanium.BufferStream.close-method", 
                "name": "close", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.7", 
                "value": "<p>closes stream and throws exception on error</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.BufferStream.isReadable-method", 
                "name": "isReadable", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "Boolean", 
                "since": "1.7", 
                "value": "<p>reads true if stream is readable, false otherwise</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.BufferStream.isWriteable-method", 
                "name": "isWriteable", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "Boolean", 
                "since": "1.7", 
                "value": "<p>reads true if stream is writeable, false otherwise</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.BufferStream.read-method", 
                "name": "read", 
                "parameters": [
                    {
                        "description": "buffer to read stream data into", 
                        "name": "buffer", 
                        "type": "<a href=\"Titanium.Buffer-object.html\">Titanium.Buffer</a>"
                    }, 
                    {
                        "description": "(Optional) offset to start reading buffer data from", 
                        "name": "offset", 
                        "type": "Number"
                    }, 
                    {
                        "description": "(Optional) length of data to read from buffer", 
                        "name": "length", 
                        "type": "Number"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "Number", 
                "since": "1.7", 
                "value": "<p>reads data from stream into a buffer.  Optional offset and length arguments to specify position in buffer in whichto start writing the read data, and the amount of data to read.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.BufferStream.write-method", 
                "name": "write", 
                "parameters": [
                    {
                        "description": "buffer to write to stream", 
                        "name": "buffer", 
                        "type": "<a href=\"Titanium.Buffer-object.html\">Titanium.Buffer</a>"
                    }, 
                    {
                        "description": "(Optional) offset to start writing buffer data from", 
                        "name": "offset", 
                        "type": "Number"
                    }, 
                    {
                        "description": "(Optional) length of data to write from buffer", 
                        "name": "length", 
                        "type": "Number"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "Number", 
                "since": "1.7", 
                "value": "<p>writes data from buffer to stream. Optional offset and length arguments to specify position in buffer in which to start reading data that is written to the stream, and the length of the data to take from the buffer.</p>"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "android", 
            "ipad"
        ], 
        "properties": [], 
        "returns": null, 
        "since": "1.7", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.Codec": {
        "deprecated": null, 
        "description": "<p>A module for converting Numbers and Strings to and from a <a href=\"Titanium.Buffer-object.html\">Titanium.Buffer</a>.</p>", 
        "events": [], 
        "examples": [
            {
                "code": "<p>Encode a double-precision floating point value in 8 bytes using the OS byte order</p>\n<pre><code>var buffer = Ti.createBuffer({ length: 8 });\nTi.Codec.encodeNumber({\n  source: 1.23456789,\n  dest: buffer,\n  type: Ti.Codec.TYPE_DOUBLE\n});\n</code></pre>\n\n<p>Encode a 4 byte integer to position 10 using BIG_ENDIAN encoding</p>\n<pre><code>var buffer = Ti.createBuffer({ length: 100 });\nTi.Codec.encodeNumber({\n    source: 0x3456789a,\n    dest: buffer,\n    position: 10,\n    type: Ti.Codec.TYPE_INT,\n    byteOrder: Ti.Codec.BIG_ENDIAN\n});\n</code></pre>", 
                "description": "Encoding Numbers"
            }, 
            {
                "code": "<p>Decode an 8 byte double-precision floating point number using the OS byte order</p>\n<pre><code>var buffer = //...\nvar value = Ti.Codec.decodeNumber({\n    source: buffer,\n    type: Ti.Codec.TYPE_DOUBLE\n});\n</code></pre>\n\n<p>Decode a 4 byte integer from position 10 using BIG_ENDIAN encoding</p>\n<pre><code>var buffer = //...\nvar value = Ti.Codec.decodeNumber({\n  source: buffer,\n  position: 10,\n  type: Ti.Codec.TYPE_INT,\n  byteOrder: Ti.Codec.BIG_ENDIAN\n});\n</code></pre>", 
                "description": "Decoding Numbers"
            }, 
            {
                "code": "<p>Encode and trim a simple String using the UTF-8 (default) charset</p>\n<pre><code>var buffer = Ti.createBuffer({ length: 1024 });\nvar length = Ti.Codec.encodeString({\n    source: \"hello world\",\n    dest: buffer\n});\nbuffer.length = length;\n</code></pre>\n\n<p>Encode the first 10 characters of a String using the UTF-16 charset</p>\n<pre><code>// (10 * 2) + BOM = 22\nvar buffer = Ti.createBuffer({ length: 22 });\nTi.Codec.encodeString({\n    source: \"jack jumped over the candle stick\",\n    sourceLength: 10,\n    dest: buffer,\n    charset: Ti.Codec.CHARSET_UTF16\n});\n</code></pre>", 
                "description": "Encoding Strings"
            }, 
            {
                "code": "<p>Decode a String using the UTF-8 (default) charset</p>\n<pre><code>var buffer = //...\nvar string = Ti.Codec.decodeString({ source: buffer });\n</code></pre>\n\n<p>Decode a string using the UTF-16 charset\nvar buffer = //...\nvar string = Ti.Codec.decodeString({\n  source: buffer,\n  charset: Ti.Codec.CHARSET_UTF16\n});\n~~~</p>", 
                "description": "Decoding Strings"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.Codec.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.7", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Codec.decodeNumber-method", 
                "name": "decodeNumber", 
                "parameters": [
                    {
                        "description": "decodeNumber named options.  These are: <tt>source</tt>, the <a href=\"Titanium.Buffer-object.html\">Titanium.Buffer</a> to decode.  <tt>type</tt>, the encoding type to use, which must be one of <a href=\"Titanium.Codec.TYPE_BYTE-property.html\">Titanium.Codec.TYPE_BYTE</a>, <a href=\"Titanium.Codec.TYPE_SHORT-property.html\">Titanium.Codec.TYPE_SHORT</a>, <a href=\"Titanium.Codec.TYPE_INT-property.html\">Titanium.Codec.TYPE_INT</a>, <a href=\"Titanium.Codec.TYPE_FLOAT-property.html\">Titanium.Codec.TYPE_FLOAT</a>, <a href=\"Titanium.Codec.TYPE_LONG-property.html\">Titanium.Codec.TYPE_LONG</a>, or <a href=\"Titanium.Codec.TYPE_DOUBLE-property.html\">Titanium.Codec.TYPE_DOUBLE</a>.  <tt>position</tt>, the position in <tt>source</tt> to start at (optional, default is 0).  <tt>byteOrder</tt>, the byte order to decode with (optional, default is <a href=\"Titanium.Codec.getNativeByteOrder-method.html\">Titanium.Codec.getNativeByteOrder</a>).", 
                        "name": "options", 
                        "type": "Object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "Number", 
                "since": "1.7", 
                "value": "<p>Decodes the <tt>source</tt> buffer (starting at the optional <tt>position</tt>) into a number using the passed in data <tt>type</tt>.  Throws an Exception if <tt>source</tt> is null, or <tt>position</tt> is greater than <tt>source.length</tt></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Codec.decodeString-method", 
                "name": "decodeString", 
                "parameters": [
                    {
                        "description": "decodeString named options.  These are: <tt>source</tt>, the <a href=\"Titanium.Buffer-object.html\">Titanium.Buffer</a> to decode.  <tt>position</tt>, the position to start decoding (optional, default is 0).  <tt>length</tt>, the number of bytes to decode (optional, default is the length of the source buffer).  <tt>charset</tt>, the character set to decode from (optional, default is <a href=\"Titanium.Codec.CHARSET_UTF8-property.html\">Titanium.Codec.CHARSET_UTF8</a>).", 
                        "name": "options", 
                        "type": "Object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "String", 
                "since": "1.7", 
                "value": "<p>Decodes the <tt>source</tt> buffer into a String starting at <tt>position</tt>, with <tt>length</tt> bytes, using the supplied character set <tt>charset</tt>. Throws an Exception if <tt>charset</tt> is not a valid character set, <tt>source</tt> is null, or either <tt>position</tt>, <tt>length</tt>, or <tt>position</tt>+<tt>length</tt> is greater than <tt>source.length</tt>.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Codec.encodeNumber-method", 
                "name": "encodeNumber", 
                "parameters": [
                    {
                        "description": "encodeNumber named options.  These are: <tt>source</tt>, the number to be encoded.  <tt>dest</tt>, the destination <a href=\"Titanium.Buffer-object.html\">Titanium.Buffer</a> into which the encoded number will be written.  <tt>type</tt>, the encoding type to use, which must be one of <a href=\"Titanium.Codec.TYPE_BYTE-property.html\">Titanium.Codec.TYPE_BYTE</a>, <a href=\"Titanium.Codec.TYPE_SHORT-property.html\">Titanium.Codec.TYPE_SHORT</a>, <a href=\"Titanium.Codec.TYPE_INT-property.html\">Titanium.Codec.TYPE_INT</a>, <a href=\"Titanium.Codec.TYPE_FLOAT-property.html\">Titanium.Codec.TYPE_FLOAT</a>, <a href=\"Titanium.Codec.TYPE_LONG-property.html\">Titanium.Codec.TYPE_LONG</a>, or <a href=\"Titanium.Codec.TYPE_DOUBLE-property.html\">Titanium.Codec.TYPE_DOUBLE</a>.  <tt>position</tt>, the position in dest to set the encoded data (optional, default is 0).  <tt>byteOrder</tt>, the byte order to encode with (optional, default is <a href=\"Titanium.Codec.getNativeByteOrder-method.html\">Titanium.Codec.getNativeByteOrder</a>).", 
                        "name": "options", 
                        "type": "Object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "Number", 
                "since": "1.7", 
                "value": "<p>Encodes the Number <tt>source</tt> into <tt>dest</tt> using the passed in data <tt>type</tt>.  Returns the position after the encoded number in <tt>dest</tt>.'</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Codec.encodeString-method", 
                "name": "encodeString", 
                "parameters": [
                    {
                        "description": "encodeString named options.  These are: <tt>source</tt>, the source string to encode.  <tt>dest</tt>, the destination <a href=\"Titanium.Buffer-object.html\">Titanium.Buffer</a>.  <tt>destPosition</tt>, the position in <tt>dest</tt> to set the encoded string (optional, default is 0).  <tt>sourcePosition</tt>, the position in <tt>source</tt> to start encoding (optional, default is 0).  <tt>sourceLength</tt>, the number of characters in <tt>source</tt> to encode (optional, default is the length of the source).  <tt>charset</tt>, the character set to use when encoding this string to bytes (optional, default is <a href=\"Titanium.Codec.CHARSET_UTF8-property.html\">Titanium.Codec.CHARSET_UTF8</a>).", 
                        "name": "options", 
                        "type": "Object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "Number", 
                "since": "1.7", 
                "value": "<p>Encodes the String <tt>source</tt> into <tt>dest</tt> using <tt>charset</tt>. Returns the position after the encoded String inside <tt>dest</tt>.' Throws an Exception if <tt>charset</tt> is not a valid character set, <tt>source</tt> is null, or either <tt>sourcePosition</tt>, <tt>sourceLength</tt>, or <tt>sourcePosition</tt>+<tt>sourceLength</tt> is greater than <tt>source.length</tt>.</p>"
            }, 
            {
                "filename": "Titanium.Codec.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.7", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Codec.getNativeByteOrder-method", 
                "name": "getNativeByteOrder", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "Number", 
                "since": "1.7", 
                "value": "<p>Get the OS native byte order (either <a href=\"Titanium.Codec.BIG_ENDIAN-property.html\">Titanium.Codec.BIG_ENDIAN</a> or <a href=\"Titanium.Codec.LITTLE_ENDIAN-property.html\">Titanium.Codec.LITTLE_ENDIAN</a>)</p>"
            }, 
            {
                "filename": "Titanium.Codec.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.7", 
                "value": "remove a previously added event listener"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "android", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Codec.BIG_ENDIAN-property", 
                "isClassProperty": true, 
                "name": "BIG_ENDIAN", 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "since": "1.7", 
                "type": "Number", 
                "type_jsca": "Number", 
                "value": "<p>Big Endian (network) byte order, i.e. most significant byte first.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Codec.CHARSET_ASCII-property", 
                "isClassProperty": true, 
                "name": "CHARSET_ASCII", 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "since": "1.7", 
                "type": "String", 
                "type_jsca": "String", 
                "value": "<p>The <a href=\"http://en.wikipedia.org/wiki/ASCII\">ASCII Character Set</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Codec.CHARSET_ISO_LATIN1-property", 
                "isClassProperty": true, 
                "name": "CHARSET_ISO_LATIN1", 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "since": "1.7", 
                "type": "String", 
                "type_jsca": "String", 
                "value": "<p>The <a href=\"http://en.wikipedia.org/wiki/ISO/IEC_8859-1\">ISO 8859-1 (LATIN-1) Character Set</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Codec.CHARSET_UTF16-property", 
                "isClassProperty": true, 
                "name": "CHARSET_UTF16", 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "since": "1.7", 
                "type": "String", 
                "type_jsca": "String", 
                "value": "<p>The <a href=\"http://en.wikipedia.org/wiki/UTF-16/UCS-2\">UTF-16 Character Set</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Codec.CHARSET_UTF16BE-property", 
                "isClassProperty": true, 
                "name": "CHARSET_UTF16BE", 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "since": "1.7", 
                "type": "String", 
                "type_jsca": "String", 
                "value": "<p>The <a href=\"http://en.wikipedia.org/wiki/UTF-16/UCS-2\">UTF-16 Character Set</a> with Big Endian byte order</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Codec.CHARSET_UTF16LE-property", 
                "isClassProperty": true, 
                "name": "CHARSET_UTF16LE", 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "since": "1.7", 
                "type": "String", 
                "type_jsca": "String", 
                "value": "<p>The <a href=\"http://en.wikipedia.org/wiki/UTF-16/UCS-2\">UTF-16 Character Set</a> with Little Endian byte order</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Codec.CHARSET_UTF8-property", 
                "isClassProperty": true, 
                "name": "CHARSET_UTF8", 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "since": "1.7", 
                "type": "String", 
                "type_jsca": "String", 
                "value": "<p>The <a href=\"http://en.wikipedia.org/wiki/UTF-8\">UTF-8 Character Set</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Codec.LITTLE_ENDIAN-property", 
                "isClassProperty": true, 
                "name": "LITTLE_ENDIAN", 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "since": "1.7", 
                "type": "Number", 
                "type_jsca": "Number", 
                "value": "<p>Little Endian byte order, i.e. least significant byte first.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Codec.TYPE_BYTE-property", 
                "isClassProperty": true, 
                "name": "TYPE_BYTE", 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "since": "1.7", 
                "type": "String", 
                "type_jsca": "String", 
                "value": "<p>8 bit integer encoding type</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Codec.TYPE_DOUBLE-property", 
                "isClassProperty": true, 
                "name": "TYPE_DOUBLE", 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "since": "1.7", 
                "type": "String", 
                "type_jsca": "String", 
                "value": "<p>64 bit double precision floating-point type</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Codec.TYPE_FLOAT-property", 
                "isClassProperty": true, 
                "name": "TYPE_FLOAT", 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "since": "1.7", 
                "type": "String", 
                "type_jsca": "String", 
                "value": "<p>32 bit single precision floating-point type</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Codec.TYPE_INT-property", 
                "isClassProperty": true, 
                "name": "TYPE_INT", 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "since": "1.7", 
                "type": "String", 
                "type_jsca": "String", 
                "value": "<p>32 bit integer encoding type</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Codec.TYPE_LONG-property", 
                "isClassProperty": true, 
                "name": "TYPE_LONG", 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "since": "1.7", 
                "type": "String", 
                "type_jsca": "String", 
                "value": "<p>64 bit integer encoding type</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Codec.TYPE_SHORT-property", 
                "isClassProperty": true, 
                "name": "TYPE_SHORT", 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "since": "1.7", 
                "type": "String", 
                "type_jsca": "String", 
                "value": "<p>16 bit integer encoding type</p>"
            }
        ], 
        "returns": null, 
        "since": "1.7", 
        "subtype": null, 
        "type": "module"
    }, 
    "Titanium.Contacts": {
        "deprecated": null, 
        "description": "<p>The top level Contacts module.  The Contacts module is used accessing the device Address Book.  (Read-only on Android.)</p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.Contacts.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad", 
                    "android"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.Contacts.createGroup-method", 
                "name": "createGroup", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.Contacts.Group.html\">Titanium.Contacts.Group</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad", 
                    "android"
                ], 
                "returntype": "object", 
                "since": "0.8", 
                "value": "create and return an instance of <a href=\"Titanium.Contacts.Group.html\">Titanium.Contacts.Group</a>"
            }, 
            {
                "filename": "Titanium.Contacts.createPerson-method", 
                "name": "createPerson", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.Contacts.Person.html\">Titanium.Contacts.Person</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad", 
                    "android"
                ], 
                "returntype": "object", 
                "since": "0.8", 
                "value": "create and return an instance of <a href=\"Titanium.Contacts.Person.html\">Titanium.Contacts.Person</a>"
            }, 
            {
                "filename": "Titanium.Contacts.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad", 
                    "android"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.Contacts.getAllGroups-method", 
                "name": "getAllGroups", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad", 
                    "android"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>Returns an of all <a href=\"Titanium.Contacts.Group.html\">Titanium.Contacts.Group</a> objects in the contacts database</p>"
            }, 
            {
                "filename": "Titanium.Contacts.getAllPeople-method", 
                "name": "getAllPeople", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad", 
                    "android"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>Returns an array of all <a href=\"Titanium.Contacts.Person.html\">Titanium.Contacts.Person</a> objects in the contacts database</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.getGroupByID-method", 
                "name": "getGroupByID", 
                "parameters": [
                    {
                        "description": "The database ID of the group to retrieve", 
                        "name": "id", 
                        "type": "int"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad", 
                    "android"
                ], 
                "returntype": "object", 
                "since": "0.8", 
                "value": "<p>Returns a <a href=\"Titanium.Contacts.Group.html\">Titanium.Contacts.Group</a> object with the given ID</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.getPeopleWithName-method", 
                "name": "getPeopleWithName", 
                "parameters": [
                    {
                        "description": "The name to match in the database", 
                        "name": "name", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad", 
                    "android"
                ], 
                "returntype": "array", 
                "since": "0.8", 
                "value": "<p>Returns an array of <a href=\"Titanium.Contacts.Person.html\">Titanium.Contacts.Person</a> objects who have a name (first, last, middle, composite) which matches the given name</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.getPersonByID-method", 
                "name": "getPersonByID", 
                "parameters": [
                    {
                        "description": "The database ID of the person to retrieve", 
                        "name": "id", 
                        "type": "int"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad", 
                    "android"
                ], 
                "returntype": "object", 
                "since": "0.8", 
                "value": "<p>Returns a <a href=\"Titanium.Contacts.Person.html\">Titanium.Contacts.Person</a> object with the given ID</p>"
            }, 
            {
                "filename": "Titanium.Contacts.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad", 
                    "android"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously added event listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.removeGroup-method", 
                "name": "removeGroup", 
                "parameters": [
                    {
                        "description": "The <a href=\"Titanium.Contacts.Group.html\">Titanium.Contacts.Group</a> object to remove from the database. (NOTE: not supported on Android.)", 
                        "name": "group", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad", 
                    "android"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>Removes a group from the contacts database (NOTE: not supported on Android.)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.removePerson-method", 
                "name": "removePerson", 
                "parameters": [
                    {
                        "description": "The <a href=\"Titanium.Contacts.Person.html\">Titanium.Contacts.Person</a> object to remove from the database. (NOTE: not supported on Android.)", 
                        "name": "person", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad", 
                    "android"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>Removes a person from the contacts database. (NOTE: not supported on Android.)</p>"
            }, 
            {
                "filename": "Titanium.Contacts.revert-method", 
                "name": "revert", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad", 
                    "android"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>Reverts all changes made to the previous save of the database (NOTE: not supported on Android.)</p>"
            }, 
            {
                "filename": "Titanium.Contacts.save-method", 
                "name": "save", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad", 
                    "android"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>Saves all changes to contacts to the database (NOTE: not supported on Android.)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.showContacts-method", 
                "name": "showContacts", 
                "parameters": [
                    {
                        "description": "The function to call when selection is cancelled", 
                        "name": "cancel", 
                        "type": "function"
                    }, 
                    {
                        "description": "The function to call when a person is selected.  Mutually exclusive with <tt>selectedProperty</tt>", 
                        "name": "selectedPerson", 
                        "type": "function"
                    }, 
                    {
                        "description": "The function to call when a property is selected.  Mutally exclusive with <tt>selectedPerson</tt>", 
                        "name": "selectedProperty", 
                        "type": "function"
                    }, 
                    {
                        "description": "Whether or not to animate the show/hide of the contacts picker", 
                        "name": "animated", 
                        "type": "boolean"
                    }, 
                    {
                        "description": "A list of field names to show when selecting properties, default is to show all available", 
                        "name": "fields", 
                        "type": "array"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad", 
                    "android"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>Displays the contact picker</p>"
            }
        ], 
        "notes": "<p>Contacts on Android are currently only read-only, so methods such as <tt>createPerson</tt>, <tt>removePerson</tt>, etc., are not supported.</p>\n<p><a href=\"Titanium.Contacts.Person.html\">Titanium.Contacts.Person</a> objects which have been removed from the database are invalidated after a save operation, whether from creating a new contact or explicitly calling <a href=\"Titanium.Contacts.save().html\">Titanium.Contacts.save()</a>.  Using them may result in unpredictable beavhior, including crashes.</p>", 
        "objects": [
            "Titanium.Contacts.Group", 
            "Titanium.Contacts.Person"
        ], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "ipad", 
            "android"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.CONTACTS_KIND_ORGANIZATION-property", 
                "isClassProperty": true, 
                "name": "CONTACTS_KIND_ORGANIZATION", 
                "platforms": [
                    "iphone", 
                    "ipad", 
                    "android"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for 'organization' kind property of Person object</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.CONTACTS_KIND_PERSON-property", 
                "isClassProperty": true, 
                "name": "CONTACTS_KIND_PERSON", 
                "platforms": [
                    "iphone", 
                    "ipad", 
                    "android"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for 'person' kind property of Person object</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.CONTACTS_SORT_FIRST_NAME-property", 
                "isClassProperty": true, 
                "name": "CONTACTS_SORT_FIRST_NAME", 
                "platforms": [
                    "iphone", 
                    "ipad", 
                    "android"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for sorting group members by first name</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.CONTACTS_SORT_LAST_NAME-property", 
                "isClassProperty": true, 
                "name": "CONTACTS_SORT_LAST_NAME", 
                "platforms": [
                    "iphone", 
                    "ipad", 
                    "android"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for sorting group members by last name</p>"
            }
        ], 
        "returns": "object", 
        "since": "0.8", 
        "subtype": null, 
        "type": "module"
    }, 
    "Titanium.Contacts.Group": {
        "deprecated": null, 
        "description": "<p>An object which represents a group in the contacts database.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.Group.add-method", 
                "name": "add", 
                "parameters": [
                    {
                        "description": "<a href=\"Titanium.Contacts.Person.html\">Titanium.Contacts.Person</a> object to remove from the group", 
                        "name": "person", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.4.0", 
                "value": "<p>Adds a person to the group</p>"
            }, 
            {
                "filename": "Titanium.Contacts.Group.members-method", 
                "name": "members", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.4.0", 
                "value": "<p>The complete list of members of the group</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.Group.remove-method", 
                "name": "remove", 
                "parameters": [
                    {
                        "description": "<a href=\"Titanium.Contacts.Person.html\">Titanium.Contacts.Person</a> object to remove from the group", 
                        "name": "person", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.4.0", 
                "value": "<p>Removes a person from the group</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.Group.sortedMembers-method", 
                "name": "sortedMembers", 
                "parameters": [
                    {
                        "description": "Method for sorting.  Must be one of  <a href=\"Titanium.Contacts.CONTACTS_SORT_FIRST_NAME-property.html\">Titanium.Contacts.CONTACTS_SORT_FIRST_NAME</a> or <a href=\"Titanium.Contacts.CONTACTS_SORT_LAST_NAME-property.html\">Titanium.Contacts.CONTACTS_SORT_LAST_NAME</a>", 
                        "name": "sortBy", 
                        "type": "int"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.4.0", 
                "value": "<p>A list of sorted members</p>"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.Group.name-property", 
                "isClassProperty": false, 
                "name": "name", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4.0", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>The name of the group</p>"
            }
        ], 
        "returns": null, 
        "since": "1.4.0", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.Contacts.Person": {
        "deprecated": null, 
        "description": "<p>An object which represents a person in the contacts database.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [], 
        "notes": "<p>There are two kinds of properties: single value and multivalue.  Single value properties are returned as a direct value, while mutlivalue properties are returned as dictionary objects with keys which represent labels of the property, with values that are arrays of all values in the property which correspond to that label (e.g. {\"home\" : [address1, address2]})</p>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.Person.URL-property", 
                "isClassProperty": true, 
                "name": "URL", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>URLs of webpages associated with the person.  Multi-value, valid labels are: <tt>home</tt>, <tt>work</tt>, <tt>other</tt>, <tt>homepage</tt>.  Values are strings.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.Person.address-property", 
                "isClassProperty": false, 
                "name": "address", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>The addresses for the person.  Multi-value, valid labels are: <tt>home</tt>, <tt>work</tt>, <tt>other</tt>.  Values are dictionaries.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.Person.birthday-property", 
                "isClassProperty": false, 
                "name": "birthday", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>The birthday of the person.  Single value, format is \"yyyy-MM-dd'T'HH:mm:ss'.'SSS+0000\"</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.Person.created-property", 
                "isClassProperty": false, 
                "name": "created", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>The date the person was created in the database.  Single value, format is \"yyyy-MM-dd'T'HH:mm:ss'.'SSS+0000\", read-only</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.Person.date-property", 
                "isClassProperty": false, 
                "name": "date", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>Dates associated with the person.  Multi-value, valid labels are: <tt>anniversary</tt>.  Values are strings of format \"yyyy-MM-dd'T'HH:mm:ss'.'SSS+0000\"</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.Person.department-property", 
                "isClassProperty": false, 
                "name": "department", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>The department of the person.  Single value</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.Person.email-property", 
                "isClassProperty": false, 
                "name": "email", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>The email addresses for the person.  Multi-value, valid labels are: <tt>home</tt>, <tt>work</tt>, <tt>other</tt>.  Values are strings.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.Person.firstName-property", 
                "isClassProperty": false, 
                "name": "firstName", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>The first name of the person.  Single value</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.Person.firstPhonetic-property", 
                "isClassProperty": false, 
                "name": "firstPhonetic", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>The phonetic first name of the person.  Single value</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.Person.fullName-property", 
                "isClassProperty": false, 
                "name": "fullName", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>The localized full name of the person.  Single value, read-only</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.Person.image-property", 
                "isClassProperty": false, 
                "name": "image", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>A blob object representing the image for the person.  Set to <tt>null</tt> to remove the image.  Single value</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.Person.instantMessage-property", 
                "isClassProperty": false, 
                "name": "instantMessage", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>The instant messenger names for the person.  Multi-value, valid labels are: <tt>aim</tt>, <tt>icq</tt>, <tt>jabber</tt>, <tt>msn</tt>, <tt>yahoo</tt>.  Values are dictionaries.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.Person.jobTitle-property", 
                "isClassProperty": false, 
                "name": "jobTitle", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>The job title of the person.  Single value</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.Person.kind-property", 
                "isClassProperty": false, 
                "name": "kind", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The kind of person.  Single value, one of <a href=\"Titanium.Contacts.CONTACTS_KIND_PERSON-property.html\">Titanium.Contacts.CONTACTS_KIND_PERSON</a> or <a href=\"Titanium.Contacts.CONTACTS_KIND_ORGANIZATION-property.html\">Titanium.Contacts.CONTACTS_KIND_ORGANIZATION</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.Person.lastName-property", 
                "isClassProperty": false, 
                "name": "lastName", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>The last name of the person.  Single value</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.Person.lastPhonetic-property", 
                "isClassProperty": false, 
                "name": "lastPhonetic", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>The phonetic last name of the person.  Single value</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.Person.middleName-property", 
                "isClassProperty": false, 
                "name": "middleName", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>The middle name of the person.  Single value</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.Person.middlePhonetic-property", 
                "isClassProperty": false, 
                "name": "middlePhonetic", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>The phonetic middle name of the person.  Single value</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.Person.modified-property", 
                "isClassProperty": false, 
                "name": "modified", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>The most recent date the person was modified.  Single value, format is \"yyyy-MM-dd'T'HH:mm:ss'.'SSS+0000\", read-only</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.Person.nickname-property", 
                "isClassProperty": false, 
                "name": "nickname", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>The nickname of the person.  Single value</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.Person.note-property", 
                "isClassProperty": false, 
                "name": "note", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>Notes for the person.  Single value</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.Person.organization-property", 
                "isClassProperty": false, 
                "name": "organization", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>The organization the person belongs to.  Single value</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.Person.phone-property", 
                "isClassProperty": false, 
                "name": "phone", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>The phone numbers for the person.  Multi-value, valid labels are: <tt>home</tt>, <tt>work</tt>, <tt>other</tt>, <tt>mobile</tt>, <tt>pager</tt>, <tt>workFax</tt>, <tt>homeFax</tt>, <tt>main</tt>, <tt>iPhone</tt>.  Values are strings.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.Person.prefix-property", 
                "isClassProperty": false, 
                "name": "prefix", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>The prefix for the person.  Single value</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.Person.relatedNames-property", 
                "isClassProperty": false, 
                "name": "relatedNames", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>The names of people the person is related to.  Multi-value, valid labels are: <tt>mother</tt>, <tt>father</tt>, <tt>parent</tt>, <tt>sister</tt>, <tt>brother</tt>, <tt>child</tt>, <tt>friend</tt>, <tt>spouse</tt>, <tt>partner</tt>, <tt>manager</tt>, <tt>assistant</tt>.  Values are strings.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Contacts.Person.suffix-property", 
                "isClassProperty": false, 
                "name": "suffix", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>The suffix for the person.  Single value</p>"
            }
        ], 
        "returns": null, 
        "since": "0.8", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.Database": {
        "deprecated": null, 
        "description": "<p>The top level Database module.  The Database module is used for creating and accessing the in-application Database. </p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.Database.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.Database.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Database.install-method", 
                "name": "install", 
                "parameters": [
                    {
                        "description": "the path (relative to the main application Resources folder at build time) to the db to install. this file must be in the SQLite 3 file format.", 
                        "name": "path", 
                        "type": "string"
                    }, 
                    {
                        "description": "the name of the database", 
                        "name": "name", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.1", 
                "value": "<p>install a database from the application Resources folder (at build time) and return a reference to the opened database. it is safe to call this method multiple times since this method will only install once if it doesn't already exist on the device.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Database.open-method", 
                "name": "open", 
                "parameters": [
                    {
                        "description": "the name of the database", 
                        "name": "name", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.1", 
                "value": "<p>open a database. if it doesn't yet exist, create it.</p>"
            }, 
            {
                "filename": "Titanium.Database.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "remove a previously added event listener"
            }
        ], 
        "notes": null, 
        "objects": [
            "Titanium.Database.DB", 
            "Titanium.Database.ResultSet"
        ], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Database.FIELD_TYPE_DOUBLE-property", 
                "isClassProperty": true, 
                "name": "FIELD_TYPE_DOUBLE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for requesting a column's value returned in double form.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Database.FIELD_TYPE_FLOAT-property", 
                "isClassProperty": true, 
                "name": "FIELD_TYPE_FLOAT", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for requesting a column's value returned in float form.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Database.FIELD_TYPE_INT-property", 
                "isClassProperty": true, 
                "name": "FIELD_TYPE_INT", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for requesting a column's value returned in integer form.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Database.FIELD_TYPE_STRING-property", 
                "isClassProperty": true, 
                "name": "FIELD_TYPE_STRING", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for requesting a column's value returned in string form.</p>"
            }
        ], 
        "returns": "object", 
        "since": "0.1", 
        "subtype": null, 
        "type": "module"
    }, 
    "Titanium.Database.DB": {
        "deprecated": null, 
        "description": "<p>The Database instance returned by <a href=\"Titanium.Database.open-method.html\">Titanium.Database.open</a> or <a href=\"Titanium.Database.install-method.html\">Titanium.Database.install</a>. </p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.Database.DB.close-method", 
                "name": "close", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>close the database and release resources from memory. once closed, this instance is no longer valid and must no longer be used.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Database.DB.execute-method", 
                "name": "execute", 
                "parameters": [
                    {
                        "description": "the SQL to execute", 
                        "name": "sql", 
                        "type": "string"
                    }, 
                    {
                        "description": "one or more optional variable arguments passed to this function or an array of objects to be replaced in the query using <tt>?</tt> substitution.", 
                        "name": "vararg", 
                        "type": "Array<Object>"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.1", 
                "value": "<p>execute a SQL statement against the database and returns a ResultSet</p>"
            }, 
            {
                "filename": "Titanium.Database.DB.remove-method", 
                "name": "remove", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>remove the database files for this instance from disk. WARNING: this is a destructive operation and cannot be reversed. All data in the database will be lost upon calling this function. Use with caution.</p>"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Database.DB.lastInsertRowId-property", 
                "isClassProperty": false, 
                "name": "lastInsertRowId", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the last row identifier by the last INSERT query</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Database.DB.name-property", 
                "isClassProperty": false, 
                "name": "name", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the name of the database</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Database.DB.rowsAffected-property", 
                "isClassProperty": false, 
                "name": "rowsAffected", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the number of rows affected by the last query</p>"
            }
        ], 
        "returns": null, 
        "since": "0.1", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.Database.ResultSet": {
        "deprecated": null, 
        "description": "<p>The ResultSet instance returned by invoking a database SQL <tt>execute</tt>.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.Database.ResultSet.close-method", 
                "name": "close", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>close the result set and release resources. once closed, this result set must no longer be used</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Database.ResultSet.field-method", 
                "name": "field", 
                "parameters": [
                    {
                        "description": "column index (which is zero based)", 
                        "name": "index", 
                        "type": "int"
                    }, 
                    {
                        "description": "[optional] one of (<a href=\"Titanium.Database.FIELD_TYPE_STRING-property.html\">Titanium.Database.FIELD_TYPE_STRING</a> | <a href=\"Titanium.Database.FIELD_TYPE_INT-property.html\">Titanium.Database.FIELD_TYPE_INT</a> | <a href=\"Titanium.Database.FIELD_TYPE_FLOAT-property.html\">Titanium.Database.FIELD_TYPE_FLOAT</a> | <a href=\"Titanium.Database.FIELD_TYPE_DOUBLE-property.html\">Titanium.Database.FIELD_TYPE_DOUBLE</a>)", 
                        "name": "type", 
                        "type": "int"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.1", 
                "value": "<p>retrieve a row value by field index</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Database.ResultSet.fieldByName-method", 
                "name": "fieldByName", 
                "parameters": [
                    {
                        "description": "column name from SQL query", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "[optional] one of (<a href=\"Titanium.Database.FIELD_TYPE_STRING-property.html\">Titanium.Database.FIELD_TYPE_STRING</a> | <a href=\"Titanium.Database.FIELD_TYPE_INT-property.html\">Titanium.Database.FIELD_TYPE_INT</a> | <a href=\"Titanium.Database.FIELD_TYPE_FLOAT-property.html\">Titanium.Database.FIELD_TYPE_FLOAT</a> | <a href=\"Titanium.Database.FIELD_TYPE_DOUBLE-property.html\">Titanium.Database.FIELD_TYPE_DOUBLE</a>)", 
                        "name": "type", 
                        "type": "int"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.1", 
                "value": "<p>retrieve a row value by field name</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Database.ResultSet.fieldCount-method", 
                "name": "fieldCount", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "int", 
                "since": "0.1", 
                "value": "<p>return the number of columns in the result set</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Database.ResultSet.fieldName-method", 
                "name": "fieldName", 
                "parameters": [
                    {
                        "description": "field name column index (which is zero based)", 
                        "name": "index", 
                        "type": "int"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "string", 
                "since": "0.1", 
                "value": "<p>return the field name for field index</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Database.ResultSet.isValidRow-method", 
                "name": "isValidRow", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "boolean", 
                "since": "0.1", 
                "value": "<p>return true if the row is a valid row</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Database.ResultSet.next-method", 
                "name": "next", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "boolean", 
                "since": "0.1", 
                "value": "<p>iterate to the next row in the result set. returns false if no more results are available</p>"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Database.ResultSet.rowCount-property", 
                "isClassProperty": false, 
                "name": "rowCount", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the number of rows in the result set</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Database.ResultSet.validRow-property", 
                "isClassProperty": false, 
                "name": "validRow", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>returns true if the current row is still valid</p>"
            }
        ], 
        "returns": null, 
        "since": "0.1", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.Facebook": {
        "deprecated": null, 
        "description": "<p>The top level Facebook module.  The Facebook module is used for connecting your application with \nFacebook through the <a href=\"http://developers.facebook.com/docs/reference/api/\">Facebook Graph API</a> (see <tt>requestWithGraphPath</tt>) or the deprecated <a href=\"http://developers.facebook.com/docs/reference/rest/\">Facebook REST API</a> (see <tt>request</tt>).\nDue to how the facebook login process works on iOS, your app will need to have the following in your tiapp.xml if you target those platforms:</p>\n<property name=\"ti.facebook.appid\">your_app_id_here</property>\n\n<p>You must still set Ti.Facebook.appid within your app itself to use the facebook module.  This property is used only for configuring your app to interface with the facebook login process.</p>", 
        "events": [
            {
                "filename": "Titanium.Facebook.login-event", 
                "name": "login", 
                "properties": {
                    "cancelled": "<p>true if the user cancelled the request by closing the dialog</p>", 
                    "data": "<p>data returned by Facebook when we query for the uid (using graph path \"me\") after successful login.  Data is in JSON format.  Includes information such as user name, locale and gender.</p>", 
                    "error": "<p>error message if success was false</p>", 
                    "source": "the source object that fired the event", 
                    "success": "<p>true if the login was successful</p>", 
                    "type": "the name of the event fired", 
                    "uid": "<p>the user id returned by Facebook if the login was successful.</p>"
                }, 
                "value": "<p>fired at session login</p>"
            }, 
            {
                "filename": "Titanium.Facebook.logout-event", 
                "name": "logout", 
                "properties": {
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>fired at session logout</p>"
            }
        ], 
        "examples": [
            {
                "code": "<p>Shows official Facebook dialog for logging in the user and prompting the user to approve your requested permissions.  Listen for the module's \"login\" event to determine success/failure.</p>\n<pre><code>Titanium.Facebook.appid = '[YOUR APPID]';\nTitanium.Facebook.permissions = ['publish_stream']; // Permissions your app needs\nTitanium.Facebook.addEventListener('login', function(e) {\n    if (e.success) {\n        alert('Logged In');\n    } else if (e.error) {\n        alert(e.error);\n    } else if (e.cancelled) {\n        alert(\"Cancelled\");\n    }\n});\nTitanium.Facebook.authorize();\n</code></pre>", 
                "description": "Authorize"
            }, 
            {
                "code": "<p>Logout the user and forget the authorization token.  Listen for the module's \"logout\" event to determine when logout is finished.</p>\n<pre><code>Titanium.Facebook.addEventListener('logout', function(e) {\n    alert('Logged out');\n});\nTitanium.Facebook.logout();\n</code></pre>", 
                "description": "Logout"
            }, 
            {
                "code": "<p>We've provided the Facebook-themed LoginButton which updates its state automatically depending on whether the user is logged-in or not.  I.e., when the user is logged-in, then the button will show \"Logout\", and vice-versa.</p>\n<p>Note that you don't need to set a click listener or anything else on the button.  It \"just works\".  To listen for the actual login and logout events (which are part of the Titanium Facebook module and not specific to the login button), add listeners at the module level as in the example below.</p>\n<pre><code>// Don't forget to set your appid and requested permissions, else the login button\n// won't be effective.\nTitanium.Facebook.appid = '[your appid]';\nTitanium.Facebook.permissions = ['publish_stream'];\nTitanium.Facebook.addEventListener('login', function(e) {\n    if (e.success) {\n        alert('Logged in');\n    }\n});\nTitanium.Facebook.addEventListener('logout', function(e) {\n    alert('Logged out');\n});\n\n// add the button.  Note that it doesn't need a click event or anything.\nTitanium.UI.currentWindow.add(Titanium.Facebook.createLoginButton({ top: 50, style: 'wide' }));\n</code></pre>\n\n<p>The <tt>style:'wide'</tt> shows a wide version of the button that displays \"Connect with Facebook\" instead of just \"Connect\".</p>", 
                "description": "Authorize/Logout via the special LoginButton"
            }, 
            {
                "code": "<p>This example makes a call to the \"me\" graph path and displays the results, which will be JSON from Facebook.  It assumes the user is already logged-in (you can check this with <a href=\"Titanium.Facebook.loggedIn-property.html\">Titanium.Facebook.loggedIn</a>.)</p>\n<pre><code>Titanium.Facebook.requestWithGraphPath('me', {}, 'GET', function(e) {\n    if (e.success) {\n        alert(e.result);\n    } else if (e.error) {\n        alert(e.error);\n    } else {\n        alert('Unknown response');\n    }\n});\n</code></pre>", 
                "description": "Simple Graph API call"
            }, 
            {
                "code": "<p>This example uses the Graph API to <a href=\"http://developers.facebook.com/docs/reference/api/event/\">create an event</a> in the logged-on user's Facebook account.  This requires the \"create_event\" permission.</p>\n<pre><code>// First make sure this permission exists\nTitanium.Facebook.permissions = ['create_event'];\nTitanium.Facebook.authorize();\n\n// ...\n// ...\n\n// Now create the event after you've confirmed authorize() was successful.\nvar starttime = new Date(2011, 4, 31, 17, 0);\nvar endtime = new Date(2011, 4, 31, 19, 0);\nvar title = \"Barry's Birthday Celebration\";\nvar description = \"Barry will have a great party\";\nvar data = {\n    start_time: JSON.stringify(starttime), // API expects a JSON stringified date\n    end_time: JSON.stringify(endtime),\n    description: description,\n    name: title\n};\nTitanium.Facebook.requestWithGraphPath('me/events', data, 'POST', function(e) {\n    if (e.success) {\n        alert(\"Success! Returned from FB: \" + e.result);\n    } else {\n        if (e.error) {\n            alert(e.error);\n        } else {\n            alert(\"Unknown result\");\n        }\n    }\n});\n</code></pre>", 
                "description": "Create an Event with Graph API"
            }, 
            {
                "code": "<p>Use the Graph API to set the <a href=\"http://developers.facebook.com/docs/reference/api/status/\">user's Facebook status</a>.  Requires the \"publish_stream\" permissions.</p>\n<pre><code>// First make sure this permission exists\nTitanium.Facebook.permissions = ['publish_stream'];\nTitanium.Facebook.authorize();\n\n// ...\n// ...\n\n// Now create the status message after you've confirmed that authorize() succeeded\nTitanium.Facebook.requestWithGraphPath('me/feed', {message: \"Trying out FB Graph API and it's fun!\"}, \"POST\", function(e) {\n    if (e.success) {\n        alert(\"Success!  From FB: \" + e.result);\n    } else {\n        if (e.error) {\n            alert(e.error);\n        } else {\n            alert(\"Unkown result\");\n        }\n    }\n});\n</code></pre>", 
                "description": "Set user's Facebook status with Graph API"
            }, 
            {
                "code": "<p>This example <a href=\"http://developers.facebook.com/docs/reference/api/photo/\">posts a photo to the user's account</a> using the Graph API.  Another example below shows how to do this with the REST API, if desired.  This requires the \"publish_stream\" permission.</p>\n<pre><code>// First make sure this permission exists\nTitanium.Facebook.permissions = ['publish_stream'];\nTitanium.Facebook.authorize();\n\n// ...\n// ...\n\n// Now post the photo after you've confirmed that authorize() succeeded\nvar f = Ti.Filesystem.getFile('pumpkin.jpg');\nvar blob = f.read();\nvar data = {\n    message: 'This is a pumpkin',\n    picture: blob\n};\nTitanium.Facebook.requestWithGraphPath('me/photos', data, 'POST', function(e){\n    if (e.success) {\n        alert(\"Success!  From FB: \" + e.result);\n    } else {\n        if (e.error) {\n            alert(e.error);\n        } else {\n            alert(\"Unkown result\");\n        }\n    }\n});\n</code></pre>", 
                "description": "Post a photo using the Graph API"
            }, 
            {
                "code": "<p>This example <a href=\"http://developers.facebook.com/docs/reference/rest/photos.upload/\">posts a photo to the user's account</a> using the REST API.  Another example above shows how to do this with the Graph API.  This requires the \"publish_stream\" permission.</p>\n<pre><code>// First make sure this permission exists\nTitanium.Facebook.permissions = ['publish_stream'];\nTitanium.Facebook.authorize();\n\n// ...\n// ...\n\n// Now post the photo after you've confirmed that authorize() succeeded\nvar f = Ti.Filesystem.getFile('pumpkin.jpg');\nvar blob = f.read();\nvar data = {\n    caption: 'This is a pumpkin',\n    picture: blob\n};\nTitanium.Facebook.request('photos.upload', data, function(e){\n    if (e.success) {\n        alert(\"Success!  From FB: \" + e.result);\n    } else {\n        if (e.error) {\n            alert(e.error);\n        } else {\n            alert(\"Unkown result\");\n        }\n    }\n});\n</code></pre>", 
                "description": "Post a photo using the REST API"
            }, 
            {
                "code": "<p>This example shows how to display the <a href=\"http://developers.facebook.com/docs/reference/dialogs/feed/\">official Facebook dialog</a> for making a post to the user's feed.  In this example, we'll prefill some of the feed fields by passing a data dictionary to the dialog() method; this is not required.</p>\n<pre><code>var data = {\n    link: \"http://www.appcelerator.com\",\n    name: \"Appcelerator Titanium Mobile\",\n    message: \"Checkout this cool open source project for creating mobile apps\",\n    caption: \"Appcelerator Titanium Mobile\",\n    picture: \"http://developer.appcelerator.com/assets/img/DEV_titmobile_image.png\",\n    description: \"You've got the ideas, now you've got the power. Titanium translates your hard won web skills into native applications...\"\n};\nTitanium.Facebook.dialog(\"feed\", data, function(e) {\n    if (e.success) {\n        alert(\"Success!  From FB: \" + e.result);\n    } else {\n        if (e.error) {\n            alert(e.error);\n        } else if (e.cancelled) {\n            alert('Cancelled');\n        } else {\n            alert(\"Unkown result\");\n        }\n    }\n});\n</code></pre>", 
                "description": "Show the Facebook Feed Dialog"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.Facebook.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.Facebook.authorize-method", 
                "name": "authorize", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>Login the user (if not already logged in) and authorize your application.  Be sure to set your desired <tt>permissions</tt> and your <tt>appid</tt> before calling this.</p>"
            }, 
            {
                "filename": "Titanium.Facebook.createLoginButton-method", 
                "name": "createLoginButton", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.Facebook.LoginButton.html\">Titanium.Facebook.LoginButton</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.8", 
                "value": "create and return an instance of <a href=\"Titanium.Facebook.LoginButton.html\">Titanium.Facebook.LoginButton</a>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.dialog-method", 
                "name": "dialog", 
                "parameters": [
                    {
                        "description": "Specifies which dialog to show, such as \"feed\".", 
                        "name": "action", 
                        "type": "string"
                    }, 
                    {
                        "description": "A dictionary object for pre-filling some of the dialog's fields.  See example.", 
                        "name": "params", 
                        "type": "object"
                    }, 
                    {
                        "description": "A callback for when dialog is completed/cancelled.  The callback should accept a single argument which will be filled with a dictionary object concerning call results: items in the dictionary can be \"success\" (boolean), \"error\" (string with the error message), \"cancelled\" (set to true if user cancelled) and \"result\" (the data returned by Facebook.)", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>Open a supported Facebook <a href=\"http://developers.facebook.com/docs/reference/dialogs/\">dialog</a>.  \"feed\" is just about the only useful one.</p>"
            }, 
            {
                "filename": "Titanium.Facebook.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.Facebook.logout-method", 
                "name": "logout", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>Clear the OAuth <tt>accessToken</tt> and logout the user.</p>"
            }, 
            {
                "filename": "Titanium.Facebook.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously added event listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.request-method", 
                "name": "request", 
                "parameters": [
                    {
                        "description": "The REST API method to call.", 
                        "name": "method", 
                        "type": "string"
                    }, 
                    {
                        "description": "A dictionary object for setting parameters required by the call, if any.  See examples.", 
                        "name": "params", 
                        "type": "object"
                    }, 
                    {
                        "description": "A callback for when call is completed.  The callback should accept a single argument which will be filled with a dictionary object concerning call results: items in the dictionary can be \"success\" (boolean), \"error\" (string with the error message), \"method\" (the REST method call you specified), \"result\" (the data returned by Facebook.)", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>Make a request to the deprecated <a href=\"http://developers.facebook.com/docs/reference/rest/\">Facebook REST API</a>.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.requestWithGraphPath-method", 
                "name": "requestWithGraphPath", 
                "parameters": [
                    {
                        "description": "The graph API path to request.  For example, \"me\" requests [information about the logged-in user](http://developers.facebook.com/docs/reference/api/user/).", 
                        "name": "path", 
                        "type": "string"
                    }, 
                    {
                        "description": "A dictionary object for setting parameters required by the call, if any.  See examples.", 
                        "name": "params", 
                        "type": "object"
                    }, 
                    {
                        "description": "The http method (GET/POST/DELETE) to use for the call.", 
                        "name": "httpMethod", 
                        "type": "string"
                    }, 
                    {
                        "description": "A callback for when call is completed.  The callback should accept a single argument which will be filled with a dictionary object concerning call results: items in the dictionary can be \"success\" (boolean), \"error\" (string with the error message), \"path\" (the graph call path you specified), \"result\" (the JSON returned by Facebook.)", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>Make a <a href=\"http://developers.facebook.com/docs/reference/api/\">Facebook Graph API</a> request.  If the request requires user authorization, be sure user is already logged-in and your app is authorized.  (You can check <tt>loggedIn</tt> for that.)</p>"
            }
        ], 
        "notes": "<p>Titanium Mobile SDK 1.6.0 marked a significant change for this module.  Older versions of the module were not compatible with the new Graph API.  Applications written for the pre-1.6.0 version of this module will <strong>not</strong> work with the 1.6.0 and higher versions.  Nor is the code shown in the examples here backwards-compatible with pre-1.6.0 Titanium Mobile SDK.</p>", 
        "objects": [
            "Titanium.Facebook.LoginButton"
        ], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.accessToken-property", 
                "isClassProperty": false, 
                "name": "accessToken", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>OAuth token set after a successful <tt>authorize</tt>.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.appid-property", 
                "isClassProperty": false, 
                "name": "appid", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>your Facebook application id.  You need to set this for anything to work.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.expirationDate-property", 
                "isClassProperty": false, 
                "name": "expirationDate", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "date", 
                "type_jsca": "date", 
                "value": "<p>Time at which the <tt>accessToken</tt> expires.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.forceDialogAuth-property", 
                "isClassProperty": false, 
                "name": "forceDialogAuth", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>Set to false to enable \"Single-Sign-On\" in cases where the official Facebook app is on the device.  Default is true, meaning the traditional, dialog-based authentication is used rather than Single-Sign-On.  See <a href=\"http://developers.facebook.com/docs/guides/mobile\">Facebook Mobile Guide</a> for details of their Single-Sign-On schem.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.loggedIn-property", 
                "isClassProperty": false, 
                "name": "loggedIn", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>returns true if the user has logged in</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.permissions-property", 
                "isClassProperty": false, 
                "name": "permissions", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>set/return an array of permissions to request for your app.  Be sure the permissions you want are set before calling <tt>authorize</tt>.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.uid-property", 
                "isClassProperty": false, 
                "name": "uid", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the unique user id returned from Facebook.</p>"
            }
        ], 
        "returns": "object", 
        "since": "0.8", 
        "subtype": null, 
        "type": "module"
    }, 
    "Titanium.Facebook.LoginButton": {
        "deprecated": null, 
        "description": "<p>The Login Button created by <a href=\"Titanium.Facebook.createLoginButton.html\">Titanium.Facebook.createLoginButton</a>.  This is a Facebook-themed button that does not require a click event handler or any listeners.  It \"just works\" and changes its label to reflect the current state of the Facebook session.  For example, if the user is already logged in, this button will show \"Logout\".</p>", 
        "events": [
            {
                "filename": "Titanium.Facebook.LoginButton.click-event", 
                "name": "click", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a click (longer than touch) against the view"
            }, 
            {
                "filename": "Titanium.Facebook.LoginButton.dblclick-event", 
                "name": "dblclick", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double click against the view"
            }, 
            {
                "filename": "Titanium.Facebook.LoginButton.doubletap-event", 
                "name": "doubletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double tap against the view"
            }, 
            {
                "filename": "Titanium.Facebook.LoginButton.singletap-event", 
                "name": "singletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a single tap against the view"
            }, 
            {
                "filename": "Titanium.Facebook.LoginButton.swipe-event", 
                "name": "swipe", 
                "properties": {
                    "direction": "direction of the swipe - either left or right", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a swipe (left or right) against the view"
            }, 
            {
                "filename": "Titanium.Facebook.LoginButton.touchcancel-event", 
                "name": "touchcancel", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is interrupted by the device. this happens in circumenstances such as an incoming call to allow the UI to clean up state."
            }, 
            {
                "filename": "Titanium.Facebook.LoginButton.touchend-event", 
                "name": "touchend", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is completed"
            }, 
            {
                "filename": "Titanium.Facebook.LoginButton.touchmove-event", 
                "name": "touchmove", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects movement of a touch.  Event coordinates are always relative to the view in which the initial touch occurred"
            }, 
            {
                "filename": "Titanium.Facebook.LoginButton.touchstart-event", 
                "name": "touchstart", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects a gesture"
            }, 
            {
                "filename": "Titanium.Facebook.LoginButton.twofingertap-event", 
                "name": "twofingertap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a two-finger tap against the view"
            }
        ], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.Facebook.LoginButton.add-method", 
                "name": "add", 
                "parameters": [
                    {
                        "description": "the view to add to this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add a child to the view hierarchy"
            }, 
            {
                "filename": "Titanium.Facebook.LoginButton.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.Facebook.LoginButton.animate-method", 
                "name": "animate", 
                "parameters": [
                    {
                        "description": "either a dictionary of animation properties or an Animation object", 
                        "name": "obj", 
                        "type": "object"
                    }, 
                    {
                        "description": "function to be invoked upon completion of the animation", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "animate the view"
            }, 
            {
                "filename": "Titanium.Facebook.LoginButton.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.Facebook.LoginButton.hide-method", 
                "name": "hide", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "hide the view"
            }, 
            {
                "filename": "Titanium.Facebook.LoginButton.remove-method", 
                "name": "remove", 
                "parameters": [
                    {
                        "description": "the view to remove from this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously add view from the view hiearchy"
            }, 
            {
                "filename": "Titanium.Facebook.LoginButton.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously added event listener"
            }, 
            {
                "filename": "Titanium.Facebook.LoginButton.show-method", 
                "name": "show", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "make the view visible"
            }, 
            {
                "filename": "Titanium.Facebook.LoginButton.toImage-method", 
                "name": "toImage", 
                "parameters": [
                    {
                        "description": "function to be invoked upon completion. if non-null, this method will be performed asynchronously. if null, it will be performed immediately", 
                        "name": "f", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.8", 
                "value": "return a Blob image of the rendered view"
            }
        ], 
        "notes": "<p>See the examples in the <a href=\"Titanium.Facebook-module.html\">Titanium.Facebook</a> documentation.</p>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.anchorPoint-property", 
                "isClassProperty": false, 
                "name": "anchorPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the anchor point value. anchor specifies the position by which animation should occur. center is 0.5, 0.5"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.animatedCenterPoint-property", 
                "isClassProperty": false, 
                "name": "animatedCenterPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "read-only object with x and y properties of where the view is during animation"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.backgroundColor-property", 
                "isClassProperty": false, 
                "name": "backgroundColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.backgroundDisabledColor-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background color of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.backgroundDisabledImage-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background image url of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.backgroundFocusedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.backgroundFocusedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.backgroundGradient-property", 
                "isClassProperty": false, 
                "name": "backgroundGradient", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a background gradient for the view with the properties: type,startPoint,endPoint,startRadius,endRadius,backfillStart,backfillEnd,colors."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.backgroundImage-property", 
                "isClassProperty": false, 
                "name": "backgroundImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background image url of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.backgroundLeftCap-property", 
                "isClassProperty": false, 
                "name": "backgroundLeftCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the left end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The right end cap is therefore computed by adding the size of the left end cap and the middle portion together and then subtracting that value from the width of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.backgroundSelectedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.backgroundSelectedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.backgroundTopCap-property", 
                "isClassProperty": false, 
                "name": "backgroundTopCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the top end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The bottom end cap is therefore computed by adding the size of the top end cap and the middle portion together and then subtracting that value from the height of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.borderColor-property", 
                "isClassProperty": false, 
                "name": "borderColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the border color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.borderRadius-property", 
                "isClassProperty": false, 
                "name": "borderRadius", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border radius of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.borderWidth-property", 
                "isClassProperty": false, 
                "name": "borderWidth", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border width of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.bottom-property", 
                "isClassProperty": false, 
                "name": "bottom", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view bottom position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.center-property", 
                "isClassProperty": false, 
                "name": "center", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the center of the views position relative to the parent view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.focusable-property", 
                "isClassProperty": false, 
                "name": "focusable", 
                "platforms": [
                    "android"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "Set true if you want a view to be focusable when navigating with the trackball or D-Pad. Default: false. (Android Only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.font-family-property", 
                "isClassProperty": false, 
                "name": "font-family", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font family"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.font-size-property", 
                "isClassProperty": false, 
                "name": "font-size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font size"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.font-style-property", 
                "isClassProperty": false, 
                "name": "font-style", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font style, either normal or italics"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.font-weight-property", 
                "isClassProperty": false, 
                "name": "font-weight", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font weight, either normal or bold"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.height-property", 
                "isClassProperty": false, 
                "name": "height", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view height. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.left-property", 
                "isClassProperty": false, 
                "name": "left", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view left position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.opacity-property", 
                "isClassProperty": false, 
                "name": "opacity", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the opacity from 0.0-1.0"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.right-property", 
                "isClassProperty": false, 
                "name": "right", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view right position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.size-property", 
                "isClassProperty": false, 
                "name": "size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the size of the view as a dictionary of width and height properties"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.softKeyboardOnFocus-property", 
                "isClassProperty": false, 
                "name": "softKeyboardOnFocus", 
                "platforms": [
                    "android"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "One of Titanium.UI.Android.SOFT_KEYBOARD_DEFAULT_ON_FOCUS, Titanium.UI.Android.SOFT_KEYBOARD_HIDE_ON_FOCUS, or Titanium.UI.Android.SOFT_KEYBOARD_SHOW_ON_FOCUS. (Android only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.style-property", 
                "isClassProperty": false, 
                "name": "style", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>set to \"wide\" to show a wider version of the button that displays \"Connect with Facebook\" instead of just \"Connect\".</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.top-property", 
                "isClassProperty": false, 
                "name": "top", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view top position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.touchEnabled-property", 
                "isClassProperty": false, 
                "name": "touchEnabled", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean indicating if the view should receive touch events (true, default) or forward them to peers (false)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.transform-property", 
                "isClassProperty": false, 
                "name": "transform", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the transformation matrix to apply to the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.visible-property", 
                "isClassProperty": false, 
                "name": "visible", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean of the visibility of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.width-property", 
                "isClassProperty": false, 
                "name": "width", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view width. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Facebook.LoginButton.zIndex-property", 
                "isClassProperty": false, 
                "name": "zIndex", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "the z index position relative to other sibling views"
            }
        ], 
        "returns": null, 
        "since": "0.8", 
        "subtype": "view", 
        "type": "object"
    }, 
    "Titanium.Filesystem": {
        "deprecated": null, 
        "description": "<p>The top level Filesystem module.  The Filesystem module is used for reading and saving files and \ndirectories on the device.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.Filesystem.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.Filesystem.createFile-method", 
                "name": "createFile", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.Filesystem.File.html\">Titanium.Filesystem.File</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.1", 
                "value": "create and return an instance of <a href=\"Titanium.Filesystem.File.html\">Titanium.Filesystem.File</a>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.createTempDirectory-method", 
                "name": "createTempDirectory", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "Titanium.Filesystem.File", 
                "since": "0.1", 
                "value": "<p>create temp file and return a <a href=\"Titanium.Filesystem.File-object.html\">Titanium.Filesystem.File</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.createTempFile-method", 
                "name": "createTempFile", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "Titanium.Filesystem.File", 
                "since": "0.1", 
                "value": "<p>create a temp file and return a <a href=\"Titanium.Filesystem.File-object.html\">Titanium.Filesystem.File</a></p>"
            }, 
            {
                "filename": "Titanium.Filesystem.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.getFile-method", 
                "name": "getFile", 
                "parameters": [
                    {
                        "description": "one or more path arguments to form the full path joined together with the platform specific path separator. if a relative path is passed, the full path will be relative to the application resource folder.", 
                        "name": "path", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "Titanium.Filesystem.File", 
                "since": "0.1", 
                "value": "<p>return a fully formed file path as a <a href=\"Titanium.Filesystem.File-object.html\">Titanium.Filesystem.File</a> object</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.isExternalStoragePresent-method", 
                "name": "isExternalStoragePresent", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "boolean", 
                "since": "0.1", 
                "value": "<p>returns true if the android device supports external storage such as an SD card. Returns false on iOS.</p>"
            }, 
            {
                "filename": "Titanium.Filesystem.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "remove a previously added event listener"
            }
        ], 
        "notes": null, 
        "objects": [
            "Titanium.Filesystem.File", 
            "Titanium.Filesystem.FileStream"
        ], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.MODE_APPEND-property", 
                "isClassProperty": true, 
                "name": "MODE_APPEND", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for append mode for file operations</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.MODE_READ-property", 
                "isClassProperty": true, 
                "name": "MODE_READ", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for read mode for file operations</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.MODE_WRITE-property", 
                "isClassProperty": true, 
                "name": "MODE_WRITE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for write mode for file operations</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.applicationDataDirectory-property", 
                "isClassProperty": false, 
                "name": "applicationDataDirectory", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>readonly constant where your application data directory is located. this directory should be used to place applications-specific files. on iPhone, this directory is also backed up.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.applicationDirectory-property", 
                "isClassProperty": false, 
                "name": "applicationDirectory", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>readonly constant where your application is located</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.lineEnding-property", 
                "isClassProperty": false, 
                "name": "lineEnding", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>readonly platform specific line ending constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.resourcesDirectory-property", 
                "isClassProperty": false, 
                "name": "resourcesDirectory", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>readonly constant where your application resources are located</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.separator-property", 
                "isClassProperty": false, 
                "name": "separator", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>readonly path separator constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.tempDirectory-property", 
                "isClassProperty": false, 
                "name": "tempDirectory", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>readonly constant where your application can place temporary files</p>"
            }
        ], 
        "returns": "object", 
        "since": "0.1", 
        "subtype": null, 
        "type": "module"
    }, 
    "Titanium.Filesystem.File": {
        "deprecated": null, 
        "description": "<p>The File object which support various filesystem based operations.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.Filesystem.File.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.File.createDirectory-method", 
                "name": "createDirectory", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "boolean", 
                "since": "0.1", 
                "value": "<p>create a directory at the path for the file object</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.File.createFile-method", 
                "name": "createFile", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "boolean", 
                "since": "0.1", 
                "value": "<p>create a file path at the path for the file object</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.File.createTimestamp-method", 
                "name": "createTimestamp", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "long", 
                "since": "0.1", 
                "value": "<p>return the created timestamp for the file</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.File.deleteDirectory-method", 
                "name": "deleteDirectory", 
                "parameters": [
                    {
                        "description": "pass true to recursively delete any contents. defaults to false", 
                        "name": "recursive", 
                        "type": "boolean"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "boolean", 
                "since": "0.1", 
                "value": "<p>delete the file directory path</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.File.deleteFile-method", 
                "name": "deleteFile", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "boolean", 
                "since": "0.1", 
                "value": "<p>delete the file</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.File.executable-method", 
                "name": "executable", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "boolean", 
                "since": "0.1", 
                "value": "<p>returns true if the file is executable</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.File.exists-method", 
                "name": "exists", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "boolean", 
                "since": "0.1", 
                "value": "<p>returns true if the file or directory exists on the device</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.File.extension-method", 
                "name": "extension", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "string", 
                "since": "0.1", 
                "value": "<p>return the file extension</p>"
            }, 
            {
                "filename": "Titanium.Filesystem.File.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.File.getDirectoryListing-method", 
                "name": "getDirectoryListing", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "array", 
                "since": "0.1", 
                "value": "<p>return an array of paths in the directory of the file object</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.File.getParent-method", 
                "name": "getParent", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "Titanium.Filesystem.File", 
                "since": "0.1", 
                "value": "<p>return the file parent</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.File.hidden-method", 
                "name": "hidden", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "boolean", 
                "since": "0.1", 
                "value": "<p>returns true if the file is hidden</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.File.modificationTimestamp-method", 
                "name": "modificationTimestamp", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "long", 
                "since": "0.1", 
                "value": "<p>return the last modification timestamp for the file</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.File.move-method", 
                "name": "move", 
                "parameters": [
                    {
                        "description": "new location", 
                        "name": "newpath", 
                        "type": "string|object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "boolean", 
                "since": "0.1", 
                "value": "<p>move the file to another path</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.File.name-method", 
                "name": "name", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "string", 
                "since": "0.1", 
                "value": "<p>the name of the file</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.File.nativePath-method", 
                "name": "nativePath", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "string", 
                "since": "0.1", 
                "value": "<p>returns the fully resolved native path</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.File.read-method", 
                "name": "read", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "Titanium.Blob", 
                "since": "0.1", 
                "value": "<p>return the contents of file as blob</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.File.readonly-method", 
                "name": "readonly", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "boolean", 
                "since": "0.1", 
                "value": "<p>returns true if the file is readonly</p>"
            }, 
            {
                "filename": "Titanium.Filesystem.File.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "remove a previously added event listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.File.rename-method", 
                "name": "rename", 
                "parameters": [
                    {
                        "description": "new name", 
                        "name": "newname", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "boolean", 
                "since": "0.1", 
                "value": "<p>rename the file</p>"
            }, 
            {
                "filename": "Titanium.Filesystem.File.setExecutable-method", 
                "name": "setExecutable", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>make the file executable</p>"
            }, 
            {
                "filename": "Titanium.Filesystem.File.setHidden-method", 
                "name": "setHidden", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>make the file hidden</p>"
            }, 
            {
                "filename": "Titanium.Filesystem.File.setReadonly-method", 
                "name": "setReadonly", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>make the file readonly</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.File.spaceAvailable-method", 
                "name": "spaceAvailable", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "boolean", 
                "since": "0.1", 
                "value": "<p>return boolean to indicate if the path has space available for storage</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.File.symbolicLink-method", 
                "name": "symbolicLink", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "boolean", 
                "since": "0.1", 
                "value": "<p>returns true if the file points to a symbolic link</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.File.write-method", 
                "name": "write", 
                "parameters": [
                    {
                        "description": "write the contents of string, blob or [[Titanium.Filesystem.File]] to file", 
                        "name": "contents", 
                        "type": "string|object"
                    }, 
                    {
                        "description": "(optional) append the string to the end of the file.", 
                        "name": "append", 
                        "type": "boolean"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "boolean", 
                "since": "0.1", 
                "value": "<p>write the contents to file.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.File.writeable-method", 
                "name": "writeable", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "boolean", 
                "since": "0.1", 
                "value": "<p>returns true if the file is writeable</p>"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [], 
        "returns": null, 
        "since": "0.1", 
        "subtype": "proxy", 
        "type": "object"
    }, 
    "Titanium.Filesystem.FileStream": {
        "deprecated": null, 
        "description": "<p>Wrapper around <a href=\"Titanium.Filesystem.File-object.html\">Titanium.Filesystem.File</a> that implements the <a href=\"Titanium.IOStream-object.html\">Titanium.IOStream</a> interface.</p>", 
        "events": [], 
        "examples": [
            {
                "code": "<pre><code>var outBuffer = Ti.createBuffer({data: \"write me\"});\nvar outStream = // stream object could be socket, file, buffer or blob\n\nvar bytesWritten = outStream.write(outBuffer);  // writes entire buffer to stream\nTi.API.info(\"Bytes written:\" + bytesWritten);  // should be 8\n\nbytesWritten = outStream.write(outBuffer, 2, 5);  // only writes \"ite m\" to stream\nTi.API.info(\"Bytes written:\" + bytesWritten);  // should be 5\n</code></pre>", 
                "description": "Write data to stream"
            }, 
            {
                "code": "<pre><code>var inBuffer = Ti.createBuffer({length: 1024});\n\n// assume the inStream contains the string \"hello world\"\nvar inStream = // stream object could be socket, file, buffer or blob\n\nvar bytesRead = inStream.read(inBuffer);  // reads \"hello world\" from stream\nTi.API.info(\"Bytes read:\" + bytesRead);  // should be 11\n\nbytesRead = inStream.read(inBuffer, 2, 5);  // only reads \"llo w\" from stream\nTi.API.info(\"Bytes read:\" + bytesRead);  // should be 5\n</code></pre>", 
                "description": "Read data from stream"
            }
        ], 
        "methods": [
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.FileStream.close-method", 
                "name": "close", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.7", 
                "value": "<p>closes stream and throws exception on error</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.FileStream.isReadable-method", 
                "name": "isReadable", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "Boolean", 
                "since": "1.7", 
                "value": "<p>reads true if stream is readable, false otherwise</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.FileStream.isWriteable-method", 
                "name": "isWriteable", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "Boolean", 
                "since": "1.7", 
                "value": "<p>reads true if stream is writeable, false otherwise</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.FileStream.read-method", 
                "name": "read", 
                "parameters": [
                    {
                        "description": "buffer to read stream data into", 
                        "name": "buffer", 
                        "type": "<a href=\"Titanium.Buffer-object.html\">Titanium.Buffer</a>"
                    }, 
                    {
                        "description": "(Optional) offset to start reading buffer data from", 
                        "name": "offset", 
                        "type": "Number"
                    }, 
                    {
                        "description": "(Optional) length of data to read from buffer", 
                        "name": "length", 
                        "type": "Number"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "Number", 
                "since": "1.7", 
                "value": "<p>reads data from stream into a buffer.  Optional offset and length arguments to specify position in buffer in whichto start writing the read data, and the amount of data to read.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Filesystem.FileStream.write-method", 
                "name": "write", 
                "parameters": [
                    {
                        "description": "buffer to write to stream", 
                        "name": "buffer", 
                        "type": "<a href=\"Titanium.Buffer-object.html\">Titanium.Buffer</a>"
                    }, 
                    {
                        "description": "(Optional) offset to start writing buffer data from", 
                        "name": "offset", 
                        "type": "Number"
                    }, 
                    {
                        "description": "(Optional) length of data to write from buffer", 
                        "name": "length", 
                        "type": "Number"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "Number", 
                "since": "1.7", 
                "value": "<p>writes data from buffer to stream. Optional offset and length arguments to specify position in buffer in which to start reading data that is written to the stream, and the length of the data to take from the buffer.</p>"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "android", 
            "ipad"
        ], 
        "properties": [], 
        "returns": null, 
        "since": "1.7", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.Geolocation": {
        "deprecated": null, 
        "description": "<p>The top level Geolocation module. The Geolocation module is used for accessing device location based information.</p>", 
        "events": [
            {
                "filename": "Titanium.Geolocation.calibration-event", 
                "name": "calibration", 
                "properties": {
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>fired only on iPhone/iPad when the device detects interface and requires calibration. when this event is fired, the calibration UI is being displayed to the end user.</p>"
            }, 
            {
                "filename": "Titanium.Geolocation.heading-event", 
                "name": "heading", 
                "properties": {
                    "code": "<p>if success is false, the error code if available (iOS only)</p>", 
                    "error": "<p>if success is false, returns a string of the error description</p>", 
                    "heading": "<p>heading results dictionary with the following sub-properties: <tt>magneticHeading</tt>, <tt>trueHeading</tt>, <tt>accuracy</tt>, <tt>x</tt>, <tt>y</tt>, <tt>z</tt>, <tt>timestamp</tt>.</p>", 
                    "source": "the source object that fired the event", 
                    "success": "<p>boolean to indicate if the heading event was successfully received or an error occurred</p>", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>fired when a heading event is received</p>"
            }, 
            {
                "filename": "Titanium.Geolocation.location-event", 
                "name": "location", 
                "properties": {
                    "code": "<p>if success is false, the error code if available (iOS only)</p>", 
                    "coords": "<p>location coordinates dictionary with the following sub-properties: <tt>latitude</tt>, <tt>longitude</tt>, <tt>altitude</tt>, <tt>accuracy</tt>, <tt>altitudeAccuracy</tt>, <tt>heading</tt>, <tt>speed</tt>, <tt>timestamp</tt>.</p>", 
                    "error": "<p>if success is false, returns a string of the error description</p>", 
                    "provider": "<p>(Android only) location provider dictionary with the following sub-properties: <tt>name</tt>, <tt>accuracy</tt>, <tt>power</tt>, and <tt>provider</tt>.</p>", 
                    "source": "the source object that fired the event", 
                    "success": "<p>boolean to indicate if the location event was successfully received or an error occurred</p>", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>fired when a location event is received</p>"
            }
        ], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.Geolocation.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.Geolocation.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Geolocation.forwardGeocoder-method", 
                "name": "forwardGeocoder", 
                "parameters": [
                    {
                        "description": "address to resolve.", 
                        "name": "address", 
                        "type": "string"
                    }, 
                    {
                        "description": "function to invoke on success or failure. The event object contains the properties described as the <tt>place</tt> dictionary in <a href=\"Titanium.Geolocation.reverseGeocoder-method.html\">Titanium.Geolocation.reverseGeocoder</a>.", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>tries to resolve an address to a location.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Geolocation.getCurrentHeading-method", 
                "name": "getCurrentHeading", 
                "parameters": [
                    {
                        "description": "function to invoke on success or failure of obtaining the current heading. See heading event in <a href=\"Titanium.Geolocation-module.html\">Titanium.Geolocation</a>.", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>retrieve the current compass heading.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Geolocation.getCurrentPosition-method", 
                "name": "getCurrentPosition", 
                "parameters": [
                    {
                        "description": "function to invoke on success or failure of obtaining the current location. See location event in <a href=\"Titanium.Geolocation-module.html\">Titanium.Geolocation</a>.", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>retrieve the last known location from the device. On Android, the radios are not turned on to update the location. On iOS the radios MAY be used if the location is too \"old\".</p>"
            }, 
            {
                "filename": "Titanium.Geolocation.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "remove a previously added event listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Geolocation.reverseGeocoder-method", 
                "name": "reverseGeocoder", 
                "parameters": [
                    {
                        "description": "latitude to search", 
                        "name": "latitude", 
                        "type": "double"
                    }, 
                    {
                        "description": "longitude to search", 
                        "name": "longitude", 
                        "type": "double"
                    }, 
                    {
                        "description": "function to invoke on success or failure. The event object passed contains a <tt>places</tt> array of zero or more place dictionaries. Each <tt>place</tt> dictionary contains the following properties: <tt>street</tt>, <tt>street1</tt>, <tt>city</tt>, <tt>region1</tt>, <tt>region2</tt>, <tt>postalCode</tt>, <tt>country</tt>, <tt>countryCode</tt>, <tt>longitude</tt>, <tt>latitude</tt>, <tt>displayAddress</tt>, <tt>address</tt>.", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>tries to resolve a location to an address.</p>"
            }, 
            {
                "filename": "Titanium.Geolocation.setShowCalibration-method", 
                "name": "setShowCalibration", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>configure the calibration UI. set the false to disable the calibration display. (iOS only)</p>"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Geolocation.ACCURACY_BEST-property", 
                "isClassProperty": true, 
                "name": "ACCURACY_BEST", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>accuracy constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Geolocation.ACCURACY_HUNDRED_METERS-property", 
                "isClassProperty": true, 
                "name": "ACCURACY_HUNDRED_METERS", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>accuracy constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Geolocation.ACCURACY_KILOMETER-property", 
                "isClassProperty": true, 
                "name": "ACCURACY_KILOMETER", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>accuracy constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Geolocation.ACCURACY_NEAREST_TEN_METERS-property", 
                "isClassProperty": true, 
                "name": "ACCURACY_NEAREST_TEN_METERS", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>accuracy constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Geolocation.ACCURACY_THREE_KILOMETERS-property", 
                "isClassProperty": true, 
                "name": "ACCURACY_THREE_KILOMETERS", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>accuracy constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Geolocation.AUTHORIZATION_AUTHORIZED-property", 
                "isClassProperty": true, 
                "name": "AUTHORIZATION_AUTHORIZED", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>authorization constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Geolocation.AUTHORIZATION_DENIED-property", 
                "isClassProperty": true, 
                "name": "AUTHORIZATION_DENIED", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>authorization constant (user disabled authorization)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Geolocation.AUTHORIZATION_RESTRICTED-property", 
                "isClassProperty": true, 
                "name": "AUTHORIZATION_RESTRICTED", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>authorization constant (system disabled authorization)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Geolocation.AUTHORIZATION_UNKNOWN-property", 
                "isClassProperty": true, 
                "name": "AUTHORIZATION_UNKNOWN", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>authorization constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Geolocation.ERROR_DENIED-property", 
                "isClassProperty": true, 
                "name": "ERROR_DENIED", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>error constant (iOS only)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Geolocation.ERROR_HEADING_FAILURE-property", 
                "isClassProperty": true, 
                "name": "ERROR_HEADING_FAILURE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>error constant (iOS only)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Geolocation.ERROR_LOCATION_UNKNOWN-property", 
                "isClassProperty": true, 
                "name": "ERROR_LOCATION_UNKNOWN", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>error constant (iOS only)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Geolocation.ERROR_NETWORK-property", 
                "isClassProperty": true, 
                "name": "ERROR_NETWORK", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>error constant (iOS only)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Geolocation.ERROR_REGION_MONITORING_DELAYED-property", 
                "isClassProperty": true, 
                "name": "ERROR_REGION_MONITORING_DELAYED", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>error constant (iOS 4.0+ only)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Geolocation.ERROR_REGION_MONITORING_DENIED-property", 
                "isClassProperty": true, 
                "name": "ERROR_REGION_MONITORING_DENIED", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>error constant (iOS 4.0+ only)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Geolocation.ERROR_REGION_MONITORING_FAILURE-property", 
                "isClassProperty": true, 
                "name": "ERROR_REGION_MONITORING_FAILURE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>error constant (iOS 4.0+ only)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Geolocation.PROVIDER_GPS-property", 
                "isClassProperty": true, 
                "name": "PROVIDER_GPS", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>The GPS location provider</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Geolocation.PROVIDER_NETWORK-property", 
                "isClassProperty": true, 
                "name": "PROVIDER_NETWORK", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>The Network location provider</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Geolocation.distanceFilter-property", 
                "isClassProperty": false, 
                "name": "distanceFilter", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "double", 
                "type_jsca": "double", 
                "value": "<p>The minimum change of position (in meters) before a 'location' event is fired. Default is 0, meaning that location events are continuously generated.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Geolocation.headingFilter-property", 
                "isClassProperty": false, 
                "name": "headingFilter", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "double", 
                "type_jsca": "double", 
                "value": "<p>The minium change of heading (in degrees) before a 'heading' event is fired. Default is 0, meaning that heading events are continuously generated.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Geolocation.locationServicesAuthorization-property", 
                "isClassProperty": false, 
                "name": "locationServicesAuthorization", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>(iOS 4.2+ only). Returns an authorization constant indicating if the application has access to location services. Always returns AUTHORIZATION_UNKNOWN on pre-4.2 devices. Attempting to re-authorize when AUTHORIZATION_RESTRICTED will lead to issues</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Geolocation.locationServicesEnabled-property", 
                "isClassProperty": false, 
                "name": "locationServicesEnabled", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>returns true if the user has enabled or disable location services for the device (not the application).</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Geolocation.preferredProvider-property", 
                "isClassProperty": false, 
                "name": "preferredProvider", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>allows setting of the preferred location provider.  Returns undefined when the preferred provider is auto-detected</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Geolocation.purpose-property", 
                "isClassProperty": false, 
                "name": "purpose", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>(iOS only). This property informs the end-user why location services are being requested by the application.  This string will be display in the permission dialog. This property is REQUIRED starting in 4.0.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Geolocation.showCalibration-property", 
                "isClassProperty": false, 
                "name": "showCalibration", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>returns true if the calibration UI can show</p>"
            }
        ], 
        "returns": "object", 
        "since": "0.1", 
        "subtype": null, 
        "type": "module"
    }, 
    "Titanium.Gesture": {
        "deprecated": null, 
        "description": "<p>The top level Gestures module.  The Gesture module is responsible for high level device gestures that are device-wide.</p>", 
        "events": [
            {
                "filename": "Titanium.Gesture.orientationchange-event", 
                "name": "orientationchange", 
                "properties": {
                    "orientation": "<p>the orientation constant</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>fired when the device orientation changes</p>"
            }, 
            {
                "filename": "Titanium.Gesture.shake-event", 
                "name": "shake", 
                "properties": {
                    "source": "the source object that fired the event", 
                    "timestamp": "<p>timestamp reference since previous shake</p>", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>fired when the device is shaken</p>"
            }
        ], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.Gesture.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.Gesture.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.Gesture.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously added event listener"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [], 
        "returns": "object", 
        "since": "0.8", 
        "subtype": null, 
        "type": "module"
    }, 
    "Titanium.IOStream": {
        "deprecated": null, 
        "description": "<p>IOStream is the interface that all stream types implement</p>", 
        "events": [], 
        "examples": [
            {
                "code": "<pre><code>var outBuffer = Ti.createBuffer({data: \"write me\"});\nvar outStream = // stream object could be socket, file, buffer or blob\n\nvar bytesWritten = outStream.write(outBuffer);  // writes entire buffer to stream\nTi.API.info(\"Bytes written:\" + bytesWritten);  // should be 8\n\nbytesWritten = outStream.write(outBuffer, 2, 5);  // only writes \"ite m\" to stream\nTi.API.info(\"Bytes written:\" + bytesWritten);  // should be 5\n</code></pre>", 
                "description": "Write data to stream"
            }, 
            {
                "code": "<pre><code>var inBuffer = Ti.createBuffer({length: 1024});\n\n// assume the inStream contains the string \"hello world\"\nvar inStream = // stream object could be socket, file, buffer or blob\n\nvar bytesRead = inStream.read(inBuffer);  // reads \"hello world\" from stream\nTi.API.info(\"Bytes read:\" + bytesRead);  // should be 11\n\nbytesRead = inStream.read(inBuffer, 2, 5);  // only reads \"llo w\" from stream\nTi.API.info(\"Bytes read:\" + bytesRead);  // should be 5\n</code></pre>", 
                "description": "Read data from stream"
            }
        ], 
        "methods": [
            {
                "deprecated": false, 
                "filename": "Titanium.IOStream.close-method", 
                "name": "close", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.7", 
                "value": "<p>closes stream and throws exception on error</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.IOStream.isReadable-method", 
                "name": "isReadable", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "Boolean", 
                "since": "1.7", 
                "value": "<p>reads true if stream is readable, false otherwise</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.IOStream.isWriteable-method", 
                "name": "isWriteable", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "Boolean", 
                "since": "1.7", 
                "value": "<p>reads true if stream is writeable, false otherwise</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.IOStream.read-method", 
                "name": "read", 
                "parameters": [
                    {
                        "description": "buffer to read stream data into", 
                        "name": "buffer", 
                        "type": "<a href=\"Titanium.Buffer-object.html\">Titanium.Buffer</a>"
                    }, 
                    {
                        "description": "(Optional) offset to start reading buffer data from", 
                        "name": "offset", 
                        "type": "Number"
                    }, 
                    {
                        "description": "(Optional) length of data to read from buffer", 
                        "name": "length", 
                        "type": "Number"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "Number", 
                "since": "1.7", 
                "value": "<p>reads data from stream into a buffer.  Optional offset and length arguments to specify position in buffer in whichto start writing the read data, and the amount of data to read.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.IOStream.write-method", 
                "name": "write", 
                "parameters": [
                    {
                        "description": "buffer to write to stream", 
                        "name": "buffer", 
                        "type": "<a href=\"Titanium.Buffer-object.html\">Titanium.Buffer</a>"
                    }, 
                    {
                        "description": "(Optional) offset to start writing buffer data from", 
                        "name": "offset", 
                        "type": "Number"
                    }, 
                    {
                        "description": "(Optional) length of data to write from buffer", 
                        "name": "length", 
                        "type": "Number"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "Number", 
                "since": "1.7", 
                "value": "<p>writes data from buffer to stream. Optional offset and length arguments to specify position in buffer in which to start reading data that is written to the stream, and the length of the data to take from the buffer.</p>"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "android", 
            "ipad"
        ], 
        "properties": [], 
        "returns": null, 
        "since": "1.7", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.Locale": {
        "deprecated": null, 
        "description": "<p>The top level Locale module.  The Locale module works with localization files to which are generated during compilation into the operating system specific localization formats. The Locale module provides locale-specific strings which can be referenced at runtime.  Additionally, the module contains a few methods and properties for querying device locale information.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.Locale.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.Locale.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Locale.formatTelephoneNumber-method", 
                "name": "formatTelephoneNumber", 
                "parameters": [
                    {
                        "description": "the phone number to format", 
                        "name": "number", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "string", 
                "since": "1.5", 
                "value": "<p>format a telephone number according to the current locale.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Locale.getCurrencyCode-method", 
                "name": "getCurrencyCode", 
                "parameters": [
                    {
                        "description": "the locale for which you want to the currency code, e.g. getCurrencyCode('en-US') -> 'USD'", 
                        "name": "locale", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "string", 
                "since": "1.5", 
                "value": "<p>return a currency code for a given locale. (Android only)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Locale.getCurrencySymbol-method", 
                "name": "getCurrencySymbol", 
                "parameters": [
                    {
                        "description": "the currency for which you want the symbol, e.g. getCurrencySymbol('USD') -> '$'", 
                        "name": "currencyCode", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "string", 
                "since": "1.5", 
                "value": "<p>return a currency symbol for the given currency code. (Android only)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Locale.getLocaleCurrencySymbol-method", 
                "name": "getLocaleCurrencySymbol", 
                "parameters": [
                    {
                        "description": "the locale whose currency symbol you want, e.g. getLocaleCurrencySymbol('en-US') -> '$'", 
                        "name": "locale", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "string", 
                "since": "1.5", 
                "value": "<p>return a currency symbol for the given locale. (Android only)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Locale.getString-method", 
                "name": "getString", 
                "parameters": [
                    {
                        "description": "the key to use when mapping into the localization file", 
                        "name": "key", 
                        "type": "string"
                    }, 
                    {
                        "description": "the text to use if no key found in the localization file", 
                        "name": "hint", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "string", 
                "since": "1.5", 
                "value": "<p>return a localization string</p>"
            }, 
            {
                "filename": "Titanium.Locale.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "remove a previously added event listener"
            }
        ], 
        "notes": "<p>The macro <tt>L</tt> can also be used which aliases the method <a href=\"Titanium.Locale.getString-method.html\">Titanium.Locale.getString</a>.</p>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Locale.currentCountry-property", 
                "isClassProperty": false, 
                "name": "currentCountry", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>return the current (default) ISO 2-letter country code for the device.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Locale.currentLanguage-property", 
                "isClassProperty": false, 
                "name": "currentLanguage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>return the current language for the device based on the user's settings (readonly)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Locale.currentLocale-property", 
                "isClassProperty": false, 
                "name": "currentLocale", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>return the current locale string for the device based on the user's settings (e.g., en-US).  (readonly) (Android only)</p>"
            }
        ], 
        "returns": null, 
        "since": "1.5", 
        "subtype": null, 
        "type": "module"
    }, 
    "Titanium.Map": {
        "deprecated": null, 
        "description": "<p>The top level Map module.  The Map module is used for creating in-application native maps.</p>", 
        "events": [], 
        "examples": [
            {
                "code": "<p>This is a basic map example that uses a custom annotation on the map.</p>\n<pre><code>var mountainView = Titanium.Map.createAnnotation({\n    latitude:37.390749,\n    longitude:-122.081651,\n    title:\"Appcelerator Headquarters\",\n    subtitle:'Mountain View, CA',\n    pincolor:Titanium.Map.ANNOTATION_RED,\n    animate:true,\n    leftButton: '../images/appcelerator_small.png',\n    myid:1 // CUSTOM ATTRIBUTE THAT IS PASSED INTO EVENT OBJECTS\n});\n\nvar mapview = Titanium.Map.createView({\n    mapType: Titanium.Map.STANDARD_TYPE,\n    region: {latitude:33.74511, longitude:-84.38993, \n            latitudeDelta:0.01, longitudeDelta:0.01},\n    animate:true,\n    regionFit:true,\n    userLocation:true,\n    annotations:[mountainView]\n});\n\nwin.add(mapview);\n</code></pre>", 
                "description": "Map Example"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.Map.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.Map.createAnnotation-method", 
                "name": "createAnnotation", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.Map.Annotation.html\">Titanium.Map.Annotation</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.8", 
                "value": "create and return an instance of <a href=\"Titanium.Map.Annotation.html\">Titanium.Map.Annotation</a>"
            }, 
            {
                "filename": "Titanium.Map.createMapView-method", 
                "name": "createMapView", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.Map.MapView.html\">Titanium.Map.MapView</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.8", 
                "value": "create and return an instance of <a href=\"Titanium.Map.MapView.html\">Titanium.Map.MapView</a>"
            }, 
            {
                "filename": "Titanium.Map.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.Map.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously added event listener"
            }
        ], 
        "notes": null, 
        "objects": [
            "Titanium.Map.Annotation", 
            "Titanium.Map.MapView"
        ], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Map.HYBRID_TYPE-property", 
                "isClassProperty": true, 
                "name": "HYBRID_TYPE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Displays a satellite image of the area with road and road name information layered on top.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.SATELLITE_TYPE-property", 
                "isClassProperty": true, 
                "name": "SATELLITE_TYPE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Displays satellite imagery of the area.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.STANDARD_TYPE-property", 
                "isClassProperty": true, 
                "name": "STANDARD_TYPE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Displays a street map that shows the position of all roads and some road names.</p>"
            }
        ], 
        "returns": "object", 
        "since": "0.8", 
        "subtype": null, 
        "type": "module"
    }, 
    "Titanium.Map.Annotation": {
        "deprecated": null, 
        "description": "<p>An Annotation object that is created by the method <a href=\"Titanium.Map.createAnnotation.html\">Titanium.Map.createAnnotation</a>. This object gives you low level control over annotations that can be added to a Map View.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.Map.Annotation.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.Map.Annotation.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.Map.Annotation.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "remove a previously added event listener"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Map.Annotation.animate-property", 
                "isClassProperty": false, 
                "name": "animate", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean to indicate whether the pin should animate when dropped</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.Annotation.image-property", 
                "isClassProperty": false, 
                "name": "image", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>image view for the pin instead of default image.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.Annotation.leftButton-property", 
                "isClassProperty": false, 
                "name": "leftButton", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int,string", 
                "type_jsca": "int,string", 
                "value": "<p>the left button image on the annotation. must either be a button type constant or url</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.Annotation.leftView-property", 
                "isClassProperty": false, 
                "name": "leftView", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>a left view that is displayed on the annotation</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.Annotation.pinImage-property", 
                "isClassProperty": false, 
                "name": "pinImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>Android only. <em>DEPRECATED</em> use <a href=\"Titanium.Map.Annotation.image-property.html\">Titanium.Map.Annotation.image</a> property instead.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.Annotation.pincolor-property", 
                "isClassProperty": false, 
                "name": "pincolor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the pin color as one of <a href=\"Titanium.Map.ANNOTATION_RED.html\">Titanium.Map.ANNOTATION_RED</a>, <a href=\"Titanium.Map.ANNOTATION_GREEN.html\">Titanium.Map.ANNOTATION_GREEN</a> or <a href=\"Titanium.Map.ANNOTATION_PURPLE.html\">Titanium.Map.ANNOTATION_PURPLE</a>.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.Annotation.rightButton-property", 
                "isClassProperty": false, 
                "name": "rightButton", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int,string", 
                "type_jsca": "int,string", 
                "value": "<p>the right button image on the annotation. must either be a button type constant or url</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.Annotation.rightView-property", 
                "isClassProperty": false, 
                "name": "rightView", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>a right view that is displayed on the annotation</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.Annotation.subtitle-property", 
                "isClassProperty": false, 
                "name": "subtitle", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the secondary title of the annotation view</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.Annotation.subtitleid-property", 
                "isClassProperty": false, 
                "name": "subtitleid", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the key in the locale file to use for the subtitle property</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.Annotation.title-property", 
                "isClassProperty": false, 
                "name": "title", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the primary title of the annotation view</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.Annotation.titleid-property", 
                "isClassProperty": false, 
                "name": "titleid", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the key in the locale file to use for the title property</p>"
            }
        ], 
        "returns": null, 
        "since": "0.9", 
        "subtype": "proxy", 
        "type": "object"
    }, 
    "Titanium.Map.MapView": {
        "deprecated": null, 
        "description": "<p>The MapView is an object created by <a href=\"Titanium.Map.createView\">Titanium.Map.createView</a> and is used for embedding native mapping capabilities as a view in your application.  With native maps, you can control the mapping location, the type of map, the zoom level and you can add custom annotations directly to the map.</p>", 
        "events": [
            {
                "filename": "Titanium.Map.MapView.click-event", 
                "name": "click", 
                "properties": {
                    "annotation": "<p>the announce source object</p>", 
                    "clicksource": "<p>the source of either <tt>annotation</tt>, <tt>leftButton</tt> or <tt>rightButton</tt> to indicate to location of the click</p>", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "index": "<p>the annotation index</p>", 
                    "map": "<p>the map view instance</p>", 
                    "source": "the source object that fired the event", 
                    "title": "<p>the annotation title</p>", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a click (longer than touch) against the view"
            }, 
            {
                "filename": "Titanium.Map.MapView.complete-event", 
                "name": "complete", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the map completes loading</p>"
            }, 
            {
                "filename": "Titanium.Map.MapView.dblclick-event", 
                "name": "dblclick", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double click against the view"
            }, 
            {
                "filename": "Titanium.Map.MapView.doubletap-event", 
                "name": "doubletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double tap against the view"
            }, 
            {
                "filename": "Titanium.Map.MapView.error-event", 
                "name": "error", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "message": "<p>the error message</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the map receives a mapping error</p>"
            }, 
            {
                "filename": "Titanium.Map.MapView.loading-event", 
                "name": "loading", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the map begins loading</p>"
            }, 
            {
                "filename": "Titanium.Map.MapView.regionChanged-event", 
                "name": "regionChanged", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "latitude": "<p>the new latitude</p>", 
                    "latitudeDelta": "<p>the new latitude delta</p>", 
                    "longitude": "<p>the new longitude</p>", 
                    "longitudeDelta": "<p>the new longitude delta</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the mapping region changes</p>"
            }, 
            {
                "filename": "Titanium.Map.MapView.singletap-event", 
                "name": "singletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a single tap against the view"
            }, 
            {
                "filename": "Titanium.Map.MapView.swipe-event", 
                "name": "swipe", 
                "properties": {
                    "direction": "direction of the swipe - either left or right", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a swipe (left or right) against the view"
            }, 
            {
                "filename": "Titanium.Map.MapView.touchcancel-event", 
                "name": "touchcancel", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is interrupted by the device. this happens in circumenstances such as an incoming call to allow the UI to clean up state."
            }, 
            {
                "filename": "Titanium.Map.MapView.touchend-event", 
                "name": "touchend", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is completed"
            }, 
            {
                "filename": "Titanium.Map.MapView.touchmove-event", 
                "name": "touchmove", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects movement of a touch.  Event coordinates are always relative to the view in which the initial touch occurred"
            }, 
            {
                "filename": "Titanium.Map.MapView.touchstart-event", 
                "name": "touchstart", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects a gesture"
            }, 
            {
                "filename": "Titanium.Map.MapView.twofingertap-event", 
                "name": "twofingertap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a two-finger tap against the view"
            }
        ], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.Map.MapView.add-method", 
                "name": "add", 
                "parameters": [
                    {
                        "description": "the view to add to this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add a child to the view hierarchy"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.addAnnotation-method", 
                "name": "addAnnotation", 
                "parameters": [
                    {
                        "description": "either a dictionary of properties for the annotation or a [Titanium.Map.Annotation](Titanium.Map.Annotation) instance.", 
                        "name": "annotation", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>add a new annotation to the map</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.addAnnotations-method", 
                "name": "addAnnotations", 
                "parameters": [
                    {
                        "description": "an array of either a dictionary of properties for the annotation or a [Titanium.Map.Annotation](Titanium.Map.Annotation) instance.", 
                        "name": "annotations", 
                        "type": "array"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>add one or more new annotation to the map</p>"
            }, 
            {
                "filename": "Titanium.Map.MapView.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.addRoute-method", 
                "name": "addRoute", 
                "parameters": [
                    {
                        "description": "dictionary with the properties: <tt>name</tt> route name, <tt>points</tt> dictionary of values with longitude and latitude keys, <tt>color</tt> for the line color and <tt>width</tt> for the line width.", 
                        "name": "route", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>add a route. currently only supported on iphone</p>"
            }, 
            {
                "filename": "Titanium.Map.MapView.animate-method", 
                "name": "animate", 
                "parameters": [
                    {
                        "description": "either a dictionary of animation properties or an Animation object", 
                        "name": "obj", 
                        "type": "object"
                    }, 
                    {
                        "description": "function to be invoked upon completion of the animation", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "animate the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.deselectAnnotation-method", 
                "name": "deselectAnnotation", 
                "parameters": [
                    {
                        "description": "either a string of the annotation title or a [Titanium.Map.Annotation](Titanium.Map.Annotation) reference.", 
                        "name": "annotation", 
                        "type": "string,object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>cause the annotation to be deselected (hidden).</p>"
            }, 
            {
                "filename": "Titanium.Map.MapView.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.Map.MapView.hide-method", 
                "name": "hide", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "hide the view"
            }, 
            {
                "filename": "Titanium.Map.MapView.remove-method", 
                "name": "remove", 
                "parameters": [
                    {
                        "description": "the view to remove from this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously add view from the view hiearchy"
            }, 
            {
                "filename": "Titanium.Map.MapView.removeAllAnnotations-method", 
                "name": "removeAllAnnotations", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>removes all annotations added to the map</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.removeAnnotation-method", 
                "name": "removeAnnotation", 
                "parameters": [
                    {
                        "description": "either a string of the annotation title or a [Titanium.Map.Annotation](Titanium.Map.Annotation) reference.", 
                        "name": "annotation", 
                        "type": "string,object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>remove an existing annotation from the map</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.removeAnnotations-method", 
                "name": "removeAnnotations", 
                "parameters": [
                    {
                        "description": "an array of either a string of the annotation title or a [Titanium.Map.Annotation](Titanium.Map.Annotation) reference.", 
                        "name": "annotation", 
                        "type": "array"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>remove one or more existing annotations from the map</p>"
            }, 
            {
                "filename": "Titanium.Map.MapView.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously added event listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.removeRoute-method", 
                "name": "removeRoute", 
                "parameters": [
                    {
                        "description": "same route object used during addRoute", 
                        "name": "route", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>remove a previously added route. currently only supported on iphone</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.selectAnnotation-method", 
                "name": "selectAnnotation", 
                "parameters": [
                    {
                        "description": "either a string of the annotation title or a [Titanium.Map.Annotation](Titanium.Map.Annotation) reference.", 
                        "name": "annotation", 
                        "type": "string,object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>cause the annotation to be selected (shown).</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.setLocation-method", 
                "name": "setLocation", 
                "parameters": [
                    {
                        "description": "a dictionary that specifies the following properties specifying the location to set the map: <tt>latitudeDelta</tt>, <tt>longitudeDelta</tt>, <tt>latitude</tt>, <tt>longitude</tt>.", 
                        "name": "location", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>set and center the map location.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.setMapType-method", 
                "name": "setMapType", 
                "parameters": [
                    {
                        "description": "the map type constant of either <a href=\"Titanium.Map.STANDARD_TYPE-property.html\">Titanium.Map.STANDARD_TYPE</a>, <a href=\"Titanium.Map.SATELLITE_TYPE-property.html\">Titanium.Map.SATELLITE_TYPE</a> or <a href=\"Titanium.Map.HYBRID_TYPE-property.html\">Titanium.Map.HYBRID_TYPE</a>.", 
                        "name": "mapType", 
                        "type": "int"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>set the type of map (satellite, hybrid, standard)</p>"
            }, 
            {
                "filename": "Titanium.Map.MapView.show-method", 
                "name": "show", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "make the view visible"
            }, 
            {
                "filename": "Titanium.Map.MapView.toImage-method", 
                "name": "toImage", 
                "parameters": [
                    {
                        "description": "function to be invoked upon completion. if non-null, this method will be performed asynchronously. if null, it will be performed immediately", 
                        "name": "f", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.8", 
                "value": "return a Blob image of the rendered view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.zoom-method", 
                "name": "zoom", 
                "parameters": [
                    {
                        "description": "zoom level (can be positive or negative)", 
                        "name": "level", 
                        "type": "double"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>zoom in or out of the map</p>"
            }
        ], 
        "notes": "<p>For Android, you will need to <a href=\"http://code.google.com/android/maps-api-signup.html\">obtain a map key from Google</a> to use maps in your application.  On iPhone, you cannot call any methods on a map view until it has been added to a view.</p>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.anchorPoint-property", 
                "isClassProperty": false, 
                "name": "anchorPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the anchor point value. anchor specifies the position by which animation should occur. center is 0.5, 0.5"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.animate-property", 
                "isClassProperty": false, 
                "name": "animate", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean is mapping actions should be animated</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.animatedCenterPoint-property", 
                "isClassProperty": false, 
                "name": "animatedCenterPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "read-only object with x and y properties of where the view is during animation"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.annotations-property", 
                "isClassProperty": false, 
                "name": "annotations", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "array", 
                "type_jsca": "array", 
                "value": "<p>an array of annotations to add to the map</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.backgroundColor-property", 
                "isClassProperty": false, 
                "name": "backgroundColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.backgroundDisabledColor-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background color of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.backgroundDisabledImage-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background image url of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.backgroundFocusedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.backgroundFocusedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.backgroundGradient-property", 
                "isClassProperty": false, 
                "name": "backgroundGradient", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a background gradient for the view with the properties: type,startPoint,endPoint,startRadius,endRadius,backfillStart,backfillEnd,colors."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.backgroundImage-property", 
                "isClassProperty": false, 
                "name": "backgroundImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background image url of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.backgroundLeftCap-property", 
                "isClassProperty": false, 
                "name": "backgroundLeftCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the left end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The right end cap is therefore computed by adding the size of the left end cap and the middle portion together and then subtracting that value from the width of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.backgroundSelectedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.backgroundSelectedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.backgroundTopCap-property", 
                "isClassProperty": false, 
                "name": "backgroundTopCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the top end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The bottom end cap is therefore computed by adding the size of the top end cap and the middle portion together and then subtracting that value from the height of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.borderColor-property", 
                "isClassProperty": false, 
                "name": "borderColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the border color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.borderRadius-property", 
                "isClassProperty": false, 
                "name": "borderRadius", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border radius of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.borderWidth-property", 
                "isClassProperty": false, 
                "name": "borderWidth", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border width of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.bottom-property", 
                "isClassProperty": false, 
                "name": "bottom", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view bottom position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.center-property", 
                "isClassProperty": false, 
                "name": "center", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the center of the views position relative to the parent view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.focusable-property", 
                "isClassProperty": false, 
                "name": "focusable", 
                "platforms": [
                    "android"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "Set true if you want a view to be focusable when navigating with the trackball or D-Pad. Default: false. (Android Only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.font-family-property", 
                "isClassProperty": false, 
                "name": "font-family", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font family"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.font-size-property", 
                "isClassProperty": false, 
                "name": "font-size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font size"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.font-style-property", 
                "isClassProperty": false, 
                "name": "font-style", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font style, either normal or italics"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.font-weight-property", 
                "isClassProperty": false, 
                "name": "font-weight", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font weight, either normal or bold"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.height-property", 
                "isClassProperty": false, 
                "name": "height", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view height. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.left-property", 
                "isClassProperty": false, 
                "name": "left", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view left position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.location-property", 
                "isClassProperty": false, 
                "name": "location", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>a dictionary that specifies the following properties specifying the region location to set the map: <tt>latitudeDelta</tt>, <tt>longitudeDelta</tt>, <tt>latitude</tt>, <tt>longitude</tt>.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.mapType-property", 
                "isClassProperty": false, 
                "name": "mapType", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the map type constant of either <a href=\"Titanium.Map.STANDARD_TYPE-property.html\">Titanium.Map.STANDARD_TYPE</a>, <a href=\"Titanium.Map.SATELLITE_TYPE-property.html\">Titanium.Map.SATELLITE_TYPE</a> or <a href=\"Titanium.Map.HYBRID_TYPE-property.html\">Titanium.Map.HYBRID_TYPE</a>.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.opacity-property", 
                "isClassProperty": false, 
                "name": "opacity", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the opacity from 0.0-1.0"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.region-property", 
                "isClassProperty": false, 
                "name": "region", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>a dictionary that specifies the following properties specifying the region location to set the map: <tt>latitudeDelta</tt>, <tt>longitudeDelta</tt>, <tt>latitude</tt>, <tt>longitude</tt>.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.regionFit-property", 
                "isClassProperty": false, 
                "name": "regionFit", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean to indicate if the map should attempt to fit the map view into the region in the visible view</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.right-property", 
                "isClassProperty": false, 
                "name": "right", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view right position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.size-property", 
                "isClassProperty": false, 
                "name": "size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the size of the view as a dictionary of width and height properties"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.softKeyboardOnFocus-property", 
                "isClassProperty": false, 
                "name": "softKeyboardOnFocus", 
                "platforms": [
                    "android"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "One of Titanium.UI.Android.SOFT_KEYBOARD_DEFAULT_ON_FOCUS, Titanium.UI.Android.SOFT_KEYBOARD_HIDE_ON_FOCUS, or Titanium.UI.Android.SOFT_KEYBOARD_SHOW_ON_FOCUS. (Android only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.top-property", 
                "isClassProperty": false, 
                "name": "top", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view top position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.touchEnabled-property", 
                "isClassProperty": false, 
                "name": "touchEnabled", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean indicating if the view should receive touch events (true, default) or forward them to peers (false)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.transform-property", 
                "isClassProperty": false, 
                "name": "transform", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the transformation matrix to apply to the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.userLocation-property", 
                "isClassProperty": false, 
                "name": "userLocation", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean to indicate if the map should show the user's current device location as a pin on the map</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.visible-property", 
                "isClassProperty": false, 
                "name": "visible", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean of the visibility of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.width-property", 
                "isClassProperty": false, 
                "name": "width", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view width. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Map.MapView.zIndex-property", 
                "isClassProperty": false, 
                "name": "zIndex", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "the z index position relative to other sibling views"
            }
        ], 
        "returns": null, 
        "since": "0.8", 
        "subtype": "view", 
        "type": "object"
    }, 
    "Titanium.Media": {
        "deprecated": null, 
        "description": "<p>The top level Media module.  The Media module is used accessing the device's media related  functionality such as playing audio or recording video.</p>", 
        "events": [
            {
                "filename": "Titanium.Media.linechange-event", 
                "name": "linechange", 
                "properties": {
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>fired when a audio line type change is detected</p>"
            }, 
            {
                "filename": "Titanium.Media.recordinginput-event", 
                "name": "recordinginput", 
                "properties": {
                    "available": "<p>bool indicating availability of recording device</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>fired when availablity of recording input changes</p>"
            }, 
            {
                "filename": "Titanium.Media.volume-event", 
                "name": "volume", 
                "properties": {
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "volume": "<p>float of the new volume in dB</p>"
                }, 
                "value": "<p>fired when the volume output changes</p>"
            }
        ], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.Media.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.Media.beep-method", 
                "name": "beep", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>play a device beep notification</p>"
            }, 
            {
                "filename": "Titanium.Media.createAudioPlayer-method", 
                "name": "createAudioPlayer", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.Media.AudioPlayer.html\">Titanium.Media.AudioPlayer</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.1", 
                "value": "create and return an instance of <a href=\"Titanium.Media.AudioPlayer.html\">Titanium.Media.AudioPlayer</a>"
            }, 
            {
                "filename": "Titanium.Media.createAudioRecorder-method", 
                "name": "createAudioRecorder", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.Media.AudioRecorder.html\">Titanium.Media.AudioRecorder</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.1", 
                "value": "create and return an instance of <a href=\"Titanium.Media.AudioRecorder.html\">Titanium.Media.AudioRecorder</a>"
            }, 
            {
                "filename": "Titanium.Media.createItem-method", 
                "name": "createItem", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.Media.Item.html\">Titanium.Media.Item</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.1", 
                "value": "create and return an instance of <a href=\"Titanium.Media.Item.html\">Titanium.Media.Item</a>"
            }, 
            {
                "filename": "Titanium.Media.createMusicPlayer-method", 
                "name": "createMusicPlayer", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.Media.MusicPlayer.html\">Titanium.Media.MusicPlayer</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.1", 
                "value": "create and return an instance of <a href=\"Titanium.Media.MusicPlayer.html\">Titanium.Media.MusicPlayer</a>"
            }, 
            {
                "filename": "Titanium.Media.createSound-method", 
                "name": "createSound", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.Media.Sound.html\">Titanium.Media.Sound</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.1", 
                "value": "create and return an instance of <a href=\"Titanium.Media.Sound.html\">Titanium.Media.Sound</a>"
            }, 
            {
                "filename": "Titanium.Media.createVideoPlayer-method", 
                "name": "createVideoPlayer", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.Media.VideoPlayer.html\">Titanium.Media.VideoPlayer</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.1", 
                "value": "create and return an instance of <a href=\"Titanium.Media.VideoPlayer.html\">Titanium.Media.VideoPlayer</a>"
            }, 
            {
                "filename": "Titanium.Media.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.Media.hideCamera-method", 
                "name": "hideCamera", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>hide the device camera UI. this must be called after calling <tt>showCamera</tt> and only when <tt>autohide</tt> is set to false. this method will cause the media capture device be hidden.</p>"
            }, 
            {
                "filename": "Titanium.Media.hideMusicLibrary-method", 
                "name": "hideMusicLibrary", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>hide the music library.  This must be called after calling <tt>showMusicLibrary</tt> and only when <tt>autohide</tt> is set to false.  iPhone and iPad only.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.isMediaTypeSupported-method", 
                "name": "isMediaTypeSupported", 
                "parameters": [
                    {
                        "description": "media type as a string of either <tt>camera</tt>, <tt>photo</tt> or <tt>photogallery</tt>.", 
                        "name": "media", 
                        "type": "string"
                    }, 
                    {
                        "description": "the type of media to check", 
                        "name": "type", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "boolean", 
                "since": "0.1", 
                "value": "<p>return boolean to indicate if the media type is supported</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.openPhotoGallery-method", 
                "name": "openPhotoGallery", 
                "parameters": [
                    {
                        "description": "pass a dictionary with the following supported keys: <tt>success</tt> a function that will be called when the camera is completed, <tt>error</tt> a function that will be called upon receiving an error, <tt>cancel</tt> a function that will be called if the user presses the cancel button, <tt>autohide</tt> boolean if the camera should auto hide after the media capture is completed (defaults to true), <tt>animated</tt> boolean if the dialog should be animated (defaults to true) upon showing and hiding, <tt>saveToPhotoGallery</tt> boolean if the media should be saved to the photo gallery upon successful capture, <tt>allowEditing</tt> boolean if the media should be editable after capture in the UI interface, <tt>mediaTypes</tt> an array of media type constants supported by the capture device UI, <tt>showControls</tt> boolean to indicate if the built-in UI controls should be displayed, <tt>overlay</tt> view which is added as an overlay to the UI (on top), <tt>transform</tt> an transformation matrix that applies to the UI transform. For iPad, <tt>popoverView</tt> can be provided to position the photo gallery popover a specific view and <tt>arrowDirection</tt> can be provided to control the type of arrow and position of the gallery.", 
                        "name": "options", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>open the photo gallery picker</p>"
            }, 
            {
                "filename": "Titanium.Media.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "remove a previously added event listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.saveToPhotoGallery-method", 
                "name": "saveToPhotoGallery", 
                "parameters": [
                    {
                        "description": "save the media passed to the cameras photo roll/media gallery. must be one of Blob object or File object or an error will be generated.", 
                        "name": "media", 
                        "type": "object"
                    }, 
                    {
                        "description": "pass a dictionary with the following supported keys: <tt>success</tt> a function that will be called when the save succeeds, and <tt>error</tt> a function that will be called upon anreceiving an error", 
                        "name": "callbacks", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>save media to photo gallery / camera roll</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.showCamera-method", 
                "name": "showCamera", 
                "parameters": [
                    {
                        "description": "pass a dictionary with the following supported keys: <tt>success</tt> a function that will be called when the camera is completed, <tt>error</tt> a function that will be called upon receiving an error, <tt>cancel</tt> a function that will be called if the user presses the cancel button, <tt>autohide</tt> boolean if the camera should auto hide after the media capture is completed (defaults to true), <tt>animated</tt> boolean if the dialog should be animated (defaults to true) upon showing and hiding, <tt>saveToPhotoGallery</tt> boolean if the media should be saved to the photo gallery upon successful capture, <tt>allowEditing</tt> boolean if the media should be editable after capture in the UI interface, <tt>mediaTypes</tt> an array of media type constants supported by the capture device UI, <tt>videoMaximumDuration</tt> float duration on how long in milliseconds to allow capture before completing, <tt>videoQuality</tt> constant to indicate the video quality during capture, <tt>showControls</tt> boolean to indicate if the built-in UI controls should be displayed, <tt>overlay</tt> view which is added as an overlay to the camera UI (on top), <tt>transform</tt> an transformation matrix that applies to the camera UI transform.", 
                        "name": "options", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>show the camera</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.showMusicLibrary-method", 
                "name": "showMusicLibrary", 
                "parameters": [
                    {
                        "description": "pass a dictionary with the following supported keys: <tt>success</tt> a function that will be called when the camera is completed, <tt>error</tt> a function that will be called upon receiving an error, <tt>cancel</tt> a function that will be called if the user presses the cancel button, <tt>autohide</tt> boolean if the library listing should auto hide after selection is completed (defaults to true), <tt>animated</tt> boolean if the dialog should be animated (defaults to true) upon showing and hiding, <tt>mediaTypes</tt> an array of media type constants defining selectable media (see MUSIC_MEDIA_TYPE_* properties below) as either an array or a bitwise-or single value, <tt>allowMultipleSelections</tt> boolean whether or not more than one media selection is allowed", 
                        "name": "options", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>show the music library.  iPhone and iPad only.</p>"
            }, 
            {
                "filename": "Titanium.Media.startMicrophoneMonitor-method", 
                "name": "startMicrophoneMonitor", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>start the monitoring of microphone sound level</p>"
            }, 
            {
                "filename": "Titanium.Media.stopMicrophoneMonitor-method", 
                "name": "stopMicrophoneMonitor", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>stop the monitoring of microphone sound level</p>"
            }, 
            {
                "filename": "Titanium.Media.takePicture-method", 
                "name": "takePicture", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>use the device camera to capture a photo. this must be called after calling <tt>showCamera</tt> and only when <tt>autohide</tt> is set to false. this method will cause the media capture device to capture a photo and call the <tt>success</tt> callback.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.takeScreenshot-method", 
                "name": "takeScreenshot", 
                "parameters": [
                    {
                        "description": "function that will be called upon capture. the event property <tt>media</tt> will contain an image Blob object of the screenshot", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>take a screen shot of the visible UI on the device</p>"
            }, 
            {
                "filename": "Titanium.Media.vibrate-method", 
                "name": "vibrate", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>play a device vibration</p>"
            }
        ], 
        "notes": null, 
        "objects": [
            "Titanium.Media.AudioPlayer", 
            "Titanium.Media.AudioRecorder", 
            "Titanium.Media.Item", 
            "Titanium.Media.MusicPlayer", 
            "Titanium.Media.Sound", 
            "Titanium.Media.VideoPlayer"
        ], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AUDIO_FILEFORMAT_3GP2-property", 
                "isClassProperty": true, 
                "name": "AUDIO_FILEFORMAT_3GP2", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>audio file format 3GPP-2</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AUDIO_FILEFORMAT_3GPP-property", 
                "isClassProperty": true, 
                "name": "AUDIO_FILEFORMAT_3GPP", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>audio file format 3GPP</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AUDIO_FILEFORMAT_AIFF-property", 
                "isClassProperty": true, 
                "name": "AUDIO_FILEFORMAT_AIFF", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>audio file format AIFF</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AUDIO_FILEFORMAT_AMR-property", 
                "isClassProperty": true, 
                "name": "AUDIO_FILEFORMAT_AMR", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>audio file format AMR</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AUDIO_FILEFORMAT_CAF-property", 
                "isClassProperty": true, 
                "name": "AUDIO_FILEFORMAT_CAF", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>audio file format Apple Compressed Audio Format (CAF)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AUDIO_FILEFORMAT_MP3-property", 
                "isClassProperty": true, 
                "name": "AUDIO_FILEFORMAT_MP3", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>audio file format MP3</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AUDIO_FILEFORMAT_MP4-property", 
                "isClassProperty": true, 
                "name": "AUDIO_FILEFORMAT_MP4", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>audio file format MP4</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AUDIO_FILEFORMAT_MP4A-property", 
                "isClassProperty": true, 
                "name": "AUDIO_FILEFORMAT_MP4A", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>audio file format MP4A</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AUDIO_FILEFORMAT_WAVE-property", 
                "isClassProperty": true, 
                "name": "AUDIO_FILEFORMAT_WAVE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>audio file format WAVE</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AUDIO_FORMAT_AAC-property", 
                "isClassProperty": true, 
                "name": "AUDIO_FORMAT_AAC", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>audio format MPEG4 AAC encoding</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AUDIO_FORMAT_ALAW-property", 
                "isClassProperty": true, 
                "name": "AUDIO_FORMAT_ALAW", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>audio format 8-bit aLaw encoding</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AUDIO_FORMAT_APPLE_LOSSLESS-property", 
                "isClassProperty": true, 
                "name": "AUDIO_FORMAT_APPLE_LOSSLESS", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>audio format apple lossless encoding</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AUDIO_FORMAT_ILBC-property", 
                "isClassProperty": true, 
                "name": "AUDIO_FORMAT_ILBC", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>audio format iLBC encoding</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AUDIO_FORMAT_IMA4-property", 
                "isClassProperty": true, 
                "name": "AUDIO_FORMAT_IMA4", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>audio format Apple IMA4 encoding</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AUDIO_FORMAT_LINEAR_PCM-property", 
                "isClassProperty": true, 
                "name": "AUDIO_FORMAT_LINEAR_PCM", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>audio format Linear 16-bit, PCM encoding</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AUDIO_FORMAT_ULAW-property", 
                "isClassProperty": true, 
                "name": "AUDIO_FORMAT_ULAW", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>audio format 8-bit muLaw encoding</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AUDIO_HEADPHONES-property", 
                "isClassProperty": true, 
                "name": "AUDIO_HEADPHONES", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for line type headphones</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AUDIO_HEADPHONES_AND_MIC-property", 
                "isClassProperty": true, 
                "name": "AUDIO_HEADPHONES_AND_MIC", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant line type headphones and microphone</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AUDIO_HEADSET_INOUT-property", 
                "isClassProperty": true, 
                "name": "AUDIO_HEADSET_INOUT", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant line type headset in/out</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AUDIO_LINEOUT-property", 
                "isClassProperty": true, 
                "name": "AUDIO_LINEOUT", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant line type line out</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AUDIO_MICROPHONE-property", 
                "isClassProperty": true, 
                "name": "AUDIO_MICROPHONE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant line type microphone</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AUDIO_MUTED-property", 
                "isClassProperty": true, 
                "name": "AUDIO_MUTED", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant line type muted switch is on</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AUDIO_RECEIVER_AND_MIC-property", 
                "isClassProperty": true, 
                "name": "AUDIO_RECEIVER_AND_MIC", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant line type receiver and microphone</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AUDIO_SESSION_MODE_AMBIENT-property", 
                "isClassProperty": true, 
                "name": "AUDIO_SESSION_MODE_AMBIENT", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>For long-duration sounds such as rain, car engine noise, and so on. It is also for 'play along' style applications, such a virtual piano that a user plays over iPod audio.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AUDIO_SESSION_MODE_PLAYBACK-property", 
                "isClassProperty": true, 
                "name": "AUDIO_SESSION_MODE_PLAYBACK", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>For playing recorded music or other sounds that are central to the successful use of your application. When using this mode, your application audio continues with the Ring/Silent switch set to silent or when the screen locks. This property normally disallows iPod audio to mix with application audio</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AUDIO_SESSION_MODE_PLAY_AND_RECORD-property", 
                "isClassProperty": true, 
                "name": "AUDIO_SESSION_MODE_PLAY_AND_RECORD", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Allows recording (input) and playback (output) of audio, such as for a VOIP (voice over IP) application. This category is appropriate for simultaneous recording and playback, and also for applications that record and play back but not simultaneously. If you want to ensure that sounds such as Messages alerts do not play while your application is recording, use  <a href=\"Titanium.Media.AUDIO_SESSION_MODE_RECORD-property.html\">Titanium.Media.AUDIO_SESSION_MODE_RECORD</a> instead. This category normally disallows iPod audio to mix with application audio.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AUDIO_SESSION_MODE_RECORD-property", 
                "isClassProperty": true, 
                "name": "AUDIO_SESSION_MODE_RECORD", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>For recording audio; it silences playback audio.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AUDIO_SESSION_MODE_SOLO_AMBIENT-property", 
                "isClassProperty": true, 
                "name": "AUDIO_SESSION_MODE_SOLO_AMBIENT", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The solo ambient sound category is for long-duration sounds such as rain, car engine noise, and so on. When you use this category, audio from built-in applications, such as the iPod, is silenced. Your audio is silenced when the Ring/Silent switch is set to <tt>silent</tt> or when the screen locks.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AUDIO_SPEAKER-property", 
                "isClassProperty": true, 
                "name": "AUDIO_SPEAKER", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant line type speaker</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AUDIO_UNAVAILABLE-property", 
                "isClassProperty": true, 
                "name": "AUDIO_UNAVAILABLE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant line type unavailable</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AUDIO_UNKNOWN-property", 
                "isClassProperty": true, 
                "name": "AUDIO_UNKNOWN", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant line type unknown or not determined</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.DEVICE_BUSY-property", 
                "isClassProperty": true, 
                "name": "DEVICE_BUSY", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for media device busy error</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.MEDIA_TYPE_PHOTO-property", 
                "isClassProperty": true, 
                "name": "MEDIA_TYPE_PHOTO", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>media type constant to signify photo</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.MEDIA_TYPE_VIDEO-property", 
                "isClassProperty": true, 
                "name": "MEDIA_TYPE_VIDEO", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>media type constant to signify video</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.MUSIC_MEDIA_TYPE_ALL-property", 
                "isClassProperty": true, 
                "name": "MUSIC_MEDIA_TYPE_ALL", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>media containing any content</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.MUSIC_MEDIA_TYPE_ANY_AUDIO-property", 
                "isClassProperty": true, 
                "name": "MUSIC_MEDIA_TYPE_ANY_AUDIO", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>media containing any audio content</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.MUSIC_MEDIA_TYPE_AUDIOBOOK-property", 
                "isClassProperty": true, 
                "name": "MUSIC_MEDIA_TYPE_AUDIOBOOK", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>media containing audiobook content</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.MUSIC_MEDIA_TYPE_MUSIC-property", 
                "isClassProperty": true, 
                "name": "MUSIC_MEDIA_TYPE_MUSIC", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>media containing music content</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.MUSIC_MEDIA_TYPE_PODCAST-property", 
                "isClassProperty": true, 
                "name": "MUSIC_MEDIA_TYPE_PODCAST", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>media containing podcast content</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.MUSIC_PLAYER_REPEAT_ALL-property", 
                "isClassProperty": true, 
                "name": "MUSIC_PLAYER_REPEAT_ALL", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for repeating all setting</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.MUSIC_PLAYER_REPEAT_DEFAULT-property", 
                "isClassProperty": true, 
                "name": "MUSIC_PLAYER_REPEAT_DEFAULT", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for user default repeat setting</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.MUSIC_PLAYER_REPEAT_NONE-property", 
                "isClassProperty": true, 
                "name": "MUSIC_PLAYER_REPEAT_NONE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for no repeat setting</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.MUSIC_PLAYER_REPEAT_ONE-property", 
                "isClassProperty": true, 
                "name": "MUSIC_PLAYER_REPEAT_ONE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for repeating one item setting</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.MUSIC_PLAYER_SHUFFLE_ALBUMS-property", 
                "isClassProperty": true, 
                "name": "MUSIC_PLAYER_SHUFFLE_ALBUMS", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for shuffling complete albums setting</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.MUSIC_PLAYER_SHUFFLE_DEFAULT-property", 
                "isClassProperty": true, 
                "name": "MUSIC_PLAYER_SHUFFLE_DEFAULT", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for user default shuffle setting</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.MUSIC_PLAYER_SHUFFLE_NONE-property", 
                "isClassProperty": true, 
                "name": "MUSIC_PLAYER_SHUFFLE_NONE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for no shuffle setting</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.MUSIC_PLAYER_SHUFFLE_SONGS-property", 
                "isClassProperty": true, 
                "name": "MUSIC_PLAYER_SHUFFLE_SONGS", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for shuffling songs setting</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.MUSIC_PLAYER_STATE_INTERRUPTED-property", 
                "isClassProperty": true, 
                "name": "MUSIC_PLAYER_STATE_INTERRUPTED", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for interrupted state</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.MUSIC_PLAYER_STATE_PAUSED-property", 
                "isClassProperty": true, 
                "name": "MUSIC_PLAYER_STATE_PAUSED", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for paused state</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.MUSIC_PLAYER_STATE_PLAYING-property", 
                "isClassProperty": true, 
                "name": "MUSIC_PLAYER_STATE_PLAYING", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for playing state</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.MUSIC_PLAYER_STATE_SEEK_BACKWARD-property", 
                "isClassProperty": true, 
                "name": "MUSIC_PLAYER_STATE_SEEK_BACKWARD", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for backward seek state</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.MUSIC_PLAYER_STATE_SKEEK_FORWARD-property", 
                "isClassProperty": true, 
                "name": "MUSIC_PLAYER_STATE_SKEEK_FORWARD", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for forward seek state</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.MUSIC_PLAYER_STATE_STOPPED-property", 
                "isClassProperty": true, 
                "name": "MUSIC_PLAYER_STATE_STOPPED", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for stopped state</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.NO_CAMERA-property", 
                "isClassProperty": true, 
                "name": "NO_CAMERA", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for media no camera error</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.NO_VIDEO-property", 
                "isClassProperty": true, 
                "name": "NO_VIDEO", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for media no video error</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.QUALITY_HIGH-property", 
                "isClassProperty": true, 
                "name": "QUALITY_HIGH", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>media type constant to use high-quality video recording. Recorded files are suitable for on-device playback and for wired transfer to the Desktop using Image Capture; they are likely to be too large for transfer using Wi-Fi.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.QUALITY_LOW-property", 
                "isClassProperty": true, 
                "name": "QUALITY_LOW", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>media type constant to use use low-quality video recording. Recorded files can usually be transferred over the cellular network.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.QUALITY_MEDIUM-property", 
                "isClassProperty": true, 
                "name": "QUALITY_MEDIUM", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>media type constant to use medium-quality video recording. Recorded files can usually be transferred using Wi-Fi. This is the default video quality setting.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.UNKNOWN_ERROR-property", 
                "isClassProperty": true, 
                "name": "UNKNOWN_ERROR", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for unknown media error</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VIDEO_CONTROL_DEFAULT-property", 
                "isClassProperty": true, 
                "name": "VIDEO_CONTROL_DEFAULT", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for video controls default</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VIDEO_CONTROL_EMBEDDED-property", 
                "isClassProperty": true, 
                "name": "VIDEO_CONTROL_EMBEDDED", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Controls for an embedded view. Used in conjunction with movieControlStyle property of <a href=\"Titanium.Media.VideoPlayer.html\">Titanium.Media.VideoPlayer</a> in iPhone 3.2+</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VIDEO_CONTROL_FULLSCREEN-property", 
                "isClassProperty": true, 
                "name": "VIDEO_CONTROL_FULLSCREEN", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Controls for fullscreen. Used in conjunction with movieControlStyle property of <a href=\"Titanium.Media.VideoPlayer.html\">Titanium.Media.VideoPlayer</a> in iPhone 3.2+</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VIDEO_CONTROL_HIDDEN-property", 
                "isClassProperty": true, 
                "name": "VIDEO_CONTROL_HIDDEN", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for video controls hidden</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VIDEO_CONTROL_NONE-property", 
                "isClassProperty": true, 
                "name": "VIDEO_CONTROL_NONE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>No controls. Used in conjunction with movieControlStyle property of <a href=\"Titanium.Media.VideoPlayer.html\">Titanium.Media.VideoPlayer</a> in iPhone 3.2+</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VIDEO_CONTROL_VOLUME_ONLY-property", 
                "isClassProperty": true, 
                "name": "VIDEO_CONTROL_VOLUME_ONLY", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for video controls volume only</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VIDEO_FINISH_REASON_PLAYBACK_ENDED-property", 
                "isClassProperty": true, 
                "name": "VIDEO_FINISH_REASON_PLAYBACK_ENDED", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the video playback ended normally</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VIDEO_FINISH_REASON_PLAYBACK_ERROR-property", 
                "isClassProperty": true, 
                "name": "VIDEO_FINISH_REASON_PLAYBACK_ERROR", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the video playback ended abnormally</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VIDEO_FINISH_REASON_USER_EXITED-property", 
                "isClassProperty": true, 
                "name": "VIDEO_FINISH_REASON_USER_EXITED", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the video playback ended by user action (such as clicking the <tt>Done</tt> button)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VIDEO_LOAD_STATE_PLAYABLE-property", 
                "isClassProperty": true, 
                "name": "VIDEO_LOAD_STATE_PLAYABLE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the current media is playable</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VIDEO_LOAD_STATE_PLAYTHROUGH_OK-property", 
                "isClassProperty": true, 
                "name": "VIDEO_LOAD_STATE_PLAYTHROUGH_OK", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>playback will be automatically started in this state when <tt>autoplay</tt> is true</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VIDEO_LOAD_STATE_STALLED-property", 
                "isClassProperty": true, 
                "name": "VIDEO_LOAD_STATE_STALLED", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>playback will be automatically paused in this state, if started</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VIDEO_LOAD_STATE_UNKNOWN-property", 
                "isClassProperty": true, 
                "name": "VIDEO_LOAD_STATE_UNKNOWN", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the current load state is not known</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VIDEO_MEDIA_TYPE_AUDIO-property", 
                "isClassProperty": true, 
                "name": "VIDEO_MEDIA_TYPE_AUDIO", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>A audio type of media in the movie returned by <a href=\"Titanium.Media.VideoPlayer.html\">Titanium.Media.VideoPlayer</a> <tt>mediaTypes</tt> property</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VIDEO_MEDIA_TYPE_NONE-property", 
                "isClassProperty": true, 
                "name": "VIDEO_MEDIA_TYPE_NONE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>An unknown type of media in the movie returned by <a href=\"Titanium.Media.VideoPlayer.html\">Titanium.Media.VideoPlayer</a> <tt>mediaTypes</tt> property.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VIDEO_MEDIA_TYPE_VIDEO-property", 
                "isClassProperty": true, 
                "name": "VIDEO_MEDIA_TYPE_VIDEO", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>A video type of media in the movie returned by <a href=\"Titanium.Media.VideoPlayer.html\">Titanium.Media.VideoPlayer</a> <tt>mediaTypes</tt> property</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VIDEO_PLAYBACK_STATE_INTERRUPTED-property", 
                "isClassProperty": true, 
                "name": "VIDEO_PLAYBACK_STATE_INTERRUPTED", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>playback has been interrupted</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VIDEO_PLAYBACK_STATE_PAUSED-property", 
                "isClassProperty": true, 
                "name": "VIDEO_PLAYBACK_STATE_PAUSED", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>playback is paused</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VIDEO_PLAYBACK_STATE_PLAYING-property", 
                "isClassProperty": true, 
                "name": "VIDEO_PLAYBACK_STATE_PLAYING", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>playback is playing</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VIDEO_PLAYBACK_STATE_SEEKING_BACKWARD-property", 
                "isClassProperty": true, 
                "name": "VIDEO_PLAYBACK_STATE_SEEKING_BACKWARD", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>playback is rewinding</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VIDEO_PLAYBACK_STATE_SEEKING_FORWARD-property", 
                "isClassProperty": true, 
                "name": "VIDEO_PLAYBACK_STATE_SEEKING_FORWARD", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>playback is seeking forward</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VIDEO_PLAYBACK_STATE_STOPPED-property", 
                "isClassProperty": true, 
                "name": "VIDEO_PLAYBACK_STATE_STOPPED", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>playback has stopped</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VIDEO_REPEAT_MODE_NONE-property", 
                "isClassProperty": true, 
                "name": "VIDEO_REPEAT_MODE_NONE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the video will not repeat</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VIDEO_REPEAT_MODE_ONE-property", 
                "isClassProperty": true, 
                "name": "VIDEO_REPEAT_MODE_ONE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the video will repeat once</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VIDEO_SCALING_ASPECT_FILL-property", 
                "isClassProperty": true, 
                "name": "VIDEO_SCALING_ASPECT_FILL", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for video aspect where the movie will be scaled until the movie fills the entire screen. Content at the edges of the larger of the two dimensions is clipped so that the other dimension fits the screen exactly. The aspect ratio of the movie is preserved.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VIDEO_SCALING_ASPECT_FIT-property", 
                "isClassProperty": true, 
                "name": "VIDEO_SCALING_ASPECT_FIT", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for video aspect fit where the movie will be scaled until one dimension fits on the screen exactly. In the other dimension, the region between the edge of the movie and the edge of the screen is filled with a black bar. The aspect ratio of the movie is preserved.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VIDEO_SCALING_MODE_FILL-property", 
                "isClassProperty": true, 
                "name": "VIDEO_SCALING_MODE_FILL", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for video aspect where the movie will be scaled until both dimensions fit the screen exactly. The aspect ratio of the movie is not preserved.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VIDEO_SCALING_NONE-property", 
                "isClassProperty": true, 
                "name": "VIDEO_SCALING_NONE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for video scaling where the scaling is turn off. The movie will not be scaled.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VIDEO_SOURCE_TYPE_FILE-property", 
                "isClassProperty": true, 
                "name": "VIDEO_SOURCE_TYPE_FILE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the video source type is a file. Related to the <tt>sourceType</tt> property of <a href=\"Titanium.Media.VideoPlayer.html\">Titanium.Media.VideoPlayer</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VIDEO_SOURCE_TYPE_STREAMING-property", 
                "isClassProperty": true, 
                "name": "VIDEO_SOURCE_TYPE_STREAMING", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the video source type is a remote stream. Related to the <tt>sourceType</tt> property of <a href=\"Titanium.Media.VideoPlayer.html\">Titanium.Media.VideoPlayer</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VIDEO_SOURCE_TYPE_UNKNOWN-property", 
                "isClassProperty": true, 
                "name": "VIDEO_SOURCE_TYPE_UNKNOWN", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the video source type is unknown. Related to the <tt>sourceType</tt> property of <a href=\"Titanium.Media.VideoPlayer.html\">Titanium.Media.VideoPlayer</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VIDEO_TIME_OPTION_EXACT-property", 
                "isClassProperty": true, 
                "name": "VIDEO_TIME_OPTION_EXACT", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>use the exact time</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VIDEO_TIME_OPTION_NEAREST_KEYFRAME-property", 
                "isClassProperty": true, 
                "name": "VIDEO_TIME_OPTION_NEAREST_KEYFRAME", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>use the closest keyframe in the time</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.appMusicPlayer-property", 
                "isClassProperty": false, 
                "name": "appMusicPlayer", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>an instance of <a href=\"Titanium.Media.MusicPlayer.html\">Titanium.Media.MusicPlayer</a> representing the app-specific music player.  iPhone/iPad only</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.audioLineType-property", 
                "isClassProperty": false, 
                "name": "audioLineType", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>returns the line type constant for the current line type</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.audioPlaying-property", 
                "isClassProperty": false, 
                "name": "audioPlaying", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>returns true if the device is playing audio</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.audioSessionMode-property", 
                "isClassProperty": false, 
                "name": "audioSessionMode", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>a constant for the audio session mode to be used. Must be set while the audio session is inactive (no sounds are playing, no listeners for audio properties on the Media module, but the iPod may be active).</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.availableCameraMediaTypes-property", 
                "isClassProperty": false, 
                "name": "availableCameraMediaTypes", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "array", 
                "type_jsca": "array", 
                "value": "<p>return an array of media type constants supported for the camera</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.availablePhotoGalleryMediaTypes-property", 
                "isClassProperty": false, 
                "name": "availablePhotoGalleryMediaTypes", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "array", 
                "type_jsca": "array", 
                "value": "<p>return an array of media type constants supported for saving to the photo gallery</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.availablePhotoMediaTypes-property", 
                "isClassProperty": false, 
                "name": "availablePhotoMediaTypes", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "array", 
                "type_jsca": "array", 
                "value": "<p>return an array of media type constants supported for the photo</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.averageMicrophonePower-property", 
                "isClassProperty": false, 
                "name": "averageMicrophonePower", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>return the current average microphone level in dB or -1 if microphone monitoring is disabled</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.canRecord-property", 
                "isClassProperty": false, 
                "name": "canRecord", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>returns true if the device has recording input device available</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.isCameraSupported-property", 
                "isClassProperty": false, 
                "name": "isCameraSupported", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>returns true if the device has camera support</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.peakMicrophonePower-property", 
                "isClassProperty": false, 
                "name": "peakMicrophonePower", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>return the current microphone level peak power in dB or -1 if microphone monitoring is disabled</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.systemMusicPlayer-property", 
                "isClassProperty": false, 
                "name": "systemMusicPlayer", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>an instance of <a href=\"Titanium.Media.MusicPlayer.html\">Titanium.Media.MusicPlayer</a> representing the system-wide music player.  iPhone/iPad only</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.volume-property", 
                "isClassProperty": false, 
                "name": "volume", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>the current volume of the playback device</p>"
            }
        ], 
        "returns": "object", 
        "since": "0.1", 
        "subtype": null, 
        "type": "module"
    }, 
    "Titanium.Media.Android": {
        "deprecated": null, 
        "description": "<p>Android-specific media-related functionality.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.Media.Android.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.7.0", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.Media.Android.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.7.0", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.Media.Android.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.7.0", 
                "value": "remove a previously added event listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.Android.scanMediaFiles-method", 
                "name": "scanMediaFiles", 
                "parameters": [
                    {
                        "description": "Array of paths to the files you want to be scanned.", 
                        "name": "paths", 
                        "type": "Array<String>"
                    }, 
                    {
                        "description": "Array of mime types for the files in the paths parameter.  Can be null, in which case the mime type will be inferred at scan time.", 
                        "name": "mimeTypes", 
                        "type": "Array<String>"
                    }, 
                    {
                        "description": "A function that will be called when each file is finished being scanned.  Check the callback argument's \"path\" and \"uri\" properties to see the path that was scanned and the resulting content uri.", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.7.0", 
                "value": "<p>Use the <a href=\"http://developer.android.com/reference/android/media/MediaScannerConnection.html\">Android MediaScannerConnection</a> to request immediate scan of particular files so that they become available to the appropriate media providers (Gallery, etc.).</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.Android.setSystemWallpaper-method", 
                "name": "setSystemWallpaper", 
                "parameters": [
                    {
                        "description": "Image blob such as what can be retrieved via callbacks for <a href=\"Titanium.Media.openPhotoGallery-method.html\">Titanium.Media.openPhotoGallery</a> and <a href=\"Titanium.Media.showCamera-method.html\">Titanium.Media.showCamera</a>, as well as from the return value of <a href=\"Titanium.Filesystem.File.read-method.html\">Titanium.Filesystem.File.read</a>.", 
                        "name": "image", 
                        "type": "object"
                    }, 
                    {
                        "description": "Set to true if you want the image to be scaled with respect to the system wallpaper desired width, or false to leave it as-is.", 
                        "name": "scale", 
                        "type": "boolean"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.7.0", 
                "value": "<p>(Android only) Set the system homescreen wallpaper</p>"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android"
        ], 
        "properties": [], 
        "returns": "object", 
        "since": "1.7.0", 
        "subtype": null, 
        "type": "module"
    }, 
    "Titanium.Media.AudioPlayer": {
        "deprecated": null, 
        "description": "<p>The AudioPlayer object is returned by <a href=\"Titanium.Media.createAudioPlayer.html\">Titanium.Media.createAudioPlayer</a> and is used for streaming audio to the device and low-level control of the audio playback.</p>", 
        "events": [
            {
                "filename": "Titanium.Media.AudioPlayer.change-event", 
                "name": "change", 
                "properties": {
                    "description": "<p>textual description of the state of playback</p>", 
                    "source": "the source object that fired the event", 
                    "state": "<p>current state of playback</p>", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>fired when the state of the playback changes</p>"
            }, 
            {
                "filename": "Titanium.Media.AudioPlayer.progress-event", 
                "name": "progress", 
                "properties": {
                    "progress": "<p>current progress value</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>fired once per second with the current progress during playback</p>"
            }
        ], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.Media.AudioPlayer.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.Media.AudioPlayer.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.Media.AudioPlayer.pause-method", 
                "name": "pause", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "<p>pause playback</p>"
            }, 
            {
                "filename": "Titanium.Media.AudioPlayer.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "remove a previously added event listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AudioPlayer.setPaused-method", 
                "name": "setPaused", 
                "parameters": [
                    {
                        "description": "pass true to pause the current playback temporarily, false to unpause it", 
                        "name": "paused", 
                        "type": "boolean"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "<p>control the playback of the audio</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AudioPlayer.setUrl-method", 
                "name": "setUrl", 
                "parameters": [
                    {
                        "description": "the new url", 
                        "name": "url", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "<p>change the url of the audio playback</p>"
            }, 
            {
                "filename": "Titanium.Media.AudioPlayer.start-method", 
                "name": "start", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "<p>start playback</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AudioPlayer.stateDescription-method", 
                "name": "stateDescription", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "string", 
                "since": "0.9", 
                "value": "<p>convert a state into a textual description suitable for display</p>"
            }, 
            {
                "filename": "Titanium.Media.AudioPlayer.stop-method", 
                "name": "stop", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "<p>stop playback</p>"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AudioPlayer.STATE_BUFFERING-property", 
                "isClassProperty": true, 
                "name": "STATE_BUFFERING", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>current playback is in the buffering from the network state</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AudioPlayer.STATE_INITIALIZED-property", 
                "isClassProperty": true, 
                "name": "STATE_INITIALIZED", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>current playback is in the initialization state</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AudioPlayer.STATE_PAUSED-property", 
                "isClassProperty": true, 
                "name": "STATE_PAUSED", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>current playback is in the paused state</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AudioPlayer.STATE_PLAYING-property", 
                "isClassProperty": true, 
                "name": "STATE_PLAYING", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>current playback is in the playing state</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AudioPlayer.STATE_STARTING-property", 
                "isClassProperty": true, 
                "name": "STATE_STARTING", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>current playback is in the starting playback state</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AudioPlayer.STATE_STOPPED-property", 
                "isClassProperty": true, 
                "name": "STATE_STOPPED", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>current playback is in the stopped state</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AudioPlayer.STATE_STOPPING-property", 
                "isClassProperty": true, 
                "name": "STATE_STOPPING", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>current playback is in the stopping state</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AudioPlayer.STATE_WAITING_FOR_DATA-property", 
                "isClassProperty": true, 
                "name": "STATE_WAITING_FOR_DATA", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>current playback is in the waiting for audio data from the network state</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AudioPlayer.STATE_WAITING_FOR_QUEUE-property", 
                "isClassProperty": true, 
                "name": "STATE_WAITING_FOR_QUEUE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>current playback is in the waiting for audio data to fill the queue state</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AudioPlayer.allowBackground-property", 
                "isClassProperty": false, 
                "name": "allowBackground", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean to indicate if audio should continue playing even if Activity is paused (Android only as of 1.3.0)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AudioPlayer.bitRate-property", 
                "isClassProperty": false, 
                "name": "bitRate", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "double", 
                "type_jsca": "double", 
                "value": "<p>bit rate of the current playback stream</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AudioPlayer.bufferSize-property", 
                "isClassProperty": false, 
                "name": "bufferSize", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the buffer size used for streaming, in bytes. iOS only.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AudioPlayer.idle-property", 
                "isClassProperty": false, 
                "name": "idle", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>returns boolean indicating if the playback is idle</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AudioPlayer.paused-property", 
                "isClassProperty": false, 
                "name": "paused", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>returns boolean indicating if the playback is paused</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AudioPlayer.playing-property", 
                "isClassProperty": false, 
                "name": "playing", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>returns boolean indicating if the playback is streaming audio</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AudioPlayer.progress-property", 
                "isClassProperty": false, 
                "name": "progress", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "double", 
                "type_jsca": "double", 
                "value": "<p>returns the current playback progress. Will return zero if sampleRate has not yet been detected</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AudioPlayer.state-property", 
                "isClassProperty": false, 
                "name": "state", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>returns int for the current state of playback</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AudioPlayer.url-property", 
                "isClassProperty": false, 
                "name": "url", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>returns the url for the current playback</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AudioPlayer.waiting-property", 
                "isClassProperty": false, 
                "name": "waiting", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>returns boolean indicating if the playback is waiting for audio data from the network</p>"
            }
        ], 
        "returns": null, 
        "since": "0.9", 
        "subtype": "proxy", 
        "type": "object"
    }, 
    "Titanium.Media.AudioRecorder": {
        "deprecated": null, 
        "description": "<p>The AudioRecorder object is returned by <a href=\"Titanium.Media.createAudioRecorder.html\">Titanium.Media.createAudioRecorder</a> and is used for recording audio from the device microphone.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.Media.AudioRecorder.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.Media.AudioRecorder.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.Media.AudioRecorder.pause-method", 
                "name": "pause", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "<p>called to temporarily pause recording</p>"
            }, 
            {
                "filename": "Titanium.Media.AudioRecorder.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "remove a previously added event listener"
            }, 
            {
                "filename": "Titanium.Media.AudioRecorder.resume-method", 
                "name": "resume", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "<p>called to resume audio recording</p>"
            }, 
            {
                "filename": "Titanium.Media.AudioRecorder.start-method", 
                "name": "start", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "<p>called to start recording audio</p>"
            }, 
            {
                "filename": "Titanium.Media.AudioRecorder.stop-method", 
                "name": "stop", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "<p>called to stop recording audio</p>"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AudioRecorder.compression-property", 
                "isClassProperty": false, 
                "name": "compression", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>audio compression constant to be used for the recording</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AudioRecorder.format-property", 
                "isClassProperty": false, 
                "name": "format", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>audio format constant for used for the recording</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AudioRecorder.paused-property", 
                "isClassProperty": false, 
                "name": "paused", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>readonly property to indicate if paused</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AudioRecorder.recording-property", 
                "isClassProperty": false, 
                "name": "recording", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>readonly property to indicate if recording</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.AudioRecorder.stopped-property", 
                "isClassProperty": false, 
                "name": "stopped", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>readonly property to indicate if stopped</p>"
            }
        ], 
        "returns": null, 
        "since": "0.9", 
        "subtype": "proxy", 
        "type": "object"
    }, 
    "Titanium.Media.Item": {
        "deprecated": null, 
        "description": "<p>A representation of a media item returned by the music picker as part of the <tt>items</tt> array in the dictionary passed to its <tt>success</tt> function.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Media.Item.albumArtist-property", 
                "isClassProperty": false, 
                "name": "albumArtist", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4.0", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the artist for the album of the item</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.Item.albumTitle-property", 
                "isClassProperty": false, 
                "name": "albumTitle", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4.0", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the album title of the item</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.Item.albumTrackCount-property", 
                "isClassProperty": false, 
                "name": "albumTrackCount", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4.0", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the number of tracks for the album of the item</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.Item.albumTrackNumber-property", 
                "isClassProperty": false, 
                "name": "albumTrackNumber", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4.0", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the track number of the item</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.Item.artist-property", 
                "isClassProperty": false, 
                "name": "artist", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4.0", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the artist of the item</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.Item.artwork-property", 
                "isClassProperty": false, 
                "name": "artwork", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4.0", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>a blob object containing the image for the item's artwork, or null if none</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.Item.composer-property", 
                "isClassProperty": false, 
                "name": "composer", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4.0", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the composer of the item</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.Item.discCount-property", 
                "isClassProperty": false, 
                "name": "discCount", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4.0", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the total number of discs of the item</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.Item.discNumber-property", 
                "isClassProperty": false, 
                "name": "discNumber", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4.0", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the disc number of the item</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.Item.genre-property", 
                "isClassProperty": false, 
                "name": "genre", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4.0", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the genre of the item</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.Item.isCompilation-property", 
                "isClassProperty": false, 
                "name": "isCompilation", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4.0", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>true if the item is part of a compilation album</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.Item.lyrics-property", 
                "isClassProperty": false, 
                "name": "lyrics", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4.0", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the lyrics of the item</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.Item.mediaType-property", 
                "isClassProperty": false, 
                "name": "mediaType", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4.0", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the type of the item</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.Item.playCount-property", 
                "isClassProperty": false, 
                "name": "playCount", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4.0", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the number of times the item has been played</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.Item.playbackDuration-property", 
                "isClassProperty": false, 
                "name": "playbackDuration", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4.0", 
                "type": "double", 
                "type_jsca": "double", 
                "value": "<p>the length (in seconds) of the item</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.Item.podcastTitle-property", 
                "isClassProperty": false, 
                "name": "podcastTitle", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4.0", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the title of a podcast item.  Only for media types of <a href=\"Titanium.Media.MUSIC_MEDIA_TYPE_PODCAST.html\">Titanium.Media.MUSIC_MEDIA_TYPE_PODCAST</a>.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.Item.rating-property", 
                "isClassProperty": false, 
                "name": "rating", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4.0", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the rating of the item</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.Item.skipCount-property", 
                "isClassProperty": false, 
                "name": "skipCount", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4.0", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the number of times the item has been skipped</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.Item.title-property", 
                "isClassProperty": false, 
                "name": "title", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4.0", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the title of the item</p>"
            }
        ], 
        "returns": null, 
        "since": "1.4.0", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.Media.MusicPlayer": {
        "deprecated": null, 
        "description": "<p>The MusicPlayer instance returned from <a href=\"Titanium.Media.createMusicPlayer.html\">Titanium.Media.createMusicPlayer</a>.  This object represents a music controller.</p>", 
        "events": [
            {
                "filename": "Titanium.Media.MusicPlayer.playingChange-event", 
                "name": "playingChange", 
                "properties": {
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>the currently playing media changed</p>"
            }, 
            {
                "filename": "Titanium.Media.MusicPlayer.stateChange-event", 
                "name": "stateChange", 
                "properties": {
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>the playback state changed</p>"
            }, 
            {
                "filename": "Titanium.Media.MusicPlayer.volumeChange-event", 
                "name": "volumeChange", 
                "properties": {
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>the volume changed</p>"
            }
        ], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.Media.MusicPlayer.pause-method", 
                "name": "pause", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.4.0", 
                "value": "<p>pause playback</p>"
            }, 
            {
                "filename": "Titanium.Media.MusicPlayer.play-method", 
                "name": "play", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.4.0", 
                "value": "<p>begin playback</p>"
            }, 
            {
                "filename": "Titanium.Media.MusicPlayer.seekBackward-method", 
                "name": "seekBackward", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.4.0", 
                "value": "<p>seek backward in the currently playing media</p>"
            }, 
            {
                "filename": "Titanium.Media.MusicPlayer.seekForward-method", 
                "name": "seekForward", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.4.0", 
                "value": "<p>seek forward in the currently playing media</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.MusicPlayer.setQueue-method", 
                "name": "setQueue", 
                "parameters": [
                    {
                        "description": "a queue representation to set the player queue to.  Can be any of: A dictionary with an <tt>items</tt> key that is an array of <a href=\"Titanium.Media.Item-object.html\">Titanium.Media.Item</a> objects, an array of <a href=\"Titanium.Media.Item-object.html\">Titanium.Media.Item</a> objects, or a single <a href=\"Titanium.Media.Item-object.html\">Titanium.Media.Item</a> object.", 
                        "name": "queue", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.4.0", 
                "value": "<p>set the media queue</p>"
            }, 
            {
                "filename": "Titanium.Media.MusicPlayer.skipToBeginning-method", 
                "name": "skipToBeginning", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.4.0", 
                "value": "<p>skip to the beginning of the currently playing media</p>"
            }, 
            {
                "filename": "Titanium.Media.MusicPlayer.skipToNext-method", 
                "name": "skipToNext", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.4.0", 
                "value": "<p>skip to the next media in the queue</p>"
            }, 
            {
                "filename": "Titanium.Media.MusicPlayer.skipToPrevious-method", 
                "name": "skipToPrevious", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.4.0", 
                "value": "<p>skip to the previous media in the queue</p>"
            }, 
            {
                "filename": "Titanium.Media.MusicPlayer.stop-method", 
                "name": "stop", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.4.0", 
                "value": "<p>stop playback</p>"
            }, 
            {
                "filename": "Titanium.Media.MusicPlayer.stopSeeking-method", 
                "name": "stopSeeking", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.4.0", 
                "value": "<p>end a seek operation</p>"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Media.MusicPlayer.currentPlaybackTime-property", 
                "isClassProperty": false, 
                "name": "currentPlaybackTime", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4.0", 
                "type": "double", 
                "type_jsca": "double", 
                "value": "<p>the current point in song playback</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.MusicPlayer.nowPlaying-property", 
                "isClassProperty": false, 
                "name": "nowPlaying", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4.0", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>an Item object which indicates the currently playing media</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.MusicPlayer.playbackState-property", 
                "isClassProperty": false, 
                "name": "playbackState", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4.0", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the playback state; one of <a href=\"Titanium.Media.MUSIC_PLAYER_STATE_STOPPED-property.html\">Titanium.Media.MUSIC_PLAYER_STATE_STOPPED</a>, <a href=\"Titanium.Media.MUSIC_PLAYER_STATE_PLAYING-property.html\">Titanium.Media.MUSIC_PLAYER_STATE_PLAYING</a>, <a href=\"Titanium.Media.MUSIC_PLAYER_STATE_PAUSED-property.html\">Titanium.Media.MUSIC_PLAYER_STATE_PAUSED</a>, <a href=\"Titanium.Media.MUSIC_PLAYER_STATE_INTERRUPTED-property.html\">Titanium.Media.MUSIC_PLAYER_STATE_INTERRUPTED</a>, <a href=\"Titanium.Media.MUSIC_PLAYER_STATE_SKEEK_FORWARD-property.html\">Titanium.Media.MUSIC_PLAYER_STATE_SKEEK_FORWARD</a>, <a href=\"Titanium.Media.MUSIC_PLAYER_STATE_SEEK_BACKWARD-property.html\">Titanium.Media.MUSIC_PLAYER_STATE_SEEK_BACKWARD</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.MusicPlayer.repeatMode-property", 
                "isClassProperty": false, 
                "name": "repeatMode", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4.0", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the repeat setting; one of <a href=\"Titanium.Media.MUSIC_PLAYER_REPEAT_DEFAULT-property.html\">Titanium.Media.MUSIC_PLAYER_REPEAT_DEFAULT</a>, <a href=\"Titanium.Media.MUSIC_PLAYER_REPEAT_NONE-property.html\">Titanium.Media.MUSIC_PLAYER_REPEAT_NONE</a>, <a href=\"Titanium.Media.MUSIC_PLAYER_REPEAT_ONE-property.html\">Titanium.Media.MUSIC_PLAYER_REPEAT_ONE</a>, <a href=\"Titanium.Media.MUSIC_PLAYER_REPEAT_ALL-property.html\">Titanium.Media.MUSIC_PLAYER_REPEAT_ALL</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.MusicPlayer.shuffleMode-property", 
                "isClassProperty": false, 
                "name": "shuffleMode", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4.0", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the shuffle setting; one of <a href=\"Titanium.Media.MUSIC_PLAYER_SHUFFLE_DEFAULT-property.html\">Titanium.Media.MUSIC_PLAYER_SHUFFLE_DEFAULT</a>, <a href=\"Titanium.Media.MUSIC_PLAYER_SHUFFLE_NONE-property.html\">Titanium.Media.MUSIC_PLAYER_SHUFFLE_NONE</a>, <a href=\"Titanium.Media.MUSIC_PLAYER_SHUFFLE_SONGS-property.html\">Titanium.Media.MUSIC_PLAYER_SHUFFLE_SONGS</a>, <a href=\"Titanium.Media.MUSIC_PLAYER_SHUFFLE_ALBUMS-property.html\">Titanium.Media.MUSIC_PLAYER_SHUFFLE_ALBUMS</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.MusicPlayer.volume-property", 
                "isClassProperty": false, 
                "name": "volume", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4.0", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>a value between 0.0 and 1.0 indicating the volume level for the music player</p>"
            }
        ], 
        "returns": null, 
        "since": "1.4.0", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.Media.Sound": {
        "deprecated": null, 
        "description": "<p>The Sound object is returned by <a href=\"Titanium.Media.createSound.html\">Titanium.Media.createSound</a> and is useful for playing basic sounds. The Sound object loads the entire media resource in memory before playing.  If you need to support streaming, use the <a href=\"Titanium.Media.createAudioPlayer.html\">Titanium.Media.createAudioPlayer</a> API.</p>", 
        "events": [
            {
                "filename": "Titanium.Media.Sound.complete-event", 
                "name": "complete", 
                "properties": {
                    "source": "the source object that fired the event", 
                    "success": "<p>boolean to indicate if the sound was successfully played</p>", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>fired when the audio has completed</p>"
            }, 
            {
                "filename": "Titanium.Media.Sound.error-event", 
                "name": "error", 
                "properties": {
                    "message": "<p>error message</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>called when an error is received playing the audio.</p>"
            }, 
            {
                "filename": "Titanium.Media.Sound.interrupted-event", 
                "name": "interrupted", 
                "properties": {
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>called when the audio is interrupted by the device. this is typically called during an interruption due to an incoming phone call.</p>"
            }, 
            {
                "filename": "Titanium.Media.Sound.resume-event", 
                "name": "resume", 
                "properties": {
                    "interruption": "<p>boolean to indicate if the resume was from an interruption</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>called when the audio is resumed after an interruption.</p>"
            }
        ], 
        "examples": [
            {
                "code": "<p>Simple example of playing a WAVE file from the Resources directory.</p>\n<pre><code>var player = Ti.Media.createSound({url:\"sound.wav\"});\nplayer.play();\n</code></pre>", 
                "description": "Simple Example"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.Media.Sound.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.Media.Sound.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.Sound.getTime-method", 
                "name": "getTime", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "double", 
                "since": "0.8", 
                "value": "<p>return the current time position of the audio</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.Sound.getVolume-method", 
                "name": "getVolume", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "float", 
                "since": "0.8", 
                "value": "<p>return the value of the audio</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.Sound.isLooping-method", 
                "name": "isLooping", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "boolean", 
                "since": "0.8", 
                "value": "<p>returns true if the audio will loop</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.Sound.isPaused-method", 
                "name": "isPaused", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "boolean", 
                "since": "0.8", 
                "value": "<p>returns true if the audio is paused</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.Sound.isPlaying-method", 
                "name": "isPlaying", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "boolean", 
                "since": "0.8", 
                "value": "<p>returns true if the audio is playing</p>"
            }, 
            {
                "filename": "Titanium.Media.Sound.pause-method", 
                "name": "pause", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>temporarily pause the audio. to resume, invoke <tt>play</tt>.</p>"
            }, 
            {
                "filename": "Titanium.Media.Sound.play-method", 
                "name": "play", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>starting playing the source. if paused, will resume.</p>"
            }, 
            {
                "filename": "Titanium.Media.Sound.release-method", 
                "name": "release", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>release all internal resources. this is typically unnecessary but can be useful if you load a large audio file in <tt>app.js</tt> and play it only once and you would like to release all releases after your final play to reduce memory.</p>"
            }, 
            {
                "filename": "Titanium.Media.Sound.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously added event listener"
            }, 
            {
                "filename": "Titanium.Media.Sound.reset-method", 
                "name": "reset", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>reset the audio to the beginning.</p>"
            }, 
            {
                "filename": "Titanium.Media.Sound.setLooping-method", 
                "name": "setLooping", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>control whether the audio should loop</p>"
            }, 
            {
                "filename": "Titanium.Media.Sound.setPaused-method", 
                "name": "setPaused", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>control whether the audio is paused</p>"
            }, 
            {
                "filename": "Titanium.Media.Sound.setTime-method", 
                "name": "setTime", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>set the time position of the audio</p>"
            }, 
            {
                "filename": "Titanium.Media.Sound.setVolume-method", 
                "name": "setVolume", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>set the volume of the audio</p>"
            }, 
            {
                "filename": "Titanium.Media.Sound.stop-method", 
                "name": "stop", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>stop playing the audio and reset it to the beginning.</p>"
            }
        ], 
        "notes": "<p>You can pass the property <tt>preload</tt> in the constructor as an object property to cause the audio to be preloaded before <tt>play</tt> is invoked.  For larger audio files, this is recommended if you want the audio to begin immediately when invoking <tt>play</tt>.</p>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Media.Sound.allowBackground-property", 
                "isClassProperty": false, 
                "name": "allowBackground", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean to indicate if audio should continue playing even if Activity is paused (Android only as of 1.3.0)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.Sound.duration-property", 
                "isClassProperty": false, 
                "name": "duration", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>the duration of the audio.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.Sound.looping-property", 
                "isClassProperty": false, 
                "name": "looping", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean to indicate if the audio should loop upon completion</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.Sound.paused-property", 
                "isClassProperty": false, 
                "name": "paused", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean to indicate if the audio is paused</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.Sound.playing-property", 
                "isClassProperty": false, 
                "name": "playing", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean to indicate if the audio is playing</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.Sound.time-property", 
                "isClassProperty": false, 
                "name": "time", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>the time position of the audio.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.Sound.url-property", 
                "isClassProperty": false, 
                "name": "url", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>url to the audio</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.Sound.volume-property", 
                "isClassProperty": false, 
                "name": "volume", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>the volume of the audio. this volume only affects the media, not the device audio.</p>"
            }
        ], 
        "returns": null, 
        "since": "0.8", 
        "subtype": "proxy", 
        "type": "object"
    }, 
    "Titanium.Media.VideoPlayer": {
        "deprecated": null, 
        "description": "<p>The VideoPlayer object is returned by <a href=\"Titanium.Media.createVideoPlayer.html\">Titanium.Media.createVideoPlayer</a> and is useful for playing videos. </p>", 
        "events": [
            {
                "filename": "Titanium.Media.VideoPlayer.click-event", 
                "name": "click", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a click (longer than touch) against the view"
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.complete-event", 
                "name": "complete", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "reason": "<p>the completion reason. One of <a href=\"Titanium.Media.VIDEO_FINISH_REASON_PLAYBACK_ENDED-property.html\">Titanium.Media.VIDEO_FINISH_REASON_PLAYBACK_ENDED</a>, <a href=\"Titanium.Media.VIDEO_FINISH_REASON_PLAYBACK_ERROR-property.html\">Titanium.Media.VIDEO_FINISH_REASON_PLAYBACK_ERROR</a> or <a href=\"Titanium.Media.VIDEO_FINISH_REASON_USER_EXITED-property.html\">Titanium.Media.VIDEO_FINISH_REASON_USER_EXITED</a>.</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when movie playback ends or a user exits playback</p>"
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.dblclick-event", 
                "name": "dblclick", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double click against the view"
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.doubletap-event", 
                "name": "doubletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double tap against the view"
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.durationAvailable-event", 
                "name": "durationAvailable", 
                "properties": {
                    "duration": "<p>duration</p>", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the duration is available</p>"
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.error-event", 
                "name": "error", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "message": "<p>reason for error as string</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when movie playback encounters an error</p>"
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.fullscreen-event", 
                "name": "fullscreen", 
                "properties": {
                    "entering": "<p>true to indicate entering fullscreen, false to indicate leaving fullscreen</p>", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when a movie changes from fullscreen view</p>"
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.load-event", 
                "name": "load", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the movie play loads</p>"
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.loadstate-event", 
                "name": "loadstate", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "loadState": "<p>loadState</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the network loadState changes</p>"
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.mediaTypesAvailable-event", 
                "name": "mediaTypesAvailable", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "mediaTypes": "<p>media types</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the media types is available</p>"
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.naturalSizeAvailable-event", 
                "name": "naturalSizeAvailable", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "naturalSize": "<p>natural size as a dictionary. see <tt>naturalSize</tt> property.</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the natural size is available</p>"
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.playbackState-event", 
                "name": "playbackState", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "playbackState": "<p>playbackState</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the playbackState changes</p>"
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.playing-event", 
                "name": "playing", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "url": "<p>url of the media</p>", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the currently playing movie changes</p>"
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.preload-event", 
                "name": "preload", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the movie has preloaded and is ready to play</p>"
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.resize-event", 
                "name": "resize", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the movie player is resized</p>"
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.singletap-event", 
                "name": "singletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a single tap against the view"
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.sourceChange-event", 
                "name": "sourceChange", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "sourceChange": "<p>the new sourceType</p>", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the movieSourceType is <a href=\"Titanium.Media.VIDEO_SOURCE_TYPE_UNKNOWN-property.html\">Titanium.Media.VIDEO_SOURCE_TYPE_UNKNOWN</a> when preparing for playback.</p>"
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.swipe-event", 
                "name": "swipe", 
                "properties": {
                    "direction": "direction of the swipe - either left or right", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a swipe (left or right) against the view"
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.thumbnail-event", 
                "name": "thumbnail", 
                "properties": {
                    "error": "<p>if success is <tt>false</tt>, error message as string for reason</p>", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "image": "<p>blob of the thumbnail image</p>", 
                    "source": "the source object that fired the event", 
                    "success": "<p>boolean to indicate success or failure</p>", 
                    "time": "<p>time</p>", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when a movie thumbnail is available from <tt>requestThumbnailImagesAtTimes</tt></p>"
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.touchcancel-event", 
                "name": "touchcancel", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is interrupted by the device. this happens in circumenstances such as an incoming call to allow the UI to clean up state."
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.touchend-event", 
                "name": "touchend", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is completed"
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.touchmove-event", 
                "name": "touchmove", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects movement of a touch.  Event coordinates are always relative to the view in which the initial touch occurred"
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.touchstart-event", 
                "name": "touchstart", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects a gesture"
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.twofingertap-event", 
                "name": "twofingertap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a two-finger tap against the view"
            }
        ], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.Media.VideoPlayer.add-method", 
                "name": "add", 
                "parameters": [
                    {
                        "description": "the view to add to this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "add a child to the view hierarchy"
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.animate-method", 
                "name": "animate", 
                "parameters": [
                    {
                        "description": "either a dictionary of animation properties or an Animation object", 
                        "name": "obj", 
                        "type": "object"
                    }, 
                    {
                        "description": "function to be invoked upon completion of the animation", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "animate the view"
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.cancelAllThumbnailImageRequests-method", 
                "name": "cancelAllThumbnailImageRequests", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "<p>Cancels all pending asynchronous thumbnail requests.</p>"
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.hide-method", 
                "name": "hide", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "hide the view"
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.pause-method", 
                "name": "pause", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "<p>pause playing the video. On iOS only available under 3.2 and later</p>"
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.play-method", 
                "name": "play", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "<p>start playing the video</p>"
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.release-method", 
                "name": "release", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "<p>release the internal video resources immediately.  this is not usually necessary but can help if you no longer need to use the player after it is used to help converse memory.</p>"
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.remove-method", 
                "name": "remove", 
                "parameters": [
                    {
                        "description": "the view to remove from this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "remove a previously add view from the view hiearchy"
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "remove a previously added event listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.requestThumbnailImagesAtTimes-method", 
                "name": "requestThumbnailImagesAtTimes", 
                "parameters": [
                    {
                        "description": "array of doubles for each time to request", 
                        "name": "times", 
                        "type": "array"
                    }, 
                    {
                        "description": "either [[Titanium.Media.VIDEO_TIME_OPTION_NEAREST_KEYFRAME]] or [[Titanium.Media.VIDEO_TIME_OPTION_EXACT]].", 
                        "name": "option", 
                        "type": "int"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "<p>Asynchronously request thumbnails for one or more times, provided as an array of numbers (double). Fires a <tt>thumbnail</tt> event on completion. Optionally invokes the callback function passed in the method.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.setBackgroundView-method", 
                "name": "setBackgroundView", 
                "parameters": [
                    {
                        "description": "view to set", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "<p>A view for customization which is always displayed behind movie content.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.setMedia-method", 
                "name": "setMedia", 
                "parameters": [
                    {
                        "description": "media to play", 
                        "name": "media", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "<p>the a non-url based media to play, either a File or Blob.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.setUrl-method", 
                "name": "setUrl", 
                "parameters": [
                    {
                        "description": "the url to play", 
                        "name": "url", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "<p>the url to play</p>"
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.show-method", 
                "name": "show", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "make the view visible"
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.stop-method", 
                "name": "stop", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "<p>stop playing the video</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.thumbnailImageAtTime-method", 
                "name": "thumbnailImageAtTime", 
                "parameters": [
                    {
                        "description": "playback time", 
                        "name": "time", 
                        "type": "double"
                    }, 
                    {
                        "description": "either [[Titanium.Media.VIDEO_TIME_OPTION_NEAREST_KEYFRAME]] or [[Titanium.Media.VIDEO_TIME_OPTION_EXACT]]", 
                        "name": "option", 
                        "type": "int"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.9", 
                "value": "<p>Returns a thumbnail at the given time as a blob.</p>"
            }, 
            {
                "filename": "Titanium.Media.VideoPlayer.toImage-method", 
                "name": "toImage", 
                "parameters": [
                    {
                        "description": "function to be invoked upon completion. if non-null, this method will be performed asynchronously. if null, it will be performed immediately", 
                        "name": "f", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.9", 
                "value": "return a Blob image of the rendered view"
            }
        ], 
        "notes": "<p>Starting in iPhone 3.2 SDK, the video player can be embedded in any normal view.  However, if you create multiple video players at one time, only the last one to have its URL set will display video content or behave as if it is a view for a video player.  Prior to 3.2, only fullscreen views were available on iPhone.</p>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.allowsAirPlay-property", 
                "isClassProperty": false, 
                "name": "allowsAirPlay", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>Whether or not the movie can be played on a remote device.  iOS 4.3+ only.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.anchorPoint-property", 
                "isClassProperty": false, 
                "name": "anchorPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the anchor point value. anchor specifies the position by which animation should occur. center is 0.5, 0.5"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.animatedCenterPoint-property", 
                "isClassProperty": false, 
                "name": "animatedCenterPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "read-only object with x and y properties of where the view is during animation"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.autoplay-property", 
                "isClassProperty": false, 
                "name": "autoplay", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>indicates if a movie should automatically start playback when it is likely to finish uninterrupted based on e.g. network conditions. Defaults to true.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.backgroundColor-property", 
                "isClassProperty": false, 
                "name": "backgroundColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.backgroundDisabledColor-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background color of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.backgroundDisabledImage-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background image url of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.backgroundFocusedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.backgroundFocusedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.backgroundGradient-property", 
                "isClassProperty": false, 
                "name": "backgroundGradient", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a background gradient for the view with the properties: type,startPoint,endPoint,startRadius,endRadius,backfillStart,backfillEnd,colors."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.backgroundImage-property", 
                "isClassProperty": false, 
                "name": "backgroundImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background image url of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.backgroundLeftCap-property", 
                "isClassProperty": false, 
                "name": "backgroundLeftCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the left end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The right end cap is therefore computed by adding the size of the left end cap and the middle portion together and then subtracting that value from the width of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.backgroundSelectedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.backgroundSelectedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.backgroundTopCap-property", 
                "isClassProperty": false, 
                "name": "backgroundTopCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the top end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The bottom end cap is therefore computed by adding the size of the top end cap and the middle portion together and then subtracting that value from the height of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.borderColor-property", 
                "isClassProperty": false, 
                "name": "borderColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the border color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.borderRadius-property", 
                "isClassProperty": false, 
                "name": "borderRadius", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border radius of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.borderWidth-property", 
                "isClassProperty": false, 
                "name": "borderWidth", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border width of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.bottom-property", 
                "isClassProperty": false, 
                "name": "bottom", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view bottom position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.center-property", 
                "isClassProperty": false, 
                "name": "center", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the center of the views position relative to the parent view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.contentURL-property", 
                "isClassProperty": false, 
                "name": "contentURL", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>deprecated. use url property instead.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.duration-property", 
                "isClassProperty": false, 
                "name": "duration", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "double", 
                "type_jsca": "double", 
                "value": "<p>The duration of the movie, or 0.0 if not known.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.endPlaybackTime-property", 
                "isClassProperty": false, 
                "name": "endPlaybackTime", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "double", 
                "type_jsca": "double", 
                "value": "<p>The end time of movie playback. Defaults to NaN, which indicates natural end time of the movie.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.focusable-property", 
                "isClassProperty": false, 
                "name": "focusable", 
                "platforms": [
                    "android"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "Set true if you want a view to be focusable when navigating with the trackball or D-Pad. Default: false. (Android Only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.font-family-property", 
                "isClassProperty": false, 
                "name": "font-family", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font family"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.font-size-property", 
                "isClassProperty": false, 
                "name": "font-size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font size"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.font-style-property", 
                "isClassProperty": false, 
                "name": "font-style", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font style, either normal or italics"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.font-weight-property", 
                "isClassProperty": false, 
                "name": "font-weight", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font weight, either normal or bold"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.fullscreen-property", 
                "isClassProperty": false, 
                "name": "fullscreen", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>Determines if the movie is presented in the entire screen (obscuring all other application content). Default is false. Setting this property to true before the movie player's view is visible will have no effect.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.height-property", 
                "isClassProperty": false, 
                "name": "height", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view height. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.initialPlaybackTime-property", 
                "isClassProperty": false, 
                "name": "initialPlaybackTime", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "double", 
                "type_jsca": "double", 
                "value": "<p>The start time of movie playback. Defaults to NaN, indicating the natural start time of the movie.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.left-property", 
                "isClassProperty": false, 
                "name": "left", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view left position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.loadState-property", 
                "isClassProperty": false, 
                "name": "loadState", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Returns the network load state of the movie player.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.media-property", 
                "isClassProperty": false, 
                "name": "media", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>the media object, either a File or Blob.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.mediaControlStyle-property", 
                "isClassProperty": false, 
                "name": "mediaControlStyle", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The style of the playback controls. Defaults to <a href=\"Titanium.Media.VIDEO_CONTROL_DEFAULT-property.html\">Titanium.Media.VIDEO_CONTROL_DEFAULT</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.mediaTypes-property", 
                "isClassProperty": false, 
                "name": "mediaTypes", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The types of media in the movie, or <a href=\"Titanium.Media.VIDEO_MEDIA_TYPE_NONE-property.html\">Titanium.Media.VIDEO_MEDIA_TYPE_NONE</a> if not known.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.movieControlMode-property", 
                "isClassProperty": false, 
                "name": "movieControlMode", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>deprecated in 3.2+ of the iPhone SDK - use <tt>mediaControlStyle</tt>. Provides the ability to set the control mode of the movie player. Defaults to <a href=\"Titanium.Media.VIDEO_CONTROL_DEFAULT-property.html\">Titanium.Media.VIDEO_CONTROL_DEFAULT</a>.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.naturalSize-property", 
                "isClassProperty": false, 
                "name": "naturalSize", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>returns a dictionary with properties <tt>width</tt> and <tt>height</tt>. Returns the natural size of the movie or 0 for both properties if not known or applicable.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.opacity-property", 
                "isClassProperty": false, 
                "name": "opacity", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the opacity from 0.0-1.0"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.playableDuration-property", 
                "isClassProperty": false, 
                "name": "playableDuration", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "double", 
                "type_jsca": "double", 
                "value": "<p>The currently playable duration of the movie, for progressively downloaded network content.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.playbackState-property", 
                "isClassProperty": false, 
                "name": "playbackState", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Returns the current playback state of the music player</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.playing-property", 
                "isClassProperty": false, 
                "name": "playing", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>Boolean to indicate if the player has started playing.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.repeatMode-property", 
                "isClassProperty": false, 
                "name": "repeatMode", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Determines how the movie player repeats when reaching the end of playback. Defaults to <a href=\"Titanium.Media.VIDEO_REPEAT_MODE_NONE-property.html\">Titanium.Media.VIDEO_REPEAT_MODE_NONE</a>.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.right-property", 
                "isClassProperty": false, 
                "name": "right", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view right position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.scalingMode-property", 
                "isClassProperty": false, 
                "name": "scalingMode", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Determines how the content scales to fit the view. Defaults to <a href=\"Titanium.Media.VIDEO_SCALING_ASPECT_FIT-property.html\">Titanium.Media.VIDEO_SCALING_ASPECT_FIT</a>.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.size-property", 
                "isClassProperty": false, 
                "name": "size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the size of the view as a dictionary of width and height properties"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.softKeyboardOnFocus-property", 
                "isClassProperty": false, 
                "name": "softKeyboardOnFocus", 
                "platforms": [
                    "android"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "One of Titanium.UI.Android.SOFT_KEYBOARD_DEFAULT_ON_FOCUS, Titanium.UI.Android.SOFT_KEYBOARD_HIDE_ON_FOCUS, or Titanium.UI.Android.SOFT_KEYBOARD_SHOW_ON_FOCUS. (Android only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.sourceType-property", 
                "isClassProperty": false, 
                "name": "sourceType", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The playback type of the movie. Defaults to <a href=\"Titanium.Media.VIDEO_SOURCE_TYPE_UNKNOWN-property.html\">Titanium.Media.VIDEO_SOURCE_TYPE_UNKNOWN</a>. Specifying a playback type before playing the movie can result in faster load times.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.top-property", 
                "isClassProperty": false, 
                "name": "top", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view top position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.touchEnabled-property", 
                "isClassProperty": false, 
                "name": "touchEnabled", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean indicating if the view should receive touch events (true, default) or forward them to peers (false)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.transform-property", 
                "isClassProperty": false, 
                "name": "transform", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the transformation matrix to apply to the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.url-property", 
                "isClassProperty": false, 
                "name": "url", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>url of the media.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.useApplicationAudioSession-property", 
                "isClassProperty": false, 
                "name": "useApplicationAudioSession", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>Indicates if the movie player should inherit the application's audio session instead of creating a new session (which would interrupt the application's session). Defaults to true. Setting this property during playback will not take effect until playback is stopped and started again.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.visible-property", 
                "isClassProperty": false, 
                "name": "visible", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean of the visibility of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.width-property", 
                "isClassProperty": false, 
                "name": "width", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view width. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Media.VideoPlayer.zIndex-property", 
                "isClassProperty": false, 
                "name": "zIndex", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "the z index position relative to other sibling views"
            }
        ], 
        "returns": null, 
        "since": "0.9", 
        "subtype": "view", 
        "type": "object"
    }, 
    "Titanium.Network": {
        "deprecated": null, 
        "description": "<p>The top level Network module.  The Network module is used accessing Networking related functionality, including <a href=\"Titanium.Network.Socket-module.html\">Titanium.Network.Socket</a></p>", 
        "events": [
            {
                "filename": "Titanium.Network.change-event", 
                "name": "change", 
                "properties": {
                    "networkType": "<p>the new network type</p>", 
                    "networkTypeName": "<p>the new network type as a string</p>", 
                    "online": "<p>boolean to indicate if the network is online</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>fired upon a network connectivity change</p>"
            }
        ], 
        "examples": [], 
        "methods": [
            {
                "deprecated": false, 
                "filename": "Titanium.Network.addConnectivityListener-method", 
                "name": "addConnectivityListener", 
                "parameters": [
                    {
                        "description": "callback function to invoke upon network connectivity changes", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>adds a connectivity listener to listen for network changes. This method has been deprecated in favor of listening for a <tt>change</tt> event.</p>"
            }, 
            {
                "filename": "Titanium.Network.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.createBonjourBrowser-method", 
                "name": "createBonjourBrowser", 
                "parameters": [
                    {
                        "description": "service to search for, must include the protocol type suffix (._tcp)", 
                        "name": "serviceType", 
                        "type": "string"
                    }, 
                    {
                        "description": "the Bonjour service domain to conduct the search in.  Default value is 'local.'", 
                        "name": "domain", 
                        "type": "string"
                    }, 
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.Network.BonjourBrowser.html\">Titanium.Network.BonjourBrowser</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.1", 
                "value": "create and return an instance of <a href=\"Titanium.Network.BonjourBrowser.html\">Titanium.Network.BonjourBrowser</a>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.createBonjourService-method", 
                "name": "createBonjourService", 
                "parameters": [
                    {
                        "description": "the name of the service.  Must be a unique identifier for this service type and domain.", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "the type of service.  Must include the protocol identifier (._tcp)", 
                        "name": "type", 
                        "type": "string"
                    }, 
                    {
                        "description": "the domain to publish the service in.  Default value is 'local.'", 
                        "name": "domain", 
                        "type": "string"
                    }, 
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.Network.BonjourService.html\">Titanium.Network.BonjourService</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.1", 
                "value": "create and return an instance of <a href=\"Titanium.Network.BonjourService.html\">Titanium.Network.BonjourService</a>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.createHTTPClient-method", 
                "name": "createHTTPClient", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.Network.HTTPClient.html\">Titanium.Network.HTTPClient</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.1", 
                "value": "create and return an instance of <a href=\"Titanium.Network.HTTPClient.html\">Titanium.Network.HTTPClient</a>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.createTCPSocket-method", 
                "name": "createTCPSocket", 
                "parameters": [
                    {
                        "description": "the host name to connect to/listen on", 
                        "name": "hostName", 
                        "type": "string"
                    }, 
                    {
                        "description": "the port for the socket", 
                        "name": "port", 
                        "type": "int"
                    }, 
                    {
                        "description": "the socket's mode; one of <a href=\"Titanium.Network.READ_MODE.html\">Titanium.Network.READ_MODE</a>, <a href=\"Titanium.Network.WRITE_MODE.html\">Titanium.Network.WRITE_MODE</a>, <a href=\"Titanium.Network.READ_WRITE_MODE.html\">Titanium.Network.READ_WRITE_MODE</a>", 
                        "name": "mode", 
                        "type": "int"
                    }, 
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.Network.TCPSocket.html\">Titanium.Network.TCPSocket</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.1", 
                "value": "create and return an instance of <a href=\"Titanium.Network.TCPSocket.html\">Titanium.Network.TCPSocket</a>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.decodeURIComponent-method", 
                "name": "decodeURIComponent", 
                "parameters": [
                    {
                        "description": "input value to be decoded", 
                        "name": "value", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "string", 
                "since": "0.1", 
                "value": "<p>decode a URI component part using URI encoding</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.encodeURIComponent-method", 
                "name": "encodeURIComponent", 
                "parameters": [
                    {
                        "description": "input value to be encoded", 
                        "name": "value", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "string", 
                "since": "0.1", 
                "value": "<p>encode a URI component part using URI encoding</p>"
            }, 
            {
                "filename": "Titanium.Network.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.registerForPushNotifications-method", 
                "name": "registerForPushNotifications", 
                "parameters": [
                    {
                        "description": "dictionary of the following: <tt>types</tt> is an array of type constants that the application would like to receive, <tt>success</tt> is a callback function that is called when the push registration is successfully completed, <tt>error</tt> is a callback function that is called when an error is received during registration and <tt>callback</tt> is a callback function that is invoked upon receiving a new push notification. This method should be called at application startup.", 
                        "name": "config", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>register for push notifications with the Apple Push Notification Service. Only available on iPhone.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.removeConnectivityListener-method", 
                "name": "removeConnectivityListener", 
                "parameters": [
                    {
                        "description": "callback function to remove", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>removes a connectivity listener. This method has been deprecated in favor of listening for a <tt>change</tt> event.</p>"
            }, 
            {
                "filename": "Titanium.Network.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "remove a previously added event listener"
            }
        ], 
        "notes": null, 
        "objects": [
            "Titanium.Network.BonjourBrowser", 
            "Titanium.Network.BonjourService", 
            "Titanium.Network.HTTPClient", 
            "Titanium.Network.TCPSocket"
        ], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Network.INADDR_ANY-property", 
                "isClassProperty": true, 
                "name": "INADDR_ANY", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>constant value representing the ability for sockets to listen on any locally available network device</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.NETWORK_LAN-property", 
                "isClassProperty": true, 
                "name": "NETWORK_LAN", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant value to indicate that the network is LAN</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.NETWORK_MOBILE-property", 
                "isClassProperty": true, 
                "name": "NETWORK_MOBILE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant value to indicate that the network is MOBILE</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.NETWORK_NONE-property", 
                "isClassProperty": true, 
                "name": "NETWORK_NONE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant value to indicate that the network is not available</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.NETWORK_UNKNOWN-property", 
                "isClassProperty": true, 
                "name": "NETWORK_UNKNOWN", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant value to indicate that the network is not known</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.NETWORK_WIFI-property", 
                "isClassProperty": true, 
                "name": "NETWORK_WIFI", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant value to indicate that the network is WIFI</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.NOTIFICATION_TYPE_ALERT-property", 
                "isClassProperty": true, 
                "name": "NOTIFICATION_TYPE_ALERT", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant value for the push notification alert type</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.NOTIFICATION_TYPE_BADGE-property", 
                "isClassProperty": true, 
                "name": "NOTIFICATION_TYPE_BADGE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant value for the push notification badge type</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.NOTIFICATION_TYPE_SOUND-property", 
                "isClassProperty": true, 
                "name": "NOTIFICATION_TYPE_SOUND", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant value for the push notification sound type</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.READ_MODE-property", 
                "isClassProperty": true, 
                "name": "READ_MODE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant value specifying read-only mode for sockets</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.READ_WRITE_MODE-property", 
                "isClassProperty": true, 
                "name": "READ_WRITE_MODE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant value specifying read-write mode for sockets</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.SOCKET_CLOSED-property", 
                "isClassProperty": true, 
                "name": "SOCKET_CLOSED", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant value representing a socket in the CLOSED state</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.SOCKET_CONNECTED-property", 
                "isClassProperty": true, 
                "name": "SOCKET_CONNECTED", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant value representing a socket in the CONNECTED state</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.SOCKET_ERROR-property", 
                "isClassProperty": true, 
                "name": "SOCKET_ERROR", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant value representing a socket in the ERROR state</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.SOCKET_INITIALIZED-property", 
                "isClassProperty": true, 
                "name": "SOCKET_INITIALIZED", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant value representing a socket in the INITIALIZED state</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.SOCKET_LISTENING-property", 
                "isClassProperty": true, 
                "name": "SOCKET_LISTENING", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant value representing a socket in the LISTENING state</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.WRITE_MODE-property", 
                "isClassProperty": true, 
                "name": "WRITE_MODE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant value specifying write-only mode for sockets</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.networkType-property", 
                "isClassProperty": false, 
                "name": "networkType", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the network type value as a constant.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.networkTypeName-property", 
                "isClassProperty": false, 
                "name": "networkTypeName", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the network type name constant. Returns one of <tt>NONE</tt>, <tt>WIFI</tt>, <tt>LAN</tt> or <tt>MOBILE</tt>.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.online-property", 
                "isClassProperty": false, 
                "name": "online", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>readonly boolean value that indicates if the network is reachable to the Internet either via WIFI or Carrier network</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.remoteDeviceUUID-property", 
                "isClassProperty": false, 
                "name": "remoteDeviceUUID", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the remote device UUID if the device was registered with the Apple Push Notification Service or null if not set. Only available on iPhone.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.remoteNotificationTypes-property", 
                "isClassProperty": false, 
                "name": "remoteNotificationTypes", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "array", 
                "type_jsca": "array", 
                "value": "<p>returns an array of network type constants enabled for the application. Only available on iPhone.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.remoteNotificationsEnabled-property", 
                "isClassProperty": false, 
                "name": "remoteNotificationsEnabled", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>returns true if remote notifications have been enabled. Only available on iPhone.</p>"
            }
        ], 
        "returns": null, 
        "since": "0.1", 
        "subtype": null, 
        "type": "module"
    }, 
    "Titanium.Network.BonjourBrowser": {
        "deprecated": null, 
        "description": "<p>The BonjourBrowser instance returned from <a href=\"Titanium.Network.createBonjourBrowser.html\">Titanium.Network.createBonjourBrowser</a>.  This object is a browser for the discovery and retrieval of Bonjour services available on the network.<br>\n</p>", 
        "events": [
            {
                "filename": "Titanium.Network.BonjourBrowser.updatedServices-event", 
                "name": "updatedServices", 
                "properties": {
                    "services": "<p>An array of BonjourService objects corresponding to currently available services.  If you cache this value, including using it as table data, be aware that it could become out of date at any time due to the asynchronous nature of Bonjour service discovery.</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>Fired when the discovered services list is updated</p>"
            }
        ], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.Network.BonjourBrowser.search-method", 
                "name": "search", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2.0", 
                "value": "<p>Conduct a search for Bonjour services matching the type and domain specified during creation</p>"
            }, 
            {
                "filename": "Titanium.Network.BonjourBrowser.stopSearch-method", 
                "name": "stopSearch", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2.0", 
                "value": "<p>Halt an ongoing search</p>"
            }
        ], 
        "notes": "<p>If your application publishes Bonjour services itself, that service will be discovered by the browser if necessary; be prepared to perform a check if you do not want to list local services as available.  Bonjour service browsing is an asynchronous operation, meaning that you should be extremely careful when caching values from the 'services' property returned by the updatedServices event.  In particular, if you maintain a local copy of available services and a user tries to connect to one, you should be prepared to handle failures gracefully; the next updatedServices event should provide the new services list, but you should not rely on it being delivered before user input.  When a window which uses Bonjour browsing is closed, if you do not want to continue searching, you must call the stop() method.</p>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Network.BonjourBrowser.domain-property", 
                "isClassProperty": false, 
                "name": "domain", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2.0", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>The domain the browser is searching in</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.BonjourBrowser.isSearching-property", 
                "isClassProperty": false, 
                "name": "isSearching", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2.0", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>Whether or not the browser is currently searching</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.BonjourBrowser.serviceType-property", 
                "isClassProperty": false, 
                "name": "serviceType", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2.0", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>The type of the service the browser searches for</p>"
            }
        ], 
        "returns": null, 
        "since": "1.2.0", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.Network.BonjourService": {
        "deprecated": null, 
        "description": "<p>The BonjourService instance returned either from <a href=\"Titanium.Network.createBonjourService.html\">Titanium.Network.createBonjourService</a> or via the service list from a BonjourBrowser <tt>updatedServices</tt> event.  This object describes a service on the network which is published by Bonjour.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "deprecated": false, 
                "filename": "Titanium.Network.BonjourService.publish-method", 
                "name": "publish", 
                "parameters": [
                    {
                        "description": "a TCPSocket object to associate with the Bonjour service.", 
                        "name": "socket", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2.0", 
                "value": "<p>Publish a Bonjour service to the network.  Only works if isLocal is TRUE</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.BonjourService.resolve-method", 
                "name": "resolve", 
                "parameters": [
                    {
                        "description": "the timeout for service resolution, in seconds.  Optional, default is 120s.", 
                        "name": "timeout", 
                        "type": "double"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2.0", 
                "value": "<p>Resolve a Bonjour service from the network.  Must be done before attempting to access the service's socket information, if a remote service.  You cannot resolve a locally published service.</p>"
            }, 
            {
                "filename": "Titanium.Network.BonjourService.stop-method", 
                "name": "stop", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2.0", 
                "value": "<p>Halts publication of a service.</p>"
            }
        ], 
        "notes": "<p>You can only publish Bonjour services attached to a socket which is currently listening; you cannot publish a service for a remotely connected socket.  If you stop the Bonjour service and wish to close the socket it uses, it is strongly recommended that you stop the service first.  When a window which publishes a Bonjour service is closed, you must stop the service if the associated socket is also to be closed, or if it is no longer necessary to publish.  Unlike other network operations, Bonjour service resolution and publishing is synchronous, so be aware that your code may block while resolution is going on.  In particular, you may wish to display UI elements indicating background activity before beginning resolution.</p>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Network.BonjourService.domain-property", 
                "isClassProperty": false, 
                "name": "domain", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2.0", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the domain of the service</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.BonjourService.isLocal-property", 
                "isClassProperty": false, 
                "name": "isLocal", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2.0", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>whether or not the service is local to the device</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.BonjourService.name-property", 
                "isClassProperty": false, 
                "name": "name", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2.0", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the name of the service</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.BonjourService.socket-property", 
                "isClassProperty": false, 
                "name": "socket", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2.0", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>the TCPSocket object that is used to connect to the service</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.BonjourService.type-property", 
                "isClassProperty": false, 
                "name": "type", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2.0", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the type of the service</p>"
            }
        ], 
        "returns": null, 
        "since": "1.2.0", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.Network.HTTPClient": {
        "deprecated": null, 
        "description": "<p>The HttpClient instance returned from <a href=\"Titanium.Network.createHTTPClient.html\">Titanium.Network.createHTTPClient</a>. This object (mostly) implements the XMLHttpRequest specification.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.Network.HTTPClient.abort-method", 
                "name": "abort", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>abort a pending request</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.HTTPClient.getResponseHeader-method", 
                "name": "getResponseHeader", 
                "parameters": [
                    {
                        "description": "the header name", 
                        "name": "name", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "string", 
                "since": "0.1", 
                "value": "<p>return the response header.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.HTTPClient.open-method", 
                "name": "open", 
                "parameters": [
                    {
                        "description": "the HTTP method", 
                        "name": "method", 
                        "type": "string"
                    }, 
                    {
                        "description": "the URL for the request", 
                        "name": "url", 
                        "type": "string"
                    }, 
                    {
                        "description": "optional property to indicate if asynchronous (default) or not", 
                        "name": "async", 
                        "type": "boolean"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>open the request and ready the connection</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.HTTPClient.send-method", 
                "name": "send", 
                "parameters": [
                    {
                        "description": "the data to send in the request. can either be null, dictionary, string, File object or Blob.", 
                        "name": "data", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>send the request (Only async is currently supported)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.HTTPClient.setRequestHeader-method", 
                "name": "setRequestHeader", 
                "parameters": [
                    {
                        "description": "name of the header", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "value of the header. May be null to clearing out a property, such as X-Requested-With", 
                        "name": "value", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>set the request header. Must be called after <tt>open</tt> but before <tt>send</tt>.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.HTTPClient.setTimeout-method", 
                "name": "setTimeout", 
                "parameters": [
                    {
                        "description": "the timeout in milliseconds", 
                        "name": "timeout", 
                        "type": "double"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>set the request timeout</p>"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Network.HTTPClient.DONE-property", 
                "isClassProperty": true, 
                "name": "DONE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the DONE readyState constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.HTTPClient.HEADERS_RECEIVED-property", 
                "isClassProperty": true, 
                "name": "HEADERS_RECEIVED", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the HEADERS_RECEIVED readyState constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.HTTPClient.LOADING-property", 
                "isClassProperty": true, 
                "name": "LOADING", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the LOADING readyState constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.HTTPClient.OPENED-property", 
                "isClassProperty": true, 
                "name": "OPENED", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the OPENED readyState constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.HTTPClient.UNSENT-property", 
                "isClassProperty": true, 
                "name": "UNSENT", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the UNSET readyState constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.HTTPClient.connected-property", 
                "isClassProperty": false, 
                "name": "connected", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean to indicate that the response was successful</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.HTTPClient.connectionType-property", 
                "isClassProperty": false, 
                "name": "connectionType", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the connection type, normally either <tt>GET</tt> or <tt>POST</tt>.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.HTTPClient.file-property", 
                "isClassProperty": false, 
                "name": "file", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>file to download contents to.  Can only be set after calling open.  iOS only</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.HTTPClient.location-property", 
                "isClassProperty": false, 
                "name": "location", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the absolute URL of the request</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.HTTPClient.ondatastream-property", 
                "isClassProperty": false, 
                "name": "ondatastream", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "function", 
                "type_jsca": "function", 
                "value": "<p>set this to a function before calling open to cause the function to be called at regular intervals as the request data is being received. the <tt>progress</tt> property of the event will contain a value from 0.0-1.0 with the progress.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.HTTPClient.onerror-property", 
                "isClassProperty": false, 
                "name": "onerror", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "function", 
                "type_jsca": "function", 
                "value": "<p>set this to a function before calling open to cause the function to be called upon a error response</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.HTTPClient.onload-property", 
                "isClassProperty": false, 
                "name": "onload", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "function", 
                "type_jsca": "function", 
                "value": "<p>set this to a function before calling open to cause the function to be called upon a successful response</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.HTTPClient.onreadystatechange-property", 
                "isClassProperty": false, 
                "name": "onreadystatechange", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "function", 
                "type_jsca": "function", 
                "value": "<p>set this to a function before calling open to cause the function to be called for each readyState change</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.HTTPClient.onsendstream-property", 
                "isClassProperty": false, 
                "name": "onsendstream", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "function", 
                "type_jsca": "function", 
                "value": "<p>set this to a function before calling open to cause the function to be called at regular intervals as the request data is being transmitted. the <tt>progress</tt> property of the event will contain a value from 0.0-1.0 with the progress.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.HTTPClient.readyState-property", 
                "isClassProperty": false, 
                "name": "readyState", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the readyState value</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.HTTPClient.responseData-property", 
                "isClassProperty": false, 
                "name": "responseData", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>the response data as a Blob object.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.HTTPClient.responseText-property", 
                "isClassProperty": false, 
                "name": "responseText", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the response as text or null if an error was received or no data was returned</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.HTTPClient.responseXML-property", 
                "isClassProperty": false, 
                "name": "responseXML", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>the response object as an XML DOMDocument object. returns null if the content type returned by the server was not XML or the content could not be parsed</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.HTTPClient.status-property", 
                "isClassProperty": false, 
                "name": "status", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the response HTTP status code</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.HTTPClient.timeout-property", 
                "isClassProperty": false, 
                "name": "timeout", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>timeout is milliseconds when the connection should be aborted</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.HTTPClient.validatesSecureCertificate-property", 
                "isClassProperty": false, 
                "name": "validatesSecureCertificate", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>set this to control how SSL certification validation is performed on connection.  defaults to false if in simulator or device testing and true if release for distribution mode.</p>"
            }
        ], 
        "returns": null, 
        "since": "0.1", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.Network.Socket": {
        "deprecated": null, 
        "description": "<p>Socket module</p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.Network.Socket.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.7", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.Socket.createTCP-method", 
                "name": "createTCP", 
                "parameters": [
                    {
                        "description": "creation parameters", 
                        "name": "params", 
                        "type": "Object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "<a href=\"Titanium.Network.Socket.TCP.html\">Titanium.Network.Socket.TCP</a>", 
                "since": "1.7", 
                "value": "<p>returns new TCP socket object, takes object containing properties list defined in <a href=\"Titanium.Network.Socket.TCP.html\">Titanium.Network.Socket.TCP</a>.  Some properties are only needed based on whether the socket will be a connecting socket or a listening socket.</p>"
            }, 
            {
                "filename": "Titanium.Network.Socket.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.7", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.Network.Socket.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.7", 
                "value": "remove a previously added event listener"
            }
        ], 
        "notes": null, 
        "objects": [
            "Titanium.Network.Socket.TCP"
        ], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "android", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Network.Socket.CLOSED-property", 
                "isClassProperty": true, 
                "name": "CLOSED", 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "since": "1.7", 
                "type": "Number", 
                "type_jsca": "Number", 
                "value": "<p>state representing the closed state of a socket</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.Socket.CONNECTED-property", 
                "isClassProperty": true, 
                "name": "CONNECTED", 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "since": "1.7", 
                "type": "Number", 
                "type_jsca": "Number", 
                "value": "<p>state representing the connected state of a socket</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.Socket.ERROR-property", 
                "isClassProperty": true, 
                "name": "ERROR", 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "since": "1.7", 
                "type": "Number", 
                "type_jsca": "Number", 
                "value": "<p>state representing the error state of a socket</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.Socket.INITIALIZED-property", 
                "isClassProperty": true, 
                "name": "INITIALIZED", 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "since": "1.7", 
                "type": "Number", 
                "type_jsca": "Number", 
                "value": "<p>state representing the initialized state of a socket</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.Socket.LISTENING-property", 
                "isClassProperty": true, 
                "name": "LISTENING", 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "since": "1.7", 
                "type": "Number", 
                "type_jsca": "Number", 
                "value": "<p>state representing the listening state of a socket</p>"
            }
        ], 
        "returns": null, 
        "since": "1.7", 
        "subtype": null, 
        "type": "module"
    }, 
    "Titanium.Network.Socket.TCP": {
        "deprecated": null, 
        "description": "<p>TCP socket that implements the <a href=\"Titanium.IOStream-object.html\">Titanium.IOStream</a> interface.  Created by <a href=\"Titanium.Network.Socket.createTCP-method.html\">Titanium.Network.Socket.createTCP</a></p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "deprecated": false, 
                "filename": "Titanium.Network.Socket.TCP.accept-method", 
                "name": "accept", 
                "parameters": [
                    {
                        "description": "parameters that contain callbacks to be set on next accepted socket. The <tt>timeout</tt> member specifies timeout for connect and write operations.  The <tt>error</tt> member specifies a callback to be invoked if an error occurs.  See the <tt>error</tt> property for details of the callback.", 
                        "name": "params", 
                        "type": "Object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.7", 
                "value": "<p>Tells a LISTENING socket to accept a connection request at the top of a listener's request queue when one becomes available. Takes an argument, a box object which assigns callbacks to the created socket. Note that the connected callback is not called (the socket does not \"transition to\" the CONNECTED state - it's created in the CONNECTED state) on the newly created socket.  The accepted callback is called when a new connection is accepted as a result of calling accept().  If the socket is already flagged to accept the next connection, the existing accept options will be update to use the newly specified options object. Throws an exception if the socket is not in a LISTENING state</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.Socket.TCP.close-method", 
                "name": "close", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.7", 
                "value": "<p>Closes a socket. Throws exception if the socket is not in a CONNECTED or LISTENING state. Blocking</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.Socket.TCP.connect-method", 
                "name": "connect", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.7", 
                "value": "<p>Attempts to connect the socket to its host/port. Throws exception if the socket is in a CONNECTED or LISTENING state. Throws exception if a valid host and port has not been set on the proxy. Nonblocking; connection attempts are asynchronous</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.Socket.TCP.listen-method", 
                "name": "listen", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.7", 
                "value": "<p>Attempts to start listening on the socket's host/port. listen() call will attempt to listen on the specified host and/or port property for the socket if they are set. This function blocks execution and throws an exception on error (and sets the socket state to ERROR) but does not fire the error callback in this event. Throws exception if the socket is in a LISTENING or CONNECTED state</p>"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "android", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Network.Socket.TCP.accepted-property", 
                "isClassProperty": false, 
                "name": "accepted", 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "since": "1.7", 
                "type": "Function", 
                "type_jsca": "Function", 
                "value": "<p>The callback to be fired when a listener accepts a connection.  The callback parameter's <tt>socket</tt> member contains the socket that is receiving the connection, and its <tt>inbound</tt> member contains the connecting socket.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.Socket.TCP.connected-property", 
                "isClassProperty": false, 
                "name": "connected", 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "since": "1.7", 
                "type": "Function", 
                "type_jsca": "Function", 
                "value": "<p>The callback to be fired after the socket enters the \"connected\" state. Only invoked following a successful connect() call. The callback parameter's <tt>socket</tt> member contains the socket that connected.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.Socket.TCP.error-property", 
                "isClassProperty": false, 
                "name": "error", 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "since": "1.7", 
                "type": "Function", 
                "type_jsca": "Function", 
                "value": "<p>The callback to be fired after the socket enters the ERROR state.  The callback parameter's <tt>socket</tt> member contains the erring socket, and its <tt>error</tt> (string) and <tt>errorCode</tt> (number) members contain error information.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.Socket.TCP.host-property", 
                "isClassProperty": false, 
                "name": "host", 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "since": "1.7", 
                "type": "String", 
                "type_jsca": "String", 
                "value": "<p>The host to connect to or listen on. Cannot be modified when not in the INITIALIZED state. Supports both IPv4 and IPv6</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.Socket.TCP.listenQueueSize-property", 
                "isClassProperty": false, 
                "name": "listenQueueSize", 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "since": "1.7", 
                "type": "Number", 
                "type_jsca": "Number", 
                "value": "<p>Max number of pending incoming connections to be allowed when listen() is called. Any incoming connections received while the max number of pending connections has been reached will be rejected.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.Socket.TCP.port-property", 
                "isClassProperty": false, 
                "name": "port", 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "since": "1.7", 
                "type": "Number", 
                "type_jsca": "Number", 
                "value": "<p>The port to connect to or listen on. Cannot be modified when not in the INITIALIZED state</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.Socket.TCP.state-property", 
                "isClassProperty": false, 
                "name": "state", 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "since": "1.7", 
                "type": "Number", 
                "type_jsca": "Number", 
                "value": "<p>current state of the socket</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.Socket.TCP.timeout-property", 
                "isClassProperty": false, 
                "name": "timeout", 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "since": "1.7", 
                "type": "Number", 
                "type_jsca": "Number", 
                "value": "<p>The timeout for connect() and all I/O write() operations. Cannot be modified when not in the INITIALIZED state</p>"
            }
        ], 
        "returns": null, 
        "since": "1.7", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.Network.TCPSocket": {
        "deprecated": null, 
        "description": "<p>DEPRECATED: USE <a href=\"Titanium.Network.Socket.TCP.html\">Titanium.Network.Socket.TCP</a> WHERE POSSIBLE.  The TCPSocket instance returned from <a href=\"Titanium.Network.createTCPSocket-method.html\">Titanium.Network.createTCPSocket</a>.  This object represents a socket which either listens locally on the device for connections, or connects to a remote machine.</p>", 
        "events": [
            {
                "filename": "Titanium.Network.TCPSocket.read-event", 
                "name": "read", 
                "properties": {
                    "data": "<p>a blob representing the data read, can be interpreted via toString</p>", 
                    "from": "<p>the reference for the socket that data was retrieved from</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>new data was read off the socket</p>"
            }, 
            {
                "filename": "Titanium.Network.TCPSocket.readError-event", 
                "name": "readError", 
                "properties": {
                    "code": "<p>the BSD socket error code</p>", 
                    "error": "<p>a description of the error</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>an error occured when reading</p>"
            }, 
            {
                "filename": "Titanium.Network.TCPSocket.writeError-event", 
                "name": "writeError", 
                "properties": {
                    "code": "<p>the BSD socket error code</p>", 
                    "error": "<p>a description of the error</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>an error occured when writing</p>"
            }
        ], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.Network.TCPSocket.close-method", 
                "name": "close", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2.0", 
                "value": "<p>close the socket</p>"
            }, 
            {
                "filename": "Titanium.Network.TCPSocket.connect-method", 
                "name": "connect", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2.0", 
                "value": "<p>connect the scocket to a TCP server</p>"
            }, 
            {
                "filename": "Titanium.Network.TCPSocket.listen-method", 
                "name": "listen", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2.0", 
                "value": "<p>set up the socket to receive connections</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.TCPSocket.write-method", 
                "name": "write", 
                "parameters": [
                    {
                        "description": "either a string or blob object representing the data to be transferred", 
                        "name": "data", 
                        "type": "object,string"
                    }, 
                    {
                        "description": "the socket reference to send the data to.  Default is to send to all connected sockets", 
                        "name": "sendTo", 
                        "type": "int"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2.0", 
                "value": "<p>write data to the socket, if the mode is WRITE_MODE or READ_WRITE_MODE</p>"
            }
        ], 
        "notes": "<p>Sockets are nontrivial; it is recommended that anyone using them be familiar with the basics of BSD sockets.  All sockets use TCP connections, and are asynchronous for read operations, so your program should be ready to receive 'read' events at any point.  Socket references cannot be transferred to socket objects, and vice-versa - socket references are an internal mechanism which is used only to determine which sockets to send data to and read data from.  For listening sockets, it is highly recommended that you use the <a href=\"Titanium.Network.INADDR_ANY-property.html\">Titanium.Network.INADDR_ANY</a> constant as the host name.  If a window containing a socket is closed, the socket MUST be closed also unless you intend to continue to receive data, otherwise the socket will consume resources (and potentially cause conflicts with opening the window again, if a listener) until the program is restarted.  Be aware of the differences between the listen() and connect() functions; attempting to use one when you mean the other may result in errors, unpredictable behavior, or both.</p>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Network.TCPSocket.hostName-property", 
                "isClassProperty": false, 
                "name": "hostName", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2.0", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the host name to connect to.  Must be <a href=\"Titanium.Network.INADDR_ANY-property.html\">Titanium.Network.INADDR_ANY</a> or an identifier for the local device in order to listen</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.TCPSocket.isValid-property", 
                "isClassProperty": false, 
                "name": "isValid", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2.0", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>whether or not the socket is valid</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.TCPSocket.mode-property", 
                "isClassProperty": false, 
                "name": "mode", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2.0", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the socket's mode</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.TCPSocket.port-property", 
                "isClassProperty": false, 
                "name": "port", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2.0", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the port to connect/listen on</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Network.TCPSocket.stripTerminator-property", 
                "isClassProperty": false, 
                "name": "stripTerminator", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2.0", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>strip terminating null character when sending string data; default is false</p>"
            }
        ], 
        "returns": null, 
        "since": "1.2.0", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.Platform": {
        "deprecated": null, 
        "description": "<p>The top level Platform module.  The Platform module is used accessing the device's platform\nrelated functionality.</p>", 
        "events": [
            {
                "filename": "Titanium.Platform.battery-event", 
                "name": "battery", 
                "properties": {
                    "level": "<p>the new battery level</p>", 
                    "source": "the source object that fired the event", 
                    "state": "<p>the new battery state</p>", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>fired when the battery state changes.  the battery state changes are only tracked on iPhone/iPad at 5% increments.</p>"
            }
        ], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.Platform.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Platform.canOpenURL-method", 
                "name": "canOpenURL", 
                "parameters": [
                    {
                        "description": "the url to check", 
                        "name": "url", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>returns whether or not a system URL can be opened. iOS only</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Platform.createUUID-method", 
                "name": "createUUID", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "string", 
                "since": "0.1", 
                "value": "<p>create a globally unique identifier</p>"
            }, 
            {
                "filename": "Titanium.Platform.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Platform.openURL-method", 
                "name": "openURL", 
                "parameters": [
                    {
                        "description": "the url to open", 
                        "name": "url", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "<p>open a URL in the system default manner</p>"
            }, 
            {
                "filename": "Titanium.Platform.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.1", 
                "value": "remove a previously added event listener"
            }
        ], 
        "notes": null, 
        "objects": [
            "Titanium.Platform.DisplayCaps"
        ], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Platform.BATTERY_STATE_CHARGING-property", 
                "isClassProperty": true, 
                "name": "BATTERY_STATE_CHARGING", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the device is plugged in and currently being charged</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Platform.BATTERY_STATE_FULL-property", 
                "isClassProperty": true, 
                "name": "BATTERY_STATE_FULL", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the battery is fully charged</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Platform.BATTERY_STATE_UNKNOWN-property", 
                "isClassProperty": true, 
                "name": "BATTERY_STATE_UNKNOWN", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the battery state is unknown or not monitoring is not enabled</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Platform.BATTERY_STATE_UNPLUGGED-property", 
                "isClassProperty": true, 
                "name": "BATTERY_STATE_UNPLUGGED", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the device is unplugged</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Platform.address-property", 
                "isClassProperty": false, 
                "name": "address", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the ip address that the device reports (only applicable on WIFI network)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Platform.architecture-property", 
                "isClassProperty": false, 
                "name": "architecture", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the processor architecture that the device reports</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Platform.availableMemory-property", 
                "isClassProperty": false, 
                "name": "availableMemory", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "double", 
                "type_jsca": "double", 
                "value": "<p>return the amount of memory available on the device in bytes</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Platform.batteryLevel-property", 
                "isClassProperty": false, 
                "name": "batteryLevel", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>the current device battery level. this property is only accessible if <tt>batteryMonitoring</tt> is enabled. on iPhone, this level only changes at 5% intervals.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Platform.batteryMonitoring-property", 
                "isClassProperty": false, 
                "name": "batteryMonitoring", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean to indicate if battery monitoring is enabled</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Platform.batteryState-property", 
                "isClassProperty": false, 
                "name": "batteryState", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant that represents the state of the battery. this property is only accessible if <tt>batteryMonitoring</tt> is enabled</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Platform.displayCaps-property", 
                "isClassProperty": false, 
                "name": "displayCaps", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>return the DisplayCaps object for platform</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Platform.id-property", 
                "isClassProperty": false, 
                "name": "id", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the unique id of the device</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Platform.locale-property", 
                "isClassProperty": false, 
                "name": "locale", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the primary language of the device that the user has enabled</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Platform.macaddress-property", 
                "isClassProperty": false, 
                "name": "macaddress", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>this property will return a unique identifier for the device</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Platform.model-property", 
                "isClassProperty": false, 
                "name": "model", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the model of the phone that the device reports</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Platform.name-property", 
                "isClassProperty": false, 
                "name": "name", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the name of the platform returned by the device</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Platform.netmask-property", 
                "isClassProperty": false, 
                "name": "netmask", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the network mask that the device reports (only applicable on WIFI network)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Platform.osname-property", 
                "isClassProperty": false, 
                "name": "osname", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the shortname of the operating system. for example, on an iPhone, will return <tt>iphone</tt>, iPad will return <tt>ipad</tt> and Android will return <tt>android</tt>.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Platform.ostype-property", 
                "isClassProperty": false, 
                "name": "ostype", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the OS architecture, such as 32 bit</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Platform.processorCount-property", 
                "isClassProperty": false, 
                "name": "processorCount", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the number of processors the device reports</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Platform.username-property", 
                "isClassProperty": false, 
                "name": "username", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the username of the device, if set</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Platform.version-property", 
                "isClassProperty": false, 
                "name": "version", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.1", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the version of the platform returned by the device</p>"
            }
        ], 
        "returns": null, 
        "since": "0.1", 
        "subtype": null, 
        "type": "module"
    }, 
    "Titanium.Platform.DisplayCaps": {
        "deprecated": null, 
        "description": "<p>The Display Caps object returned by the <a href=\"Titanium.Platform.displayCaps.html\">Titanium.Platform.displayCaps</a> property.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [], 
        "notes": "<p>On iPhone, the <tt>density</tt> property will return <tt>high</tt> for retina devices and <tt>medium</tt> otherwise, the <tt>dpi</tt> property will return <tt>160</tt>. For iPad, the <tt>density</tt> property will return <tt>medium</tt> and the <tt>dpi</tt> property will return <tt>130</tt>.  For Android, these values are device specific.</p>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Platform.DisplayCaps.density-property", 
                "isClassProperty": false, 
                "name": "density", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>returns the density property of the display device.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Platform.DisplayCaps.dpi-property", 
                "isClassProperty": false, 
                "name": "dpi", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the DPI of the display device.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Platform.DisplayCaps.platformHeight-property", 
                "isClassProperty": false, 
                "name": "platformHeight", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>the height of the device screen</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Platform.DisplayCaps.platformWidth-property", 
                "isClassProperty": false, 
                "name": "platformWidth", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>the width of the device screen</p>"
            }
        ], 
        "returns": null, 
        "since": "0.8", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.Stream": {
        "deprecated": null, 
        "description": "<p>Stream module containing stream utility methods</p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.Stream.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.7", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Stream.createStream-method", 
                "name": "createStream", 
                "parameters": [
                    {
                        "description": "creation arguments, which are: <tt>source</tt>, a <a href=\"Titanium.Buffer-object.html\">Titanium.Buffer</a> or <a href=\"Titanium.Blob-object.html\">Titanium.Blob</a> on which to base the stream.  <tt>mode</tt>,  mode for the stream to be opened in, which can be <a href=\"Titanium.Stream.MODE_READ-property.html\">Titanium.Stream.MODE_READ</a>,  <a href=\"Titanium.Stream.MODE_WRITE-property.html\">Titanium.Stream.MODE_WRITE</a> or <a href=\"Titanium.Stream.MODE_APPEND-property.html\">Titanium.Stream.MODE_APPEND</a>.", 
                        "name": "params", 
                        "type": "Object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "<a href=\"Titanium.IOStream-object.html\">Titanium.IOStream</a>", 
                "since": "1.7", 
                "value": "<p>Creates stream from specified container.  Returns <a href=\"Titanium.BufferStream-object.html\">Titanium.BufferStream</a> or <a href=\"Titanium.BlobStream-object.html\">Titanium.BlobStream</a> depending on whether a Buffer or Blob is provided as the 'source' property in params.  Write and append mode only applies to Buffer as Blob is read only.</p>"
            }, 
            {
                "filename": "Titanium.Stream.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.7", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Stream.pump-method", 
                "name": "pump", 
                "parameters": [
                    {
                        "description": "Stream to pump from", 
                        "name": "inputStream", 
                        "type": "<a href=\"Titanium.IOStream-object.html\">Titanium.IOStream</a>"
                    }, 
                    {
                        "description": "handler method that will receive the pumped data.  The function takes a single parameter, which in turn contains the following members: <tt>source</tt>, the stream being read from.  <tt>buffer</tt>, the <a href=\"Titanium.Buffer-object.html\">Titanium.Buffer</a> holding the data currently being pumped to the handler method (i.e., the current chunk).  <tt>bytesProcessed</tt>, the number of bytes in the current pump segment.  <tt>totalBytesProcessed</tt>, total number of bytes processed in the overall pump operation so far.  <tt>errorState</tt>, an error state if any.  <tt>errorDescription</tt>, an error description if any.", 
                        "name": "handler", 
                        "type": "Function"
                    }, 
                    {
                        "description": "max size of data to pump from inputStream to the handler method at once", 
                        "name": "maxChunkSize", 
                        "type": "Number"
                    }, 
                    {
                        "description": "true is pump operation should be async, false is not.  (Optional, default is false).", 
                        "name": "isAsync", 
                        "type": "Boolean"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.7", 
                "value": "<p>Pumps data from input stream to handler method</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Stream.read-method", 
                "name": "read", 
                "parameters": [
                    {
                        "description": "Stream to read from", 
                        "name": "sourceStream", 
                        "type": "<a href=\"Titanium.IOStream-object.html\">Titanium.IOStream</a>"
                    }, 
                    {
                        "description": "Buffer to read into", 
                        "name": "buffer", 
                        "type": "<a href=\"Titanium.Buffer-object.html\">Titanium.Buffer</a>"
                    }, 
                    {
                        "description": "(optional) offset to start reading buffer data from.  Default = 0.", 
                        "name": "offset", 
                        "type": "Number"
                    }, 
                    {
                        "description": "(optional) length of data to read from buffer.  Default is buffer length.", 
                        "name": "length", 
                        "type": "Number"
                    }, 
                    {
                        "description": "called with result of the read operation.  Callback parameter has these members: <tt>source</tt>, the stream being read.  <tt>bytesProcessed</tt>, the number of bytes read.  <tt>errorState</tt>, an error state if any.  <tt>errorDescription</tt>, an error description if any.", 
                        "name": "resultsCallback", 
                        "type": "Function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.7", 
                "value": "<p>Async version of read on <a href=\"Titanium.IOStream-object.html\">Titanium.IOStream</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Stream.readAll-method", 
                "name": "readAll", 
                "parameters": [
                    {
                        "description": "Stream to read from", 
                        "name": "sourceStream", 
                        "type": "<a href=\"Titanium.IOStream-object.html\">Titanium.IOStream</a>"
                    }, 
                    {
                        "description": "Buffer to read into.  OPTIONAL: use only if you want an asynchronous read.", 
                        "name": "buffer", 
                        "type": "<a href=\"Titanium.Buffer-object.html\">Titanium.Buffer</a>"
                    }, 
                    {
                        "description": "called with result of the read operation.  OPTIONAL: use only if you want an asynchronous read.  Callback parameter has these members: <tt>source</tt>, the stream being read.  <tt>bytesProcessed</tt>, the number of bytes read.  <tt>errorState</tt>, an error state if any.  <tt>errorDescription</tt>, an error description if any.", 
                        "name": "resultsCallback", 
                        "type": "Function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.7", 
                "value": "<p>reads all data from <a href=\"Titanium.IOStream-object.html\">Titanium.IOStream</a>.  If you pass a buffer and callback, the read will be asynchronous and <tt>readAll</tt> won't return anything.  If you don't pass a buffer and callback, the read will be synchronous and a <a href=\"Titanium.Buffer-object.html\">Titanium.Buffer</a> with the read data will be returned.</p>"
            }, 
            {
                "filename": "Titanium.Stream.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.7", 
                "value": "remove a previously added event listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Stream.write-method", 
                "name": "write", 
                "parameters": [
                    {
                        "description": "Stream to write to", 
                        "name": "outputStream", 
                        "type": "<a href=\"Titanium.IOStream-object.html\">Titanium.IOStream</a>"
                    }, 
                    {
                        "description": "Buffer to write from", 
                        "name": "buffer", 
                        "type": "<a href=\"Titanium.Buffer-object.html\">Titanium.Buffer</a>"
                    }, 
                    {
                        "description": "offset to start writing buffer data from. (Optional, default is 0).", 
                        "name": "offset", 
                        "type": "Number"
                    }, 
                    {
                        "description": "length of data to write from buffer.  (Optional, default is buffer.length).", 
                        "name": "length", 
                        "type": "Number"
                    }, 
                    {
                        "description": "called with result of the write operation. Callback parameter has these members: <tt>source</tt>, the stream being written to.  <tt>bytesProcessed</tt>, the number of bytes written.  <tt>errorState</tt>, an error state if any.  <tt>errorDescription</tt>, an error description if any.", 
                        "name": "resultsCallback", 
                        "type": "Function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.7", 
                "value": "<p>Async version of write on <a href=\"Titanium.IOStream-object.html\">Titanium.IOStream</a> that takes offset and length</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Stream.writeStream-method", 
                "name": "writeStream", 
                "parameters": [
                    {
                        "description": "Stream to read from", 
                        "name": "inputStream", 
                        "type": "<a href=\"Titanium.IOStream-object.html\">Titanium.IOStream</a>"
                    }, 
                    {
                        "description": "Stream to write to", 
                        "name": "outputStream", 
                        "type": "<a href=\"Titanium.IOStream-object.html\">Titanium.IOStream</a>"
                    }, 
                    {
                        "description": "max size of data to write from inputStream to ouputStream at once", 
                        "name": "maxChunkSize", 
                        "type": "Number"
                    }, 
                    {
                        "description": "called with result of the writeStream operation.  (OPTIONAL: use only if you want the write operation to be asynchronous).  The callback parameter has these members: <tt>fromStream</tt>, the stream being read from.  <tt>toStream</tt>, the stream being written to.  <tt>bytesProcessed</tt>, the number of bytes read and written.  <tt>errorState</tt>, an error state if any.  <tt>errorDescription</tt>, an error description if any.", 
                        "name": "resultsCallback", 
                        "type": "Function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.7", 
                "value": "<p>Writes all data from input stream to output stream.  Pass a callback function as the final argument if you wish for the write operation to be asynchronous.  The synchronous version will return a number indicating the number of bytes written.</p>"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "android", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.Stream.MODE_APPEND-property", 
                "isClassProperty": true, 
                "name": "MODE_APPEND", 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "since": "1.7", 
                "type": "Number", 
                "type_jsca": "Number", 
                "value": "<p>append mode value.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Stream.MODE_READ-property", 
                "isClassProperty": true, 
                "name": "MODE_READ", 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "since": "1.7", 
                "type": "Number", 
                "type_jsca": "Number", 
                "value": "<p>read only mode value</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Stream.MODE_WRITE-property", 
                "isClassProperty": true, 
                "name": "MODE_WRITE", 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "since": "1.7", 
                "type": "Number", 
                "type_jsca": "Number", 
                "value": "<p>write mode value</p>"
            }
        ], 
        "returns": null, 
        "since": "1.7", 
        "subtype": null, 
        "type": "module"
    }, 
    "Titanium.UI": {
        "deprecated": null, 
        "description": "<p>The main <a href=\"Titanium.UI-module.html\">Titanium.UI</a> module.  The UI module is responsible for native user-interface components and interaction inside Titanium.  The goal of the UI module is to provide a native experience along with native performance by compiling Javascript code into their native counterparts as part of the build process. </p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.UI.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.4", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.create2DMatrix-method", 
                "name": "create2DMatrix", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.2DMatrix.html\">Titanium.UI.2DMatrix</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.2DMatrix.html\">Titanium.UI.2DMatrix</a>"
            }, 
            {
                "filename": "Titanium.UI.create3DMatrix-method", 
                "name": "create3DMatrix", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.3DMatrix.html\">Titanium.UI.3DMatrix</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.3DMatrix.html\">Titanium.UI.3DMatrix</a>"
            }, 
            {
                "filename": "Titanium.UI.createActivityIndicator-method", 
                "name": "createActivityIndicator", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.ActivityIndicator.html\">Titanium.UI.ActivityIndicator</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.ActivityIndicator.html\">Titanium.UI.ActivityIndicator</a>"
            }, 
            {
                "filename": "Titanium.UI.createAlertDialog-method", 
                "name": "createAlertDialog", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.AlertDialog.html\">Titanium.UI.AlertDialog</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.AlertDialog.html\">Titanium.UI.AlertDialog</a>"
            }, 
            {
                "filename": "Titanium.UI.createAnimation-method", 
                "name": "createAnimation", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.Animation.html\">Titanium.UI.Animation</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.Animation.html\">Titanium.UI.Animation</a>"
            }, 
            {
                "filename": "Titanium.UI.createButton-method", 
                "name": "createButton", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.Button.html\">Titanium.UI.Button</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.Button.html\">Titanium.UI.Button</a>"
            }, 
            {
                "filename": "Titanium.UI.createButtonBar-method", 
                "name": "createButtonBar", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.ButtonBar.html\">Titanium.UI.ButtonBar</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.ButtonBar.html\">Titanium.UI.ButtonBar</a>"
            }, 
            {
                "filename": "Titanium.UI.createCoverFlowView-method", 
                "name": "createCoverFlowView", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.CoverFlowView.html\">Titanium.UI.CoverFlowView</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.CoverFlowView.html\">Titanium.UI.CoverFlowView</a>"
            }, 
            {
                "filename": "Titanium.UI.createDashboardItem-method", 
                "name": "createDashboardItem", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.DashboardItem.html\">Titanium.UI.DashboardItem</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.DashboardItem.html\">Titanium.UI.DashboardItem</a>"
            }, 
            {
                "filename": "Titanium.UI.createDashboardView-method", 
                "name": "createDashboardView", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.DashboardView.html\">Titanium.UI.DashboardView</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.DashboardView.html\">Titanium.UI.DashboardView</a>"
            }, 
            {
                "filename": "Titanium.UI.createEmailDialog-method", 
                "name": "createEmailDialog", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.EmailDialog.html\">Titanium.UI.EmailDialog</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.EmailDialog.html\">Titanium.UI.EmailDialog</a>"
            }, 
            {
                "filename": "Titanium.UI.createImageView-method", 
                "name": "createImageView", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.ImageView.html\">Titanium.UI.ImageView</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.ImageView.html\">Titanium.UI.ImageView</a>"
            }, 
            {
                "filename": "Titanium.UI.createLabel-method", 
                "name": "createLabel", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.Label.html\">Titanium.UI.Label</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.Label.html\">Titanium.UI.Label</a>"
            }, 
            {
                "filename": "Titanium.UI.createOptionDialog-method", 
                "name": "createOptionDialog", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.OptionDialog.html\">Titanium.UI.OptionDialog</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.OptionDialog.html\">Titanium.UI.OptionDialog</a>"
            }, 
            {
                "filename": "Titanium.UI.createPicker-method", 
                "name": "createPicker", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.Picker.html\">Titanium.UI.Picker</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.Picker.html\">Titanium.UI.Picker</a>"
            }, 
            {
                "filename": "Titanium.UI.createPickerColumn-method", 
                "name": "createPickerColumn", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.PickerColumn.html\">Titanium.UI.PickerColumn</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.PickerColumn.html\">Titanium.UI.PickerColumn</a>"
            }, 
            {
                "filename": "Titanium.UI.createPickerRow-method", 
                "name": "createPickerRow", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.PickerRow.html\">Titanium.UI.PickerRow</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.PickerRow.html\">Titanium.UI.PickerRow</a>"
            }, 
            {
                "filename": "Titanium.UI.createProgressBar-method", 
                "name": "createProgressBar", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.ProgressBar.html\">Titanium.UI.ProgressBar</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.ProgressBar.html\">Titanium.UI.ProgressBar</a>"
            }, 
            {
                "filename": "Titanium.UI.createScrollView-method", 
                "name": "createScrollView", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.ScrollView.html\">Titanium.UI.ScrollView</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.ScrollView.html\">Titanium.UI.ScrollView</a>"
            }, 
            {
                "filename": "Titanium.UI.createScrollableView-method", 
                "name": "createScrollableView", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.ScrollableView.html\">Titanium.UI.ScrollableView</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.ScrollableView.html\">Titanium.UI.ScrollableView</a>"
            }, 
            {
                "filename": "Titanium.UI.createSearchBar-method", 
                "name": "createSearchBar", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.SearchBar.html\">Titanium.UI.SearchBar</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.SearchBar.html\">Titanium.UI.SearchBar</a>"
            }, 
            {
                "filename": "Titanium.UI.createSlider-method", 
                "name": "createSlider", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.Slider.html\">Titanium.UI.Slider</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.Slider.html\">Titanium.UI.Slider</a>"
            }, 
            {
                "filename": "Titanium.UI.createSwitch-method", 
                "name": "createSwitch", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.Switch.html\">Titanium.UI.Switch</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.Switch.html\">Titanium.UI.Switch</a>"
            }, 
            {
                "filename": "Titanium.UI.createTab-method", 
                "name": "createTab", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.Tab.html\">Titanium.UI.Tab</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.Tab.html\">Titanium.UI.Tab</a>"
            }, 
            {
                "filename": "Titanium.UI.createTabGroup-method", 
                "name": "createTabGroup", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.TabGroup.html\">Titanium.UI.TabGroup</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.TabGroup.html\">Titanium.UI.TabGroup</a>"
            }, 
            {
                "filename": "Titanium.UI.createTabbedBar-method", 
                "name": "createTabbedBar", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.TabbedBar.html\">Titanium.UI.TabbedBar</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.TabbedBar.html\">Titanium.UI.TabbedBar</a>"
            }, 
            {
                "filename": "Titanium.UI.createTableView-method", 
                "name": "createTableView", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.TableView.html\">Titanium.UI.TableView</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.TableView.html\">Titanium.UI.TableView</a>"
            }, 
            {
                "filename": "Titanium.UI.createTableViewRow-method", 
                "name": "createTableViewRow", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.TableViewRow.html\">Titanium.UI.TableViewRow</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.TableViewRow.html\">Titanium.UI.TableViewRow</a>"
            }, 
            {
                "filename": "Titanium.UI.createTableViewSection-method", 
                "name": "createTableViewSection", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.TableViewSection.html\">Titanium.UI.TableViewSection</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.TableViewSection.html\">Titanium.UI.TableViewSection</a>"
            }, 
            {
                "filename": "Titanium.UI.createTextArea-method", 
                "name": "createTextArea", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.TextArea.html\">Titanium.UI.TextArea</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.TextArea.html\">Titanium.UI.TextArea</a>"
            }, 
            {
                "filename": "Titanium.UI.createTextField-method", 
                "name": "createTextField", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.TextField.html\">Titanium.UI.TextField</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.TextField.html\">Titanium.UI.TextField</a>"
            }, 
            {
                "filename": "Titanium.UI.createToolbar-method", 
                "name": "createToolbar", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.Toolbar.html\">Titanium.UI.Toolbar</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.Toolbar.html\">Titanium.UI.Toolbar</a>"
            }, 
            {
                "filename": "Titanium.UI.createView-method", 
                "name": "createView", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.View.html\">Titanium.UI.View</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.View.html\">Titanium.UI.View</a>"
            }, 
            {
                "filename": "Titanium.UI.createWebView-method", 
                "name": "createWebView", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.WebView.html\">Titanium.UI.WebView</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.WebView.html\">Titanium.UI.WebView</a>"
            }, 
            {
                "filename": "Titanium.UI.createWindow-method", 
                "name": "createWindow", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.Window.html\">Titanium.UI.Window</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.Window.html\">Titanium.UI.Window</a>"
            }, 
            {
                "filename": "Titanium.UI.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.4", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.4", 
                "value": "remove a previously added event listener"
            }
        ], 
        "notes": "<h3 id=\"design\">Design</h3>\n<p>The UI module is broken down into 3 major area:</p>\n<ul>\n<li><strong>Views</strong> - <a href=\"Titanium.UI.View-object.html\">Views</a> are containers that host visual elements such as controls or other views.  Views can have their properties customized, such as their border color and radius, can fire events such as swipe events or touches, and can optionally contain a hierarchy or other views as children. In Titanium, most views are specialized to perform both a visual function and set of interaction behaviors such as <a href=\"Titanium.UI.TableView-object.html\">Table View</a> or <a href=\"Titanium.UI.CoverFlowView-object.html\">Coverflow View</a>.  Views are always named with the suffix <tt>View</tt>.</li>\n<li><strong>Controls</strong> - controls, or sometimes referred as widgets, are visual elements such as <a href=\"Titanium.UI.Slider-object.html\">sliders</a>, <a href=\"Titanium.UI.Button-object.html\">buttons</a> and <a href=\"Titanium.UI.Switch-object.html\">switches</a>. They provide a visual element which has a defined behavior and typical have special configuration and special events.  Controls themselves are views and also inherit a views properties, functions and events.</li>\n<li><strong>Windows</strong> - <a href=\"Titanium.UI.Window-object.html\">Windows</a> are typically top-level visual constructs that are the main part of your interface. An application will always have at least one window and windows can take different shapes and sizes, can have display and interaction properties such as fullscreen or modal and can be customized, such as changing their opacity or background color. Windows themselves are views and also inherit a views properties, functions and events. There are a few specialization of Windows such as a <a href=\"Titanium.UI.TabGroup-object.html\">Tab Group</a> which offer additional behavior beyond the basic Window.</li>\n</ul>\n<p>Titanium uses the <a href=\"http://en.wikipedia.org/wiki/Factory_method_pattern\">Factory Pattern</a> for constructing objects and a general naming pattern for APIs.  For example, to construct a <a href=\"Titanium.UI.AlertDialog-object.html\">Alert Dialog</a>, you call the method <a href=\"Titanium.UI.createAlertDialog.html\">Titanium.UI.createAlertDialog</a>.  To create a <a href=\"Titanium.UI.TextArea-object.html\">TextArea</a>, you call the method <a href=\"Titanium.UI.createTextArea.html\">Titanium.UI.createTextArea</a>.  Once an object is created, it will be available until it goes out of scope.</p>\n<h3 id=\"optimizations\">Optimizations</h3>\n<p>UI objects are optimized by Titanium to not be realized into the drawing context and placed into the device UI surface until needed.  That means that you can create UI objects, set their properties and add them to their hierarchy without much worry about memory or performance.  When the native drawing surface needs to render a specific view or control, Titanium will automatically create the view as needed.  Additionally, Titanium is optimized to also release memory once the view is no longer needed, on screen or in low memory situations.  However, it's a good idea to help Titanium along in certain cases where you are no longer using objects.  For example, you should call <tt>close</tt> on a <a href=\"Titanium.UI.Window-object.html\">Window</a> instance when you are no longer using it.  You can safely call <tt>open</tt> on the <a href=\"Titanium.UI.Window-object.html\">Window</a> again to re-open it.<br>\n</p>\n<h3 id=\"global_context_and_threading\">Global Context and Threading</h3>\n<p>Be careful with the objects that are created in <tt>app.js</tt> but only used once.  Since the <tt>app.js</tt> context is global and generally is not garbage collected until the application exits, you should think about the design of your application as it relates to this fact.  <a href=\"Titanium.UI.Window-object.html\">Window</a> objects that are opened up with the <tt>url</tt> property to another Javascript file contain a nice way to decompose your application into smaller units.  The other benefit is that when a <a href=\"Titanium.UI.Window-object.html\">Window</a> is closed, its resources can be immediately cleaned up, saving resources such as memory and CPU.  Additionally, <a href=\"Titanium.UI.Window-object.html\">Window</a> objects run in a separate Javascript context and Thread. While all UI processing is done on the main UI thread, other processing inside a Window or the <tt>app.js</tt> that does not have UI interaction will run in its own thread.</p>\n<h3 id=\"portability\">Portability</h3>\n<p>Titanium components are designed to be portable across as many platforms as it supports.  However, there are cases where a device either does not support a specific feature or capability or where it support additional functionality.  For cases where the device OS supports capabilities that other platforms do not, we attempt to place those capabilities in a separate namespace, such as <a href=\"Titanium.UI.iPhone-module.html\">Titanium.UI.iPhone</a>. However, in cases where the control is in a common namespace and support additional features, we continue to place that functionality directly on the object.</p>", 
        "objects": [
            "Titanium.UI.2DMatrix", 
            "Titanium.UI.3DMatrix", 
            "Titanium.UI.ActivityIndicator", 
            "Titanium.UI.AlertDialog", 
            "Titanium.UI.Animation", 
            "Titanium.UI.Button", 
            "Titanium.UI.ButtonBar", 
            "Titanium.UI.CoverFlowView", 
            "Titanium.UI.DashboardItem", 
            "Titanium.UI.DashboardView", 
            "Titanium.UI.EmailDialog", 
            "Titanium.UI.ImageView", 
            "Titanium.UI.Label", 
            "Titanium.UI.OptionDialog", 
            "Titanium.UI.Picker", 
            "Titanium.UI.PickerColumn", 
            "Titanium.UI.PickerRow", 
            "Titanium.UI.ProgressBar", 
            "Titanium.UI.ScrollView", 
            "Titanium.UI.ScrollableView", 
            "Titanium.UI.SearchBar", 
            "Titanium.UI.Slider", 
            "Titanium.UI.Switch", 
            "Titanium.UI.Tab", 
            "Titanium.UI.TabGroup", 
            "Titanium.UI.TabbedBar", 
            "Titanium.UI.TableView", 
            "Titanium.UI.TableViewRow", 
            "Titanium.UI.TableViewSection", 
            "Titanium.UI.TextArea", 
            "Titanium.UI.TextField", 
            "Titanium.UI.Toolbar", 
            "Titanium.UI.View", 
            "Titanium.UI.WebView", 
            "Titanium.UI.Window"
        ], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ANIMATION_CURVE_EASE_IN-property", 
                "isClassProperty": true, 
                "name": "ANIMATION_CURVE_EASE_IN", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>animation curve constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ANIMATION_CURVE_EASE_IN_OUT-property", 
                "isClassProperty": true, 
                "name": "ANIMATION_CURVE_EASE_IN_OUT", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>animation curve constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ANIMATION_CURVE_EASE_OUT-property", 
                "isClassProperty": true, 
                "name": "ANIMATION_CURVE_EASE_OUT", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>animation curve constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ANIMATION_CURVE_LINEAR-property", 
                "isClassProperty": true, 
                "name": "ANIMATION_CURVE_LINEAR", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>animation curve constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.AUTODETECT_ADDRESS-property", 
                "isClassProperty": true, 
                "name": "AUTODETECT_ADDRESS", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>text autodetection constant (iOS 4.0+)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.AUTODETECT_ALL-property", 
                "isClassProperty": true, 
                "name": "AUTODETECT_ALL", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>text autodetection constant (iOS)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.AUTODETECT_CALENDAR-property", 
                "isClassProperty": true, 
                "name": "AUTODETECT_CALENDAR", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>text autodetection constant (iOS 4.0+)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.AUTODETECT_LINK-property", 
                "isClassProperty": true, 
                "name": "AUTODETECT_LINK", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>text autodetection constant (iOS)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.AUTODETECT_NONE-property", 
                "isClassProperty": true, 
                "name": "AUTODETECT_NONE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>text autodetection constant (iOS)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.AUTODETECT_PHONE-property", 
                "isClassProperty": true, 
                "name": "AUTODETECT_PHONE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>text autodetection constant (iOS)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.BLEND_MODE_CLEAR-property", 
                "isClassProperty": true, 
                "name": "BLEND_MODE_CLEAR", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>image mode constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.BLEND_MODE_COLOR-property", 
                "isClassProperty": true, 
                "name": "BLEND_MODE_COLOR", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>image mode constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.BLEND_MODE_COLOR_BURN-property", 
                "isClassProperty": true, 
                "name": "BLEND_MODE_COLOR_BURN", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>image mode constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.BLEND_MODE_COLOR_DODGE-property", 
                "isClassProperty": true, 
                "name": "BLEND_MODE_COLOR_DODGE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>image mode constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.BLEND_MODE_COPY-property", 
                "isClassProperty": true, 
                "name": "BLEND_MODE_COPY", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>image mode constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.BLEND_MODE_DARKEN-property", 
                "isClassProperty": true, 
                "name": "BLEND_MODE_DARKEN", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>image mode constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.BLEND_MODE_DESTINATION_ATOP-property", 
                "isClassProperty": true, 
                "name": "BLEND_MODE_DESTINATION_ATOP", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>image mode constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.BLEND_MODE_DESTINATION_IN-property", 
                "isClassProperty": true, 
                "name": "BLEND_MODE_DESTINATION_IN", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>image mode constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.BLEND_MODE_DESTINATION_OUT-property", 
                "isClassProperty": true, 
                "name": "BLEND_MODE_DESTINATION_OUT", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>image mode constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.BLEND_MODE_DESTINATION_OVER-property", 
                "isClassProperty": true, 
                "name": "BLEND_MODE_DESTINATION_OVER", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>image mode constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.BLEND_MODE_DIFFERENCE-property", 
                "isClassProperty": true, 
                "name": "BLEND_MODE_DIFFERENCE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>image mode constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.BLEND_MODE_EXCLUSION-property", 
                "isClassProperty": true, 
                "name": "BLEND_MODE_EXCLUSION", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>image mode constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.BLEND_MODE_HARD_LIGHT-property", 
                "isClassProperty": true, 
                "name": "BLEND_MODE_HARD_LIGHT", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>image mode constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.BLEND_MODE_HUE-property", 
                "isClassProperty": true, 
                "name": "BLEND_MODE_HUE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>image mode constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.BLEND_MODE_LIGHTEN-property", 
                "isClassProperty": true, 
                "name": "BLEND_MODE_LIGHTEN", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>image mode constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.BLEND_MODE_LUMINOSITY-property", 
                "isClassProperty": true, 
                "name": "BLEND_MODE_LUMINOSITY", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>image mode constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.BLEND_MODE_MULTIPLY-property", 
                "isClassProperty": true, 
                "name": "BLEND_MODE_MULTIPLY", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>image mode constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.BLEND_MODE_NORMAL-property", 
                "isClassProperty": true, 
                "name": "BLEND_MODE_NORMAL", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>image mode constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.BLEND_MODE_OVERLAY-property", 
                "isClassProperty": true, 
                "name": "BLEND_MODE_OVERLAY", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>image mode constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.BLEND_MODE_PLUS_DARKER-property", 
                "isClassProperty": true, 
                "name": "BLEND_MODE_PLUS_DARKER", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>image mode constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.BLEND_MODE_PLUS_LIGHTER-property", 
                "isClassProperty": true, 
                "name": "BLEND_MODE_PLUS_LIGHTER", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>image mode constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.BLEND_MODE_SATURATION-property", 
                "isClassProperty": true, 
                "name": "BLEND_MODE_SATURATION", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>image mode constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.BLEND_MODE_SCREEN-property", 
                "isClassProperty": true, 
                "name": "BLEND_MODE_SCREEN", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>image mode constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.BLEND_MODE_SOFT_LIGHT-property", 
                "isClassProperty": true, 
                "name": "BLEND_MODE_SOFT_LIGHT", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>image mode constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.BLEND_MODE_SOURCE_ATOP-property", 
                "isClassProperty": true, 
                "name": "BLEND_MODE_SOURCE_ATOP", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>image mode constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.BLEND_MODE_SOURCE_IN-property", 
                "isClassProperty": true, 
                "name": "BLEND_MODE_SOURCE_IN", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>image mode constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.BLEND_MODE_SOURCE_OUT-property", 
                "isClassProperty": true, 
                "name": "BLEND_MODE_SOURCE_OUT", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>image mode constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.BLEND_MODE_XOR-property", 
                "isClassProperty": true, 
                "name": "BLEND_MODE_XOR", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>image mode constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.FACE_DOWN-property", 
                "isClassProperty": true, 
                "name": "FACE_DOWN", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>orientation constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.FACE_UP-property", 
                "isClassProperty": true, 
                "name": "FACE_UP", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>orientation constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.INPUT_BORDERSTYLE_BEZEL-property", 
                "isClassProperty": true, 
                "name": "INPUT_BORDERSTYLE_BEZEL", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>input border style constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.INPUT_BORDERSTYLE_LINE-property", 
                "isClassProperty": true, 
                "name": "INPUT_BORDERSTYLE_LINE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>input border style constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.INPUT_BORDERSTYLE_NONE-property", 
                "isClassProperty": true, 
                "name": "INPUT_BORDERSTYLE_NONE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>input border style constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.INPUT_BORDERSTYLE_ROUNDED-property", 
                "isClassProperty": true, 
                "name": "INPUT_BORDERSTYLE_ROUNDED", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>input border style constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.INPUT_BUTTONMODE_ALWAYS-property", 
                "isClassProperty": true, 
                "name": "INPUT_BUTTONMODE_ALWAYS", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>input button mode constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.INPUT_BUTTONMODE_NEVER-property", 
                "isClassProperty": true, 
                "name": "INPUT_BUTTONMODE_NEVER", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>input button mode constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.INPUT_BUTTONMODE_ONBLUR-property", 
                "isClassProperty": true, 
                "name": "INPUT_BUTTONMODE_ONBLUR", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>input button mode constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.INPUT_BUTTONMODE_ONFOCUS-property", 
                "isClassProperty": true, 
                "name": "INPUT_BUTTONMODE_ONFOCUS", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>input button mode constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.KEYBOARD_APPEARANCE_ALERT-property", 
                "isClassProperty": true, 
                "name": "KEYBOARD_APPEARANCE_ALERT", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>textfield keyboard appearance constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.KEYBOARD_APPEARANCE_DEFAULT-property", 
                "isClassProperty": true, 
                "name": "KEYBOARD_APPEARANCE_DEFAULT", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>textfield keyboard appearance constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.KEYBOARD_ASCII-property", 
                "isClassProperty": true, 
                "name": "KEYBOARD_ASCII", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>textfield keyboard constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.KEYBOARD_DEFAULT-property", 
                "isClassProperty": true, 
                "name": "KEYBOARD_DEFAULT", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>textfield keyboard constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.KEYBOARD_EMAIL-property", 
                "isClassProperty": true, 
                "name": "KEYBOARD_EMAIL", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>textfield keyboard constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.KEYBOARD_NAMEPHONE_PAD-property", 
                "isClassProperty": true, 
                "name": "KEYBOARD_NAMEPHONE_PAD", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>textfield keyboard constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.KEYBOARD_NUMBERS_PUNCTUATION-property", 
                "isClassProperty": true, 
                "name": "KEYBOARD_NUMBERS_PUNCTUATION", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>textfield keyboard constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.KEYBOARD_NUMBER_PAD-property", 
                "isClassProperty": true, 
                "name": "KEYBOARD_NUMBER_PAD", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>textfield keyboard constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.KEYBOARD_PHONE_PAD-property", 
                "isClassProperty": true, 
                "name": "KEYBOARD_PHONE_PAD", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>textfield keyboard constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.KEYBOARD_URL-property", 
                "isClassProperty": true, 
                "name": "KEYBOARD_URL", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>textfield keyboard constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.LANDSCAPE_LEFT-property", 
                "isClassProperty": true, 
                "name": "LANDSCAPE_LEFT", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>orientation (home button on left) constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.LANDSCAPE_RIGHT-property", 
                "isClassProperty": true, 
                "name": "LANDSCAPE_RIGHT", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>orientation (home button on right) constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.NOTIFICATION_DURATION_LONG-property", 
                "isClassProperty": true, 
                "name": "NOTIFICATION_DURATION_LONG", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Duration of the notification</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.NOTIFICATION_DURATION_SHORT-property", 
                "isClassProperty": true, 
                "name": "NOTIFICATION_DURATION_SHORT", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Duration of the notification</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PICKER_TYPE_COUNT_DOWN_TIMER-property", 
                "isClassProperty": true, 
                "name": "PICKER_TYPE_COUNT_DOWN_TIMER", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>picker type constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PICKER_TYPE_DATE-property", 
                "isClassProperty": true, 
                "name": "PICKER_TYPE_DATE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>picker type constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PICKER_TYPE_DATE_AND_TIME-property", 
                "isClassProperty": true, 
                "name": "PICKER_TYPE_DATE_AND_TIME", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>picker type constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PICKER_TYPE_PLAIN-property", 
                "isClassProperty": true, 
                "name": "PICKER_TYPE_PLAIN", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>picker type constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PICKER_TYPE_TIME-property", 
                "isClassProperty": true, 
                "name": "PICKER_TYPE_TIME", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>picker type constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PORTRAIT-property", 
                "isClassProperty": true, 
                "name": "PORTRAIT", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>orientation (home button on bottom) constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.RETURNKEY_DEFAULT-property", 
                "isClassProperty": true, 
                "name": "RETURNKEY_DEFAULT", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>textfield return key constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.RETURNKEY_DONE-property", 
                "isClassProperty": true, 
                "name": "RETURNKEY_DONE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>textfield return key constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.RETURNKEY_EMERGENCY_CALL-property", 
                "isClassProperty": true, 
                "name": "RETURNKEY_EMERGENCY_CALL", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>textfield return key constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.RETURNKEY_GO-property", 
                "isClassProperty": true, 
                "name": "RETURNKEY_GO", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>textfield return key constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.RETURNKEY_GOOGLE-property", 
                "isClassProperty": true, 
                "name": "RETURNKEY_GOOGLE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>textfield return key constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.RETURNKEY_JOIN-property", 
                "isClassProperty": true, 
                "name": "RETURNKEY_JOIN", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>textfield return key constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.RETURNKEY_NEXT-property", 
                "isClassProperty": true, 
                "name": "RETURNKEY_NEXT", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>textfield return key constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.RETURNKEY_ROUTE-property", 
                "isClassProperty": true, 
                "name": "RETURNKEY_ROUTE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>textfield return key constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.RETURNKEY_SEARCH-property", 
                "isClassProperty": true, 
                "name": "RETURNKEY_SEARCH", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>textfield return key constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.RETURNKEY_SEND-property", 
                "isClassProperty": true, 
                "name": "RETURNKEY_SEND", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>textfield return key constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.RETURNKEY_YAHOO-property", 
                "isClassProperty": true, 
                "name": "RETURNKEY_YAHOO", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>textfield return key constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TEXT_ALIGNMENT_CENTER-property", 
                "isClassProperty": true, 
                "name": "TEXT_ALIGNMENT_CENTER", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>text align constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TEXT_ALIGNMENT_LEFT-property", 
                "isClassProperty": true, 
                "name": "TEXT_ALIGNMENT_LEFT", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>text align constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TEXT_ALIGNMENT_RIGHT-property", 
                "isClassProperty": true, 
                "name": "TEXT_ALIGNMENT_RIGHT", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>text align constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TEXT_AUTOCAPITALIZATION_ALL-property", 
                "isClassProperty": true, 
                "name": "TEXT_AUTOCAPITALIZATION_ALL", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>text capitalization constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TEXT_AUTOCAPITALIZATION_NONE-property", 
                "isClassProperty": true, 
                "name": "TEXT_AUTOCAPITALIZATION_NONE", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>text capitalization constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TEXT_AUTOCAPITALIZATION_SENTENCES-property", 
                "isClassProperty": true, 
                "name": "TEXT_AUTOCAPITALIZATION_SENTENCES", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>text capitalization constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TEXT_AUTOCAPITALIZATION_WORDS-property", 
                "isClassProperty": true, 
                "name": "TEXT_AUTOCAPITALIZATION_WORDS", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>text capitalization constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TEXT_VERTICAL_ALIGNMENT_BOTTOM-property", 
                "isClassProperty": true, 
                "name": "TEXT_VERTICAL_ALIGNMENT_BOTTOM", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>text vertical align constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TEXT_VERTICAL_ALIGNMENT_CENTER-property", 
                "isClassProperty": true, 
                "name": "TEXT_VERTICAL_ALIGNMENT_CENTER", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>text vertical align constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TEXT_VERTICAL_ALIGNMENT_TOP-property", 
                "isClassProperty": true, 
                "name": "TEXT_VERTICAL_ALIGNMENT_TOP", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>text vertical align constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.UNKNOWN-property", 
                "isClassProperty": true, 
                "name": "UNKNOWN", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>orientation constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.UPSIDE_PORTRAIT-property", 
                "isClassProperty": true, 
                "name": "UPSIDE_PORTRAIT", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>orientation (home button on top) constant</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.backgroundColor-property", 
                "isClassProperty": false, 
                "name": "backgroundColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>this sets the background color of the master UIView (when there are no windows/tab groups on it)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.backgroundImage-property", 
                "isClassProperty": false, 
                "name": "backgroundImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>path/url to an image file for setting a background for the master UIView (when there are no windows/tab groups on it).</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.currentWindow-property", 
                "isClassProperty": false, 
                "name": "currentWindow", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "<a href=\"Titanium.UI.Window.html\">Titanium.UI.Window</a>", 
                "type_jsca": "`Titanium.UI.Window`", 
                "value": "<p>The active window associated with the executing Javascript context.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.orientation-property", 
                "isClassProperty": false, 
                "name": "orientation", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>DEPRECATED.  To set an orientation, it is suggested to instead set <a href=\"Titanium.Window.orientationModes.html\">Titanium.Window.orientationModes</a> to the specific orientation desired.  When set, this will update the orientation of the current window to the specified orientation value</p>"
            }
        ], 
        "returns": null, 
        "since": "0.4", 
        "subtype": null, 
        "type": "module"
    }, 
    "Titanium.UI.2DMatrix": {
        "deprecated": null, 
        "description": "<p>The 2DMatrix is created by <a href=\"Titanium.UI.create2DMatrix.html\">Titanium.UI.create2DMatrix</a>.  The 2D Matrix is an object for holding values for an affine transformation matrix. A 2D matrix is used to rotate, scale, translate, or skew the objects in a two-dimensional space. A 2D matrix is represented by a 3 by 3 matrix. Because the third column is always (0,0,1), the data structure contains values for only the first two columns.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.UI.2DMatrix.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.2DMatrix.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.2DMatrix.invert-method", 
                "name": "invert", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "<p>Returns a matrix constructed by inverting an existing matrix</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.2DMatrix.multiply-method", 
                "name": "multiply", 
                "parameters": [
                    {
                        "description": "The second matrix. This matrix is concatenated to the matrix instance against which the function is invoked.  The result of this function is the first matrix multiplied by the second matrix. You might perform several multiplications in order to create a single matrix that contains the cumulative effects of several transformations. Note that matrix operations are not commutative - the order in which you concatenate matrices is important. That is, the result of multiplying matrix t1 by matrix t2 does not necessarily equal the result of multiplying matrix t2 by matrix t1.", 
                        "name": "t2", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.9", 
                "value": "<p>Returns a matrix constructed by combining two existing matrix.</p>"
            }, 
            {
                "filename": "Titanium.UI.2DMatrix.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "remove a previously added event listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.2DMatrix.rotate-method", 
                "name": "rotate", 
                "parameters": [
                    {
                        "description": "The angle, in degrees, by which to rotate the matrix. A positive value specifies counterclockwise rotation and a negative value specifies clockwise rotation.", 
                        "name": "angle", 
                        "type": "float"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.9", 
                "value": "<p>Returns a matrix constructed by rotating an existing matrix</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.2DMatrix.scale-method", 
                "name": "scale", 
                "parameters": [
                    {
                        "description": "The value by which to scale x values of the matrix", 
                        "name": "sx", 
                        "type": "float"
                    }, 
                    {
                        "description": "The value by which to scale y values of the matrix", 
                        "name": "sy", 
                        "type": "float"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.9", 
                "value": "<p>Returns a matrix constructed by scaling an existing matrix</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.2DMatrix.translate-method", 
                "name": "translate", 
                "parameters": [
                    {
                        "description": "The value by which to move x values with the matrix", 
                        "name": "tx", 
                        "type": "float"
                    }, 
                    {
                        "description": "The value by which to move y values with the matrix", 
                        "name": "ty", 
                        "type": "float"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.9", 
                "value": "<p>Returns a matrix constructed by translating an existing matrix</p>"
            }
        ], 
        "notes": "<p>You create an <tt>identity matrix</tt> by creating a 2D Matrix with an empty constructor.</p>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [], 
        "returns": null, 
        "since": "0.9", 
        "subtype": "proxy", 
        "type": "object"
    }, 
    "Titanium.UI.3DMatrix": {
        "deprecated": null, 
        "description": "<p>The 3DMatrix is created by <a href=\"Titanium.UI.create3DMatrix.html\">Titanium.UI.create3DMatrix</a>.  The 3D Matrix is an object for holding values for an affine transformation matrix. A 3D matrix is used to rotate, scale, translate, or skew the objects in a three-dimensional space. A 3D matrix is represented by a 4 by 4 matrix. Because the forth column is always (0,0,1), the data structure contains values for only the first three columns.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.UI.3DMatrix.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.3DMatrix.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.3DMatrix.invert-method", 
                "name": "invert", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "<p>Returns a matrix constructed by inverting an existing matrix</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.3DMatrix.multiply-method", 
                "name": "multiply", 
                "parameters": [
                    {
                        "description": "The second matrix. This matrix is concatenated to the matrix instance against which the function is invoked.  The result of this function is the first matrix multiplied by the second matrix. You might perform several multiplications in order to create a single matrix that contains the cumulative effects of several transformations. Note that matrix operations are not commutative - the order in which you concatenate matrices is important. That is, the result of multiplying matrix t1 by matrix t2 does not necessarily equal the result of multiplying matrix t2 by matrix t1.", 
                        "name": "t2", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.9", 
                "value": "<p>Returns a matrix constructed by combining two existing matrix.</p>"
            }, 
            {
                "filename": "Titanium.UI.3DMatrix.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "remove a previously added event listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.3DMatrix.rotate-method", 
                "name": "rotate", 
                "parameters": [
                    {
                        "description": "The angle, in degrees, by which to rotate the matrix. A positive value specifies counterclockwise rotation and a negative value specifies clockwise rotation.", 
                        "name": "angle", 
                        "type": "float"
                    }, 
                    {
                        "description": "The x part of the vector about which to rotate", 
                        "name": "x", 
                        "type": "float"
                    }, 
                    {
                        "description": "The y part of the vector about which to rotate", 
                        "name": "y", 
                        "type": "float"
                    }, 
                    {
                        "description": "The z part of the vector about which to rotate", 
                        "name": "z", 
                        "type": "float"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.9", 
                "value": "<p>Returns a matrix constructed by rotating an existing matrix</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.3DMatrix.scale-method", 
                "name": "scale", 
                "parameters": [
                    {
                        "description": "The value by which to scale x values of the matrix", 
                        "name": "sx", 
                        "type": "float"
                    }, 
                    {
                        "description": "The value by which to scale y values of the matrix", 
                        "name": "sy", 
                        "type": "float"
                    }, 
                    {
                        "description": "The value by which to scale z values of the matrix", 
                        "name": "sz", 
                        "type": "float"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.9", 
                "value": "<p>Returns a matrix constructed by scaling an existing matrix</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.3DMatrix.translate-method", 
                "name": "translate", 
                "parameters": [
                    {
                        "description": "The value by which to move x values with the matrix", 
                        "name": "tx", 
                        "type": "float"
                    }, 
                    {
                        "description": "The value by which to move y values with the matrix", 
                        "name": "ty", 
                        "type": "float"
                    }, 
                    {
                        "description": "The value by which to move z values with the matrix", 
                        "name": "tz", 
                        "type": "float"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.9", 
                "value": "<p>Returns a matrix constructed by translating an existing matrix</p>"
            }
        ], 
        "notes": "<p>You create an <tt>identity matrix</tt> by creating a 3D Matrix with an empty constructor.</p>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [], 
        "returns": null, 
        "since": "0.9", 
        "subtype": "proxy", 
        "type": "object"
    }, 
    "Titanium.UI.ActivityIndicator": {
        "deprecated": null, 
        "description": "<p>An Activity Indicator is created by the method <a href=\"Titanium.UI.createActivityIndicator.html\">Titanium.UI.createActivityIndicator</a>.  An activity indicator can be used to show the progress of an operation in the UI to let the user know some action is taking place.</p>", 
        "events": [], 
        "examples": [
            {
                "code": "<p>In this example, we create a basic activity indicator and start it.</p>\n<pre><code>var actInd = Titanium.UI.createActivityIndicator({\n    height:50,\n    width:10\n});\nactInd.show();\n</code></pre>", 
                "description": "Simple Activity Indicator"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.UI.ActivityIndicator.hide-method", 
                "name": "hide", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>call hide to make the activity indicator hidden and stop spinning</p>"
            }, 
            {
                "filename": "Titanium.UI.ActivityIndicator.show-method", 
                "name": "show", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>call show to make the activity indicator visible and start spinning</p>"
            }
        ], 
        "notes": "<p>For iPhone, the style can be set from the constants <a href=\"Titanium.UI.iPhone.ActivityIndicatorStyle.html\">Titanium.UI.iPhone.ActivityIndicatorStyle</a>.</p>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ActivityIndicator.color-property", 
                "isClassProperty": false, 
                "name": "color", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the color of the message label</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ActivityIndicator.font-property", 
                "isClassProperty": false, 
                "name": "font", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>the font object for the activity message label</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ActivityIndicator.message-property", 
                "isClassProperty": false, 
                "name": "message", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the activity message label text</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ActivityIndicator.messageid-property", 
                "isClassProperty": false, 
                "name": "messageid", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the key in the locale file to use for the message property</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ActivityIndicator.style-property", 
                "isClassProperty": false, 
                "name": "style", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the style constant of the activity indicator</p>"
            }
        ], 
        "returns": null, 
        "since": "0.8", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.UI.AlertDialog": {
        "deprecated": null, 
        "description": "<p>The Alert Dialog is created by <a href=\"Titanium.UI.createAlertDialog.html\">Titanium.UI.createAlertDialog</a> and allows you to show a modal application dialog.</p>", 
        "events": [
            {
                "filename": "Titanium.UI.AlertDialog.click-event", 
                "name": "click", 
                "properties": {
                    "cancel": "<p>boolean to indicate if the cancel button was pressed</p>", 
                    "index": "<p>the button index that was pressed</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>fired when a button in the dialog is clicked</p>"
            }
        ], 
        "examples": [
            {
                "code": "<p>In this example, we show a simple alert dialog.</p>\n<pre><code>var alertDialog = Titanium.UI.createAlertDialog({\n    title: 'Hello',\n    message: 'You got mail',\n    buttonNames: ['OK','Doh!']\n});\nalertDialog.show();\n</code></pre>", 
                "description": "Simple Alert Dialog"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.UI.AlertDialog.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.AlertDialog.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.AlertDialog.hide-method", 
                "name": "hide", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>cause the dialog to become hidden</p>"
            }, 
            {
                "filename": "Titanium.UI.AlertDialog.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously added event listener"
            }, 
            {
                "filename": "Titanium.UI.AlertDialog.show-method", 
                "name": "show", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>cause the dialog to become visible</p>"
            }
        ], 
        "notes": "<p>the global method <tt>alert</tt> is aliased to this object and can be invoked with a single message. For example:</p>\n<pre><code>alert(\"this is a message\");\n</code></pre>\n\n<p>Note: you should be careful not to call alert more than once while a pending alert is visible.</p>\n<p>On iOS 4, alert dialogs will automatically be cancelled upon application suspend.</p>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.AlertDialog.buttonNames-property", 
                "isClassProperty": false, 
                "name": "buttonNames", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "array", 
                "type_jsca": "array", 
                "value": "<p>array of button names as strings</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.AlertDialog.cancel-property", 
                "isClassProperty": false, 
                "name": "cancel", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>an index to indicate which button should be the cancel button</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.AlertDialog.message-property", 
                "isClassProperty": false, 
                "name": "message", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the message of the dialog</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.AlertDialog.messageid-property", 
                "isClassProperty": false, 
                "name": "messageid", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the key in the locale file to use for the message property</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.AlertDialog.title-property", 
                "isClassProperty": false, 
                "name": "title", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the title of the dialog</p>"
            }
        ], 
        "returns": null, 
        "since": "0.8", 
        "subtype": "proxy", 
        "type": "object"
    }, 
    "Titanium.UI.Android": {
        "deprecated": null, 
        "description": "<p>The Android specific UI capabilities. All properties, methods and events in this namespace will only work on Android related devices.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.UI.Android.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.0", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.Android.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.0", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.Android.hideSoftKeyboard-method", 
                "name": "hideSoftKeyboard", 
                "parameters": [], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.0", 
                "value": "<p>request that the soft keyboard hide. Note: It is not currently possible in the native Android API to detect that the keyboard is already visible. Note: It is not possible to globally show the keyboard at this point.</p>"
            }, 
            {
                "filename": "Titanium.UI.Android.openPreferences-method", 
                "name": "openPreferences", 
                "parameters": [], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.0", 
                "value": "<p>open Android native preferences UI activity. You need to place your preferences.xml file in the platform/android/res/xml/ folder of your project. Documentation on the file format may be found in the Android documentation http://developer.android.com/resources/samples/ApiDemos/res/xml/preferences.html</p>"
            }, 
            {
                "filename": "Titanium.UI.Android.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android"
                ], 
                "returntype": "void", 
                "since": "1.0", 
                "value": "remove a previously added event listener"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Android.LINKIFY_ALL-property", 
                "isClassProperty": true, 
                "name": "LINKIFY_ALL", 
                "platforms": [
                    "android"
                ], 
                "since": "1.0", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Auto link all supported types.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Android.LINKIFY_EMAIL_ADDRESSES-property", 
                "isClassProperty": true, 
                "name": "LINKIFY_EMAIL_ADDRESSES", 
                "platforms": [
                    "android"
                ], 
                "since": "1.0", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Auto link email addresses.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Android.LINKIFY_MAP_ADDRESSES-property", 
                "isClassProperty": true, 
                "name": "LINKIFY_MAP_ADDRESSES", 
                "platforms": [
                    "android"
                ], 
                "since": "1.0", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Auto link physical addresses.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Android.LINKIFY_MAP_LINKS-property", 
                "isClassProperty": true, 
                "name": "LINKIFY_MAP_LINKS", 
                "platforms": [
                    "android"
                ], 
                "since": "1.0", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Convert all street addresses to clickable links</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Android.LINKIFY_PHONE_NUMBERS-property", 
                "isClassProperty": true, 
                "name": "LINKIFY_PHONE_NUMBERS", 
                "platforms": [
                    "android"
                ], 
                "since": "1.0", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Auto link phone numbers.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Android.LINKIFY_WEB_URLS-property", 
                "isClassProperty": true, 
                "name": "LINKIFY_WEB_URLS", 
                "platforms": [
                    "android"
                ], 
                "since": "1.0", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Auto link web urls.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Android.SOFT_INPUT_ADJUST_PAN-property", 
                "isClassProperty": true, 
                "name": "SOFT_INPUT_ADJUST_PAN", 
                "platforms": [
                    "android"
                ], 
                "since": "1.0", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Pan contents when soft keyboard is visible. Use on Activity (\"heavy weight window\") to suggest how the virtual keyboard should treat the window contents. Must be specified in creation options.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Android.SOFT_INPUT_ADJUST_RESIZE-property", 
                "isClassProperty": true, 
                "name": "SOFT_INPUT_ADJUST_RESIZE", 
                "platforms": [
                    "android"
                ], 
                "since": "1.0", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Resize contents when soft keyboard is visible. Use on Activity (\"heavy weight window\") to suggest how the virtual keyboard should treat the window contents. Must be specified in creation options.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Android.SOFT_INPUT_ADJUST_UNSPECIFIED-property", 
                "isClassProperty": true, 
                "name": "SOFT_INPUT_ADJUST_UNSPECIFIED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.0", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>(default) If set in the AndroidManifest.xml use that setting. Otherwise, let the keyboard decided. Must be specified in creation options.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Android.SOFT_INPUT_STATE_HIDDEN-property", 
                "isClassProperty": true, 
                "name": "SOFT_INPUT_STATE_HIDDEN", 
                "platforms": [
                    "android"
                ], 
                "since": "1.0", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Attempt to hide the soft keyboard when control receives keyboard focus.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Android.SOFT_INPUT_STATE_UNSPECIFIED-property", 
                "isClassProperty": true, 
                "name": "SOFT_INPUT_STATE_UNSPECIFIED", 
                "platforms": [
                    "android"
                ], 
                "since": "1.0", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Use OS default behavior for keyboard focus.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Android.SOFT_INPUT_STATE_VISIBLE-property", 
                "isClassProperty": true, 
                "name": "SOFT_INPUT_STATE_VISIBLE", 
                "platforms": [
                    "android"
                ], 
                "since": "1.0", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Attempt to show the soft keyboard when control receives keyboard focus.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Android.SOFT_KEYBOARD_DEFAULT_ON_FOCUS-property", 
                "isClassProperty": true, 
                "name": "SOFT_KEYBOARD_DEFAULT_ON_FOCUS", 
                "platforms": [
                    "android"
                ], 
                "since": "1.0", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Use Android default soft keyboard handling. Same as not specifying a value.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Android.SOFT_KEYBOARD_HIDE_ON_FOCUS-property", 
                "isClassProperty": true, 
                "name": "SOFT_KEYBOARD_HIDE_ON_FOCUS", 
                "platforms": [
                    "android"
                ], 
                "since": "1.0", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Request hide soft keyboard on focus. Note: OS can override request.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Android.SOFT_KEYBOARD_SHOW_ON_FOCUS-property", 
                "isClassProperty": true, 
                "name": "SOFT_KEYBOARD_SHOW_ON_FOCUS", 
                "platforms": [
                    "android"
                ], 
                "since": "1.0", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Request show soft keyboard on focus. Note: OS can override request.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Android.SWITCH_STYLE_CHECKBOX-property", 
                "isClassProperty": true, 
                "name": "SWITCH_STYLE_CHECKBOX", 
                "platforms": [
                    "android"
                ], 
                "since": "1.0", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Display Switch as an Android Checkbox</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Android.SWITCH_STYLE_TOGGLEBUTTON-property", 
                "isClassProperty": true, 
                "name": "SWITCH_STYLE_TOGGLEBUTTON", 
                "platforms": [
                    "android"
                ], 
                "since": "1.0", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Display Switch as an Android Toggle Button (default)</p>"
            }
        ], 
        "returns": "object", 
        "since": "1.0", 
        "subtype": null, 
        "type": "module"
    }, 
    "Titanium.UI.Animation": {
        "deprecated": null, 
        "description": "<p>The Animation object is used for specifying lower-level animation properties and more low-level control of events during an animation. The Animation is created by the method <a href=\"Titanium.UI.createAnimation.html\">Titanium.UI.createAnimation</a>.</p>", 
        "events": [
            {
                "filename": "Titanium.UI.Animation.complete-event", 
                "name": "complete", 
                "properties": {
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>fired when the animation completes</p>"
            }, 
            {
                "filename": "Titanium.UI.Animation.start-event", 
                "name": "start", 
                "properties": {
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>fired when the animation starts</p>"
            }
        ], 
        "examples": [
            {
                "code": "<p>Create a simple animation and apply it to the view.  In this example, the view will animate from red to black to orange over 2 seconds.</p>\n<pre><code>var view = Titanium.UI.createView({\n   backgroundColor:'red'\n});\nvar animation = Titanium.UI.createAnimation();\nanimation.backgroundColor = 'black';\nanimation.duration = 1000;\nanimation.addEventListener('complete',function()\n{\n   animation.removeEventListener('complete',this);\n   animation.backgroundColor = 'orange';\n   view.animate(animation);\n});\nview.animate(animation);\n</code></pre>", 
                "description": "Animation applied to a view"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.UI.Animation.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.Animation.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.Animation.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "remove a previously added event listener"
            }
        ], 
        "notes": "", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Animation.autoreverse-property", 
                "isClassProperty": false, 
                "name": "autoreverse", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>the property specifies if the animation should be replayed in reverse upon completion</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Animation.backgroundColor-property", 
                "isClassProperty": false, 
                "name": "backgroundColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>value of the backgroundColor property to change during animation</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Animation.bottom-property", 
                "isClassProperty": false, 
                "name": "bottom", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>value of the bottom property to change during animation</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Animation.center-property", 
                "isClassProperty": false, 
                "name": "center", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>value of the center property to change during animation</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Animation.color-property", 
                "isClassProperty": false, 
                "name": "color", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>value of the color property to change during animation</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Animation.curve-property", 
                "isClassProperty": false, 
                "name": "curve", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the curve of the animation</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Animation.delay-property", 
                "isClassProperty": false, 
                "name": "delay", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>the duration of time in milliseconds before starting the animation</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Animation.duration-property", 
                "isClassProperty": false, 
                "name": "duration", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>the duration of time in milliseconds to perform the animation</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Animation.height-property", 
                "isClassProperty": false, 
                "name": "height", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>value of the height property to change during animation</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Animation.left-property", 
                "isClassProperty": false, 
                "name": "left", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>value of the left property to change during animation</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Animation.opacity-property", 
                "isClassProperty": false, 
                "name": "opacity", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>value of the opacity property to change during animation</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Animation.opaque-property", 
                "isClassProperty": false, 
                "name": "opaque", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>value of the opaque property to change during animation</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Animation.repeat-property", 
                "isClassProperty": false, 
                "name": "repeat", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the number of times the animation should be performed</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Animation.right-property", 
                "isClassProperty": false, 
                "name": "right", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>value of the right property to change during animation</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Animation.top-property", 
                "isClassProperty": false, 
                "name": "top", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>value of the top property to change during animation</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Animation.transform-property", 
                "isClassProperty": false, 
                "name": "transform", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>value of the transform property to change during animation</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Animation.transition-property", 
                "isClassProperty": false, 
                "name": "transition", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>during a transition animation, this is the constant to the type of transition to use</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Animation.visible-property", 
                "isClassProperty": false, 
                "name": "visible", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>value of the visible property to change during animation</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Animation.width-property", 
                "isClassProperty": false, 
                "name": "width", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>value of the width property to change during animation</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Animation.zIndex-property", 
                "isClassProperty": false, 
                "name": "zIndex", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>value of the zIndex property to change during animation</p>"
            }
        ], 
        "returns": null, 
        "since": "0.9", 
        "subtype": "proxy", 
        "type": "object"
    }, 
    "Titanium.UI.Button": {
        "deprecated": null, 
        "description": "<p>A Button is created by the method <a href=\"Titanium.UI.createButton.html\">Titanium.UI.createButton</a>.</p>", 
        "events": [
            {
                "filename": "Titanium.UI.Button.click-event", 
                "name": "click", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a click (longer than touch) against the view"
            }, 
            {
                "filename": "Titanium.UI.Button.dblclick-event", 
                "name": "dblclick", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double click against the view"
            }, 
            {
                "filename": "Titanium.UI.Button.doubletap-event", 
                "name": "doubletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double tap against the view"
            }, 
            {
                "filename": "Titanium.UI.Button.singletap-event", 
                "name": "singletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a single tap against the view"
            }, 
            {
                "filename": "Titanium.UI.Button.swipe-event", 
                "name": "swipe", 
                "properties": {
                    "direction": "direction of the swipe - either left or right", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a swipe (left or right) against the view"
            }, 
            {
                "filename": "Titanium.UI.Button.touchcancel-event", 
                "name": "touchcancel", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is interrupted by the device. this happens in circumenstances such as an incoming call to allow the UI to clean up state."
            }, 
            {
                "filename": "Titanium.UI.Button.touchend-event", 
                "name": "touchend", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is completed"
            }, 
            {
                "filename": "Titanium.UI.Button.touchmove-event", 
                "name": "touchmove", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects movement of a touch.  Event coordinates are always relative to the view in which the initial touch occurred"
            }, 
            {
                "filename": "Titanium.UI.Button.touchstart-event", 
                "name": "touchstart", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects a gesture"
            }, 
            {
                "filename": "Titanium.UI.Button.twofingertap-event", 
                "name": "twofingertap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a two-finger tap against the view"
            }
        ], 
        "examples": [
            {
                "code": "<pre><code>var button = Titanium.UI.createButton({\n   title: 'Hello'\n});\nbutton.addEventListener('click',function(e)\n{\n   Titanium.API.info(\"You clicked the button\");\n});\n</code></pre>", 
                "description": "Simple Button Example"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.UI.Button.add-method", 
                "name": "add", 
                "parameters": [
                    {
                        "description": "the view to add to this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add a child to the view hierarchy"
            }, 
            {
                "filename": "Titanium.UI.Button.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.Button.animate-method", 
                "name": "animate", 
                "parameters": [
                    {
                        "description": "either a dictionary of animation properties or an Animation object", 
                        "name": "obj", 
                        "type": "object"
                    }, 
                    {
                        "description": "function to be invoked upon completion of the animation", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "animate the view"
            }, 
            {
                "filename": "Titanium.UI.Button.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.Button.hide-method", 
                "name": "hide", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "hide the view"
            }, 
            {
                "filename": "Titanium.UI.Button.remove-method", 
                "name": "remove", 
                "parameters": [
                    {
                        "description": "the view to remove from this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously add view from the view hiearchy"
            }, 
            {
                "filename": "Titanium.UI.Button.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously added event listener"
            }, 
            {
                "filename": "Titanium.UI.Button.show-method", 
                "name": "show", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "make the view visible"
            }, 
            {
                "filename": "Titanium.UI.Button.toImage-method", 
                "name": "toImage", 
                "parameters": [
                    {
                        "description": "function to be invoked upon completion. if non-null, this method will be performed asynchronously. if null, it will be performed immediately", 
                        "name": "f", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.8", 
                "value": "return a Blob image of the rendered view"
            }
        ], 
        "notes": "", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.anchorPoint-property", 
                "isClassProperty": false, 
                "name": "anchorPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the anchor point value. anchor specifies the position by which animation should occur. center is 0.5, 0.5"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.animatedCenterPoint-property", 
                "isClassProperty": false, 
                "name": "animatedCenterPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "read-only object with x and y properties of where the view is during animation"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.backgroundColor-property", 
                "isClassProperty": false, 
                "name": "backgroundColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.backgroundDisabledColor-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background color of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.backgroundDisabledImage-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background image url of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.backgroundFocusedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.backgroundFocusedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.backgroundGradient-property", 
                "isClassProperty": false, 
                "name": "backgroundGradient", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a background gradient for the view with the properties: type,startPoint,endPoint,startRadius,endRadius,backfillStart,backfillEnd,colors."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.backgroundImage-property", 
                "isClassProperty": false, 
                "name": "backgroundImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background image url of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.backgroundLeftCap-property", 
                "isClassProperty": false, 
                "name": "backgroundLeftCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the left end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The right end cap is therefore computed by adding the size of the left end cap and the middle portion together and then subtracting that value from the width of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.backgroundSelectedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.backgroundSelectedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.backgroundTopCap-property", 
                "isClassProperty": false, 
                "name": "backgroundTopCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the top end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The bottom end cap is therefore computed by adding the size of the top end cap and the middle portion together and then subtracting that value from the height of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.borderColor-property", 
                "isClassProperty": false, 
                "name": "borderColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the border color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.borderRadius-property", 
                "isClassProperty": false, 
                "name": "borderRadius", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border radius of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.borderWidth-property", 
                "isClassProperty": false, 
                "name": "borderWidth", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border width of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.bottom-property", 
                "isClassProperty": false, 
                "name": "bottom", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view bottom position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.center-property", 
                "isClassProperty": false, 
                "name": "center", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the center of the views position relative to the parent view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.color-property", 
                "isClassProperty": false, 
                "name": "color", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the foreground color of the button text</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.enabled-property", 
                "isClassProperty": false, 
                "name": "enabled", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean that indicates if the button is enabled or not</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.focusable-property", 
                "isClassProperty": false, 
                "name": "focusable", 
                "platforms": [
                    "android"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "Set true if you want a view to be focusable when navigating with the trackball or D-Pad. Default: false. (Android Only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.font-property", 
                "isClassProperty": false, 
                "name": "font", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>the font properties of the button</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.font-family-property", 
                "isClassProperty": false, 
                "name": "font-family", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font family"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.font-size-property", 
                "isClassProperty": false, 
                "name": "font-size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font size"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.font-style-property", 
                "isClassProperty": false, 
                "name": "font-style", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font style, either normal or italics"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.font-weight-property", 
                "isClassProperty": false, 
                "name": "font-weight", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font weight, either normal or bold"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.height-property", 
                "isClassProperty": false, 
                "name": "height", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view height. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.image-property", 
                "isClassProperty": false, 
                "name": "image", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the image to display on the button to the left of the title</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.left-property", 
                "isClassProperty": false, 
                "name": "left", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view left position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.opacity-property", 
                "isClassProperty": false, 
                "name": "opacity", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the opacity from 0.0-1.0"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.right-property", 
                "isClassProperty": false, 
                "name": "right", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view right position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.selectedColor-property", 
                "isClassProperty": false, 
                "name": "selectedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the selected color of the button text when the button is in the selected state</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.size-property", 
                "isClassProperty": false, 
                "name": "size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the size of the view as a dictionary of width and height properties"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.softKeyboardOnFocus-property", 
                "isClassProperty": false, 
                "name": "softKeyboardOnFocus", 
                "platforms": [
                    "android"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "One of Titanium.UI.Android.SOFT_KEYBOARD_DEFAULT_ON_FOCUS, Titanium.UI.Android.SOFT_KEYBOARD_HIDE_ON_FOCUS, or Titanium.UI.Android.SOFT_KEYBOARD_SHOW_ON_FOCUS. (Android only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.style-property", 
                "isClassProperty": false, 
                "name": "style", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>style constant for the type of button</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.title-property", 
                "isClassProperty": false, 
                "name": "title", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>button title</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.titleid-property", 
                "isClassProperty": false, 
                "name": "titleid", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the key in the locale file to use for the title property</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.top-property", 
                "isClassProperty": false, 
                "name": "top", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view top position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.touchEnabled-property", 
                "isClassProperty": false, 
                "name": "touchEnabled", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean indicating if the view should receive touch events (true, default) or forward them to peers (false)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.transform-property", 
                "isClassProperty": false, 
                "name": "transform", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the transformation matrix to apply to the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.visible-property", 
                "isClassProperty": false, 
                "name": "visible", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean of the visibility of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.width-property", 
                "isClassProperty": false, 
                "name": "width", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view width. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Button.zIndex-property", 
                "isClassProperty": false, 
                "name": "zIndex", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "the z index position relative to other sibling views"
            }
        ], 
        "returns": null, 
        "since": "0.8", 
        "subtype": "view", 
        "type": "object"
    }, 
    "Titanium.UI.ButtonBar": {
        "deprecated": null, 
        "description": "<p>A Button Bar is created by the method <a href=\"Titanium.UI.createButtonBar.html\">Titanium.UI.createButtonBar</a>.</p>", 
        "events": [
            {
                "filename": "Titanium.UI.ButtonBar.click-event", 
                "name": "click", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "index": "<p>the index of the button that was clicked</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a click (longer than touch) against the view"
            }, 
            {
                "filename": "Titanium.UI.ButtonBar.dblclick-event", 
                "name": "dblclick", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double click against the view"
            }, 
            {
                "filename": "Titanium.UI.ButtonBar.doubletap-event", 
                "name": "doubletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double tap against the view"
            }, 
            {
                "filename": "Titanium.UI.ButtonBar.singletap-event", 
                "name": "singletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a single tap against the view"
            }, 
            {
                "filename": "Titanium.UI.ButtonBar.swipe-event", 
                "name": "swipe", 
                "properties": {
                    "direction": "direction of the swipe - either left or right", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a swipe (left or right) against the view"
            }, 
            {
                "filename": "Titanium.UI.ButtonBar.touchcancel-event", 
                "name": "touchcancel", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is interrupted by the device. this happens in circumenstances such as an incoming call to allow the UI to clean up state."
            }, 
            {
                "filename": "Titanium.UI.ButtonBar.touchend-event", 
                "name": "touchend", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is completed"
            }, 
            {
                "filename": "Titanium.UI.ButtonBar.touchmove-event", 
                "name": "touchmove", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects movement of a touch.  Event coordinates are always relative to the view in which the initial touch occurred"
            }, 
            {
                "filename": "Titanium.UI.ButtonBar.touchstart-event", 
                "name": "touchstart", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects a gesture"
            }, 
            {
                "filename": "Titanium.UI.ButtonBar.twofingertap-event", 
                "name": "twofingertap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a two-finger tap against the view"
            }
        ], 
        "examples": [
            {
                "code": "<pre><code>var bb1 = Titanium.UI.createButtonBar({\n    labels:['One', 'Two', 'Three'],\n    backgroundColor:'#336699',\n    top:50,\n    style:Titanium.UI.iPhone.SystemButtonStyle.BAR,\n    height:25,\n    width:200\n});\nwin.add(bb1);\n</code></pre>", 
                "description": "Simple 3 button button bar"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.UI.ButtonBar.add-method", 
                "name": "add", 
                "parameters": [
                    {
                        "description": "the view to add to this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add a child to the view hierarchy"
            }, 
            {
                "filename": "Titanium.UI.ButtonBar.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.ButtonBar.animate-method", 
                "name": "animate", 
                "parameters": [
                    {
                        "description": "either a dictionary of animation properties or an Animation object", 
                        "name": "obj", 
                        "type": "object"
                    }, 
                    {
                        "description": "function to be invoked upon completion of the animation", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "animate the view"
            }, 
            {
                "filename": "Titanium.UI.ButtonBar.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.ButtonBar.hide-method", 
                "name": "hide", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "hide the view"
            }, 
            {
                "filename": "Titanium.UI.ButtonBar.remove-method", 
                "name": "remove", 
                "parameters": [
                    {
                        "description": "the view to remove from this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously add view from the view hiearchy"
            }, 
            {
                "filename": "Titanium.UI.ButtonBar.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously added event listener"
            }, 
            {
                "filename": "Titanium.UI.ButtonBar.show-method", 
                "name": "show", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "make the view visible"
            }, 
            {
                "filename": "Titanium.UI.ButtonBar.toImage-method", 
                "name": "toImage", 
                "parameters": [
                    {
                        "description": "function to be invoked upon completion. if non-null, this method will be performed asynchronously. if null, it will be performed immediately", 
                        "name": "f", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.8", 
                "value": "return a Blob image of the rendered view"
            }
        ], 
        "notes": "<p>For iPhone, the style constants are available in the constants defined in <a href=\"Titanium.UI.iPhone.SystemButtonStyle\">Titanium.UI.iPhone.SystemButtonStyle</a>.</p>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.anchorPoint-property", 
                "isClassProperty": false, 
                "name": "anchorPoint", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the anchor point value. anchor specifies the position by which animation should occur. center is 0.5, 0.5"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.animatedCenterPoint-property", 
                "isClassProperty": false, 
                "name": "animatedCenterPoint", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "read-only object with x and y properties of where the view is during animation"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.backgroundColor-property", 
                "isClassProperty": false, 
                "name": "backgroundColor", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.backgroundDisabledColor-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledColor", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background color of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.backgroundDisabledImage-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledImage", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background image url of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.backgroundFocusedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedColor", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.backgroundFocusedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedImage", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.backgroundGradient-property", 
                "isClassProperty": false, 
                "name": "backgroundGradient", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a background gradient for the view with the properties: type,startPoint,endPoint,startRadius,endRadius,backfillStart,backfillEnd,colors."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.backgroundImage-property", 
                "isClassProperty": false, 
                "name": "backgroundImage", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background image url of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.backgroundLeftCap-property", 
                "isClassProperty": false, 
                "name": "backgroundLeftCap", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the left end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The right end cap is therefore computed by adding the size of the left end cap and the middle portion together and then subtracting that value from the width of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.backgroundSelectedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedColor", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.backgroundSelectedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedImage", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.backgroundTopCap-property", 
                "isClassProperty": false, 
                "name": "backgroundTopCap", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the top end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The bottom end cap is therefore computed by adding the size of the top end cap and the middle portion together and then subtracting that value from the height of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.borderColor-property", 
                "isClassProperty": false, 
                "name": "borderColor", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the border color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.borderRadius-property", 
                "isClassProperty": false, 
                "name": "borderRadius", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border radius of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.borderWidth-property", 
                "isClassProperty": false, 
                "name": "borderWidth", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border width of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.bottom-property", 
                "isClassProperty": false, 
                "name": "bottom", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view bottom position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.center-property", 
                "isClassProperty": false, 
                "name": "center", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the center of the views position relative to the parent view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.font-family-property", 
                "isClassProperty": false, 
                "name": "font-family", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font family"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.font-size-property", 
                "isClassProperty": false, 
                "name": "font-size", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font size"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.font-style-property", 
                "isClassProperty": false, 
                "name": "font-style", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font style, either normal or italics"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.font-weight-property", 
                "isClassProperty": false, 
                "name": "font-weight", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font weight, either normal or bold"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.height-property", 
                "isClassProperty": false, 
                "name": "height", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view height. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.index-property", 
                "isClassProperty": false, 
                "name": "index", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the selected index</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.labels-property", 
                "isClassProperty": false, 
                "name": "labels", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "array", 
                "type_jsca": "array", 
                "value": "<p>the array of labels for the button bar. each object should have the properties <tt>title</tt>, <tt>image</tt>, <tt>width</tt> and <tt>enabled</tt>.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.left-property", 
                "isClassProperty": false, 
                "name": "left", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view left position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.opacity-property", 
                "isClassProperty": false, 
                "name": "opacity", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the opacity from 0.0-1.0"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.right-property", 
                "isClassProperty": false, 
                "name": "right", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view right position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.size-property", 
                "isClassProperty": false, 
                "name": "size", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the size of the view as a dictionary of width and height properties"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.style-property", 
                "isClassProperty": false, 
                "name": "style", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the style of the button bar</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.top-property", 
                "isClassProperty": false, 
                "name": "top", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view top position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.touchEnabled-property", 
                "isClassProperty": false, 
                "name": "touchEnabled", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean indicating if the view should receive touch events (true, default) or forward them to peers (false)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.transform-property", 
                "isClassProperty": false, 
                "name": "transform", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the transformation matrix to apply to the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.visible-property", 
                "isClassProperty": false, 
                "name": "visible", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean of the visibility of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.width-property", 
                "isClassProperty": false, 
                "name": "width", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view width. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ButtonBar.zIndex-property", 
                "isClassProperty": false, 
                "name": "zIndex", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "the z index position relative to other sibling views"
            }
        ], 
        "returns": null, 
        "since": "0.8", 
        "subtype": "view", 
        "type": "object"
    }, 
    "Titanium.UI.Clipboard": {
        "deprecated": null, 
        "description": "<p>A module used for accessing clipboard data.</p>", 
        "events": [], 
        "examples": [
            {
                "code": "<pre><code>copyButton.addEventListener('click', function() {\n    Ti.UI.Clipboard.setText(data.url);\n});\n</code></pre>", 
                "description": "Copying text to the clipboard"
            }, 
            {
                "code": "<pre><code>if (Ti.UI.Clipboard.hasText()) {\n    doSomethingWith(Ti.UI.Clipboard.getText());\n} else {\n    alert('Hey there was no text.');\n}\n</code></pre>", 
                "description": "Pasting text from the clipboard"
            }, 
            {
                "code": "<p>The <em>Text() functions are equivalent to calling </em>Data() with 'text' or 'text/plain' types, and work with plain Unicode strings.</p>\n<p>On Android, only plain text is supported; other MIME types will be ignored.</p>\n<p>On iOS, images will be returned as a <a href=\"Titanium.Blob-object.html\">Titanium.Blob</a>; the special type 'image' or an explicit MIME type may be specified. URLs can be fetched with the special 'URL' or 'text/uri-list' types, and will return strings. Other data types may or may not be correctly mapped to clipboard types by the system, and will be retrieved as binary data in a <a href=\"Titanium.Blob-object.html\">Titanium.Blob</a>.</p>", 
                "description": "Clipboard data types"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.UI.Clipboard.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Clipboard.clearData-method", 
                "name": "clearData", 
                "parameters": [
                    {
                        "description": "(optional) The mime-type of the data to clear.", 
                        "name": "type", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>Clear data of the given mime-type from the clipboard. If no mime-type is given, clear all data from the clipboard.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Clipboard.clearText-method", 
                "name": "clearText", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>Clear the text portion of the clipboard.</p>"
            }, 
            {
                "filename": "Titanium.UI.Clipboard.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Clipboard.getData-method", 
                "name": "getData", 
                "parameters": [
                    {
                        "description": "The mime-type of the data to get.", 
                        "name": "type", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>Get the data on the clipboard from the portion which contains data of the given mime-type.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Clipboard.getText-method", 
                "name": "getText", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>Get the current text on the clipboard.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Clipboard.hasData-method", 
                "name": "hasData", 
                "parameters": [
                    {
                        "description": "(optional) The mime-type of the data to check.", 
                        "name": "type", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>Return true if there is any content of the given mime-type on the clipboard.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Clipboard.hasText-method", 
                "name": "hasText", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>Return true if there is any content in the text portion of the clipboard.</p>"
            }, 
            {
                "filename": "Titanium.UI.Clipboard.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "remove a previously added event listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Clipboard.setData-method", 
                "name": "setData", 
                "parameters": [
                    {
                        "description": "The mime-type of the data to set.", 
                        "name": "type", 
                        "type": "string"
                    }, 
                    {
                        "description": "The new clipboard text.", 
                        "name": "data", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>Set the data on the clipboard given a mime-type and the new data. This method will set data on the appropriate portion of the clipboard for the given mime-type.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Clipboard.setText-method", 
                "name": "setText", 
                "parameters": [
                    {
                        "description": "The new clipboard text. If the text is an empty string", 
                        "name": "text", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "android", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.5", 
                "value": "<p>Set the text on the clipboard. This will overwrite the current contents of the clipboard.</p>"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "android", 
            "ipad"
        ], 
        "properties": [], 
        "returns": "object", 
        "since": "1.5", 
        "subtype": null, 
        "type": "module"
    }, 
    "Titanium.UI.CoverFlowView": {
        "deprecated": null, 
        "description": "<p>The Cover Flow view is container for showing  animated, three dimensional images in a nice UI. The Cover Flow view is created by the method <a href=\"Titanium.UI.createCoverFlowView.html\">Titanium.UI.createCoverFlowView</a>.</p>", 
        "events": [
            {
                "filename": "Titanium.UI.CoverFlowView.change-event", 
                "name": "change", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "index": "<p>the index of the image that is now visible</p>", 
                    "previous": "<p>the previous index of the image that was visible</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the user changes the image using a gesture</p>"
            }, 
            {
                "filename": "Titanium.UI.CoverFlowView.click-event", 
                "name": "click", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "index": "<p>the index of the image that is now visible</p>", 
                    "previous": "<p>the previous index of the image that was visible</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a click (longer than touch) against the view"
            }, 
            {
                "filename": "Titanium.UI.CoverFlowView.dblclick-event", 
                "name": "dblclick", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double click against the view"
            }, 
            {
                "filename": "Titanium.UI.CoverFlowView.doubletap-event", 
                "name": "doubletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double tap against the view"
            }, 
            {
                "filename": "Titanium.UI.CoverFlowView.singletap-event", 
                "name": "singletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a single tap against the view"
            }, 
            {
                "filename": "Titanium.UI.CoverFlowView.swipe-event", 
                "name": "swipe", 
                "properties": {
                    "direction": "direction of the swipe - either left or right", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a swipe (left or right) against the view"
            }, 
            {
                "filename": "Titanium.UI.CoverFlowView.touchcancel-event", 
                "name": "touchcancel", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is interrupted by the device. this happens in circumenstances such as an incoming call to allow the UI to clean up state."
            }, 
            {
                "filename": "Titanium.UI.CoverFlowView.touchend-event", 
                "name": "touchend", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is completed"
            }, 
            {
                "filename": "Titanium.UI.CoverFlowView.touchmove-event", 
                "name": "touchmove", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects movement of a touch.  Event coordinates are always relative to the view in which the initial touch occurred"
            }, 
            {
                "filename": "Titanium.UI.CoverFlowView.touchstart-event", 
                "name": "touchstart", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects a gesture"
            }, 
            {
                "filename": "Titanium.UI.CoverFlowView.twofingertap-event", 
                "name": "twofingertap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a two-finger tap against the view"
            }
        ], 
        "examples": [
            {
                "code": "<p>Create a rounded view.</p>\n<pre><code>var view = Titanium.UI.createCoverFlowView({\n    images:['a.png','b.png','c.png'],\n    backgroundColor:'#000'\n});\nwindow.add(view);\n</code></pre>", 
                "description": "Simple 3 image cover flow example"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.UI.CoverFlowView.add-method", 
                "name": "add", 
                "parameters": [
                    {
                        "description": "the view to add to this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add a child to the view hierarchy"
            }, 
            {
                "filename": "Titanium.UI.CoverFlowView.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.CoverFlowView.animate-method", 
                "name": "animate", 
                "parameters": [
                    {
                        "description": "either a dictionary of animation properties or an Animation object", 
                        "name": "obj", 
                        "type": "object"
                    }, 
                    {
                        "description": "function to be invoked upon completion of the animation", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "animate the view"
            }, 
            {
                "filename": "Titanium.UI.CoverFlowView.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.CoverFlowView.hide-method", 
                "name": "hide", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "hide the view"
            }, 
            {
                "filename": "Titanium.UI.CoverFlowView.remove-method", 
                "name": "remove", 
                "parameters": [
                    {
                        "description": "the view to remove from this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously add view from the view hiearchy"
            }, 
            {
                "filename": "Titanium.UI.CoverFlowView.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously added event listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.setImage-method", 
                "name": "setImage", 
                "parameters": [
                    {
                        "description": "index to change", 
                        "name": "index", 
                        "type": "int"
                    }, 
                    {
                        "description": "the image to set the index to. May be a TiBlob, TiFile, URL, or dictionary with 'image' (may be any of TiBlob, TiFile, URL), 'width', 'height' keys.  'auto' is not allowed, only exact sizes (although a size may be omitted to keep the image at that size).  If passed as a TiFile or URL, will perform a check for '@2x' on Retina displays", 
                        "name": "image", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>change an image for a index</p>"
            }, 
            {
                "filename": "Titanium.UI.CoverFlowView.show-method", 
                "name": "show", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "make the view visible"
            }, 
            {
                "filename": "Titanium.UI.CoverFlowView.toImage-method", 
                "name": "toImage", 
                "parameters": [
                    {
                        "description": "function to be invoked upon completion. if non-null, this method will be performed asynchronously. if null, it will be performed immediately", 
                        "name": "f", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.8", 
                "value": "return a Blob image of the rendered view"
            }
        ], 
        "notes": "", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.anchorPoint-property", 
                "isClassProperty": false, 
                "name": "anchorPoint", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the anchor point value. anchor specifies the position by which animation should occur. center is 0.5, 0.5"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.animatedCenterPoint-property", 
                "isClassProperty": false, 
                "name": "animatedCenterPoint", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "read-only object with x and y properties of where the view is during animation"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.backgroundColor-property", 
                "isClassProperty": false, 
                "name": "backgroundColor", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.backgroundDisabledColor-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledColor", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background color of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.backgroundDisabledImage-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledImage", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background image url of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.backgroundFocusedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedColor", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.backgroundFocusedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedImage", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.backgroundGradient-property", 
                "isClassProperty": false, 
                "name": "backgroundGradient", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a background gradient for the view with the properties: type,startPoint,endPoint,startRadius,endRadius,backfillStart,backfillEnd,colors."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.backgroundImage-property", 
                "isClassProperty": false, 
                "name": "backgroundImage", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background image url of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.backgroundLeftCap-property", 
                "isClassProperty": false, 
                "name": "backgroundLeftCap", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the left end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The right end cap is therefore computed by adding the size of the left end cap and the middle portion together and then subtracting that value from the width of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.backgroundSelectedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedColor", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.backgroundSelectedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedImage", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.backgroundTopCap-property", 
                "isClassProperty": false, 
                "name": "backgroundTopCap", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the top end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The bottom end cap is therefore computed by adding the size of the top end cap and the middle portion together and then subtracting that value from the height of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.borderColor-property", 
                "isClassProperty": false, 
                "name": "borderColor", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the border color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.borderRadius-property", 
                "isClassProperty": false, 
                "name": "borderRadius", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border radius of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.borderWidth-property", 
                "isClassProperty": false, 
                "name": "borderWidth", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border width of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.bottom-property", 
                "isClassProperty": false, 
                "name": "bottom", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view bottom position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.center-property", 
                "isClassProperty": false, 
                "name": "center", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the center of the views position relative to the parent view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.font-family-property", 
                "isClassProperty": false, 
                "name": "font-family", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font family"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.font-size-property", 
                "isClassProperty": false, 
                "name": "font-size", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font size"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.font-style-property", 
                "isClassProperty": false, 
                "name": "font-style", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font style, either normal or italics"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.font-weight-property", 
                "isClassProperty": false, 
                "name": "font-weight", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font weight, either normal or bold"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.height-property", 
                "isClassProperty": false, 
                "name": "height", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view height. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.images-property", 
                "isClassProperty": false, 
                "name": "images", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "array", 
                "type_jsca": "array", 
                "value": "<p>array of images to display in the view</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.left-property", 
                "isClassProperty": false, 
                "name": "left", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view left position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.opacity-property", 
                "isClassProperty": false, 
                "name": "opacity", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the opacity from 0.0-1.0"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.right-property", 
                "isClassProperty": false, 
                "name": "right", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view right position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.selected-property", 
                "isClassProperty": false, 
                "name": "selected", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>index to make selected</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.size-property", 
                "isClassProperty": false, 
                "name": "size", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the size of the view as a dictionary of width and height properties"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.top-property", 
                "isClassProperty": false, 
                "name": "top", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view top position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.touchEnabled-property", 
                "isClassProperty": false, 
                "name": "touchEnabled", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean indicating if the view should receive touch events (true, default) or forward them to peers (false)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.transform-property", 
                "isClassProperty": false, 
                "name": "transform", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the transformation matrix to apply to the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.visible-property", 
                "isClassProperty": false, 
                "name": "visible", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean of the visibility of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.width-property", 
                "isClassProperty": false, 
                "name": "width", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view width. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.CoverFlowView.zIndex-property", 
                "isClassProperty": false, 
                "name": "zIndex", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "the z index position relative to other sibling views"
            }
        ], 
        "returns": null, 
        "since": "0.8", 
        "subtype": "view", 
        "type": "object"
    }, 
    "Titanium.UI.DashboardItem": {
        "deprecated": null, 
        "description": "<p>An item that represents a visual icon in the <a href=\"Titanium.UI.DashboardView.html\">Titanium.UI.DashboardView</a>. The Dashboard Item is created by the method <a href=\"Titanium.UI.createDashboardItem.html\">Titanium.UI.createDashboardItem</a>.</p>", 
        "events": [
            {
                "filename": "Titanium.UI.DashboardItem.click-event", 
                "name": "click", 
                "properties": {
                    "item": "<p>the <a href=\"Titanium.UI.DashboardItem-object.html\">Titanium.UI.DashboardItem</a> that was clicked</p>", 
                    "location": "<p>the location object with the properties <tt>x</tt> and <tt>y</tt> of where in the parent view the click was</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>fired when a <a href=\"Titanium.UI.DashboardItem-object.html\">Titanium.UI.DashboardItem</a> is clicked</p>"
            }, 
            {
                "filename": "Titanium.UI.DashboardItem.delete-event", 
                "name": "delete", 
                "properties": {
                    "item": "<p>the <a href=\"Titanium.UI.DashboardItem-object.html\">Titanium.UI.DashboardItem</a> that was deleted</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>fired when a  <a href=\"Titanium.UI.DashboardItem-object.html\">Titanium.UI.DashboardItem</a> is deleted during editings</p>"
            }, 
            {
                "filename": "Titanium.UI.DashboardItem.move-event", 
                "name": "move", 
                "properties": {
                    "item": "<p>the <a href=\"Titanium.UI.DashboardItem-object.html\">Titanium.UI.DashboardItem</a> that was moved</p>", 
                    "items": "<p>the pending data array in the new order (uncommitted)</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>fired when a  <a href=\"Titanium.UI.DashboardItem-object.html\">Titanium.UI.DashboardItem</a> is moved during editing</p>"
            }
        ], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.UI.DashboardItem.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.DashboardItem.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.DashboardItem.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "remove a previously added event listener"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardItem.badge-property", 
                "isClassProperty": false, 
                "name": "badge", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the badge value or <tt>0</tt> to remove the badge</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardItem.canDelete-property", 
                "isClassProperty": false, 
                "name": "canDelete", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>a boolean to indicate if this item can be deleted when it edit mode</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardItem.image-property", 
                "isClassProperty": false, 
                "name": "image", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the URL to the image</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardItem.selectedImage-property", 
                "isClassProperty": false, 
                "name": "selectedImage", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the URL to the image to display when the item is depressed (clicked)</p>"
            }
        ], 
        "returns": null, 
        "since": "1.2", 
        "subtype": "proxy", 
        "type": "object"
    }, 
    "Titanium.UI.DashboardView": {
        "deprecated": null, 
        "description": "<p>The Dashboard View provides a view that supports the ability to have Springboard-like view of icons which can be reordered by dragging and can contain multiple pages of icons in a scrollable view. The Dashboard View is created by the method <a href=\"Titanium.UI.createDashboardView.html\">Titanium.UI.createDashboardView</a>.</p>", 
        "events": [
            {
                "filename": "Titanium.UI.DashboardView.click-event", 
                "name": "click", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "item": "<p>the <a href=\"Titanium.UI.DashboardItem-object.html\">Titanium.UI.DashboardItem</a> that was clicked</p>", 
                    "location": "<p>the location object with the properties <tt>x</tt> and <tt>y</tt> of where in the parent view the click was</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a click (longer than touch) against the view"
            }, 
            {
                "filename": "Titanium.UI.DashboardView.commit-event", 
                "name": "commit", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when editing ends</p>"
            }, 
            {
                "filename": "Titanium.UI.DashboardView.dblclick-event", 
                "name": "dblclick", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double click against the view"
            }, 
            {
                "filename": "Titanium.UI.DashboardView.delete-event", 
                "name": "delete", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "item": "<p>the <a href=\"Titanium.UI.DashboardItem-object.html\">Titanium.UI.DashboardItem</a> that was deleted</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when a  <a href=\"Titanium.UI.DashboardItem-object.html\">Titanium.UI.DashboardItem</a> is deleted during editings</p>"
            }, 
            {
                "filename": "Titanium.UI.DashboardView.doubletap-event", 
                "name": "doubletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double tap against the view"
            }, 
            {
                "filename": "Titanium.UI.DashboardView.edit-event", 
                "name": "edit", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when editing begins</p>"
            }, 
            {
                "filename": "Titanium.UI.DashboardView.move-event", 
                "name": "move", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "item": "<p>the <a href=\"Titanium.UI.DashboardItem-object.html\">Titanium.UI.DashboardItem</a> that was moved</p>", 
                    "items": "<p>the pending data array in the new order (uncommitted)</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when a  <a href=\"Titanium.UI.DashboardItem-object.html\">Titanium.UI.DashboardItem</a> is moved during editing</p>"
            }, 
            {
                "filename": "Titanium.UI.DashboardView.singletap-event", 
                "name": "singletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a single tap against the view"
            }, 
            {
                "filename": "Titanium.UI.DashboardView.swipe-event", 
                "name": "swipe", 
                "properties": {
                    "direction": "direction of the swipe - either left or right", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a swipe (left or right) against the view"
            }, 
            {
                "filename": "Titanium.UI.DashboardView.touchcancel-event", 
                "name": "touchcancel", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is interrupted by the device. this happens in circumenstances such as an incoming call to allow the UI to clean up state."
            }, 
            {
                "filename": "Titanium.UI.DashboardView.touchend-event", 
                "name": "touchend", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is completed"
            }, 
            {
                "filename": "Titanium.UI.DashboardView.touchmove-event", 
                "name": "touchmove", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects movement of a touch.  Event coordinates are always relative to the view in which the initial touch occurred"
            }, 
            {
                "filename": "Titanium.UI.DashboardView.touchstart-event", 
                "name": "touchstart", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects a gesture"
            }, 
            {
                "filename": "Titanium.UI.DashboardView.twofingertap-event", 
                "name": "twofingertap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a two-finger tap against the view"
            }
        ], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.UI.DashboardView.add-method", 
                "name": "add", 
                "parameters": [
                    {
                        "description": "the view to add to this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "add a child to the view hierarchy"
            }, 
            {
                "filename": "Titanium.UI.DashboardView.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.DashboardView.animate-method", 
                "name": "animate", 
                "parameters": [
                    {
                        "description": "either a dictionary of animation properties or an Animation object", 
                        "name": "obj", 
                        "type": "object"
                    }, 
                    {
                        "description": "function to be invoked upon completion of the animation", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "animate the view"
            }, 
            {
                "filename": "Titanium.UI.DashboardView.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.DashboardView.hide-method", 
                "name": "hide", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "hide the view"
            }, 
            {
                "filename": "Titanium.UI.DashboardView.remove-method", 
                "name": "remove", 
                "parameters": [
                    {
                        "description": "the view to remove from this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "remove a previously add view from the view hiearchy"
            }, 
            {
                "filename": "Titanium.UI.DashboardView.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "remove a previously added event listener"
            }, 
            {
                "filename": "Titanium.UI.DashboardView.show-method", 
                "name": "show", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "make the view visible"
            }, 
            {
                "filename": "Titanium.UI.DashboardView.startEditing-method", 
                "name": "startEditing", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "<p>put the dashboard in edit mode</p>"
            }, 
            {
                "filename": "Titanium.UI.DashboardView.stopEditing-method", 
                "name": "stopEditing", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "<p>cancel editing</p>"
            }, 
            {
                "filename": "Titanium.UI.DashboardView.toImage-method", 
                "name": "toImage", 
                "parameters": [
                    {
                        "description": "function to be invoked upon completion. if non-null, this method will be performed asynchronously. if null, it will be performed immediately", 
                        "name": "f", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "1.2", 
                "value": "return a Blob image of the rendered view"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardView.anchorPoint-property", 
                "isClassProperty": false, 
                "name": "anchorPoint", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the anchor point value. anchor specifies the position by which animation should occur. center is 0.5, 0.5"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardView.animatedCenterPoint-property", 
                "isClassProperty": false, 
                "name": "animatedCenterPoint", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "read-only object with x and y properties of where the view is during animation"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardView.backgroundColor-property", 
                "isClassProperty": false, 
                "name": "backgroundColor", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardView.backgroundDisabledColor-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledColor", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background color of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardView.backgroundDisabledImage-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledImage", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background image url of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardView.backgroundFocusedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedColor", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardView.backgroundFocusedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedImage", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardView.backgroundGradient-property", 
                "isClassProperty": false, 
                "name": "backgroundGradient", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a background gradient for the view with the properties: type,startPoint,endPoint,startRadius,endRadius,backfillStart,backfillEnd,colors."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardView.backgroundImage-property", 
                "isClassProperty": false, 
                "name": "backgroundImage", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background image url of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardView.backgroundLeftCap-property", 
                "isClassProperty": false, 
                "name": "backgroundLeftCap", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the left end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The right end cap is therefore computed by adding the size of the left end cap and the middle portion together and then subtracting that value from the width of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardView.backgroundSelectedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedColor", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardView.backgroundSelectedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedImage", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardView.backgroundTopCap-property", 
                "isClassProperty": false, 
                "name": "backgroundTopCap", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the top end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The bottom end cap is therefore computed by adding the size of the top end cap and the middle portion together and then subtracting that value from the height of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardView.borderColor-property", 
                "isClassProperty": false, 
                "name": "borderColor", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the border color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardView.borderRadius-property", 
                "isClassProperty": false, 
                "name": "borderRadius", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border radius of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardView.borderWidth-property", 
                "isClassProperty": false, 
                "name": "borderWidth", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border width of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardView.bottom-property", 
                "isClassProperty": false, 
                "name": "bottom", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view bottom position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardView.center-property", 
                "isClassProperty": false, 
                "name": "center", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the center of the views position relative to the parent view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardView.data-property", 
                "isClassProperty": false, 
                "name": "data", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "array", 
                "type_jsca": "array", 
                "value": "<p>an array of <a href=\"Titanium.UI.DashboardItem-object.html\">Titanium.UI.DashboardItem</a> objects to display in the view</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardView.font-family-property", 
                "isClassProperty": false, 
                "name": "font-family", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font family"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardView.font-size-property", 
                "isClassProperty": false, 
                "name": "font-size", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font size"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardView.font-style-property", 
                "isClassProperty": false, 
                "name": "font-style", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font style, either normal or italics"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardView.font-weight-property", 
                "isClassProperty": false, 
                "name": "font-weight", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font weight, either normal or bold"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardView.height-property", 
                "isClassProperty": false, 
                "name": "height", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view height. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardView.left-property", 
                "isClassProperty": false, 
                "name": "left", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view left position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardView.opacity-property", 
                "isClassProperty": false, 
                "name": "opacity", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the opacity from 0.0-1.0"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardView.right-property", 
                "isClassProperty": false, 
                "name": "right", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view right position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardView.size-property", 
                "isClassProperty": false, 
                "name": "size", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the size of the view as a dictionary of width and height properties"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardView.top-property", 
                "isClassProperty": false, 
                "name": "top", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view top position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardView.touchEnabled-property", 
                "isClassProperty": false, 
                "name": "touchEnabled", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean indicating if the view should receive touch events (true, default) or forward them to peers (false)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardView.transform-property", 
                "isClassProperty": false, 
                "name": "transform", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the transformation matrix to apply to the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardView.visible-property", 
                "isClassProperty": false, 
                "name": "visible", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean of the visibility of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardView.width-property", 
                "isClassProperty": false, 
                "name": "width", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view width. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardView.wobble-property", 
                "isClassProperty": false, 
                "name": "wobble", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>true (default) to wobble during edit, false to disable wobble effect</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.DashboardView.zIndex-property", 
                "isClassProperty": false, 
                "name": "zIndex", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "the z index position relative to other sibling views"
            }
        ], 
        "returns": null, 
        "since": "1.2", 
        "subtype": "view", 
        "type": "object"
    }, 
    "Titanium.UI.EmailDialog": {
        "deprecated": null, 
        "description": "<p>The Email Dialog is created by <a href=\"Titanium.UI.createEmailDialog.html\">Titanium.UI.createEmailDialog</a> and allows you to send in application emails on behalf of the application user.</p>", 
        "events": [
            {
                "filename": "Titanium.UI.EmailDialog.complete-event", 
                "name": "complete", 
                "properties": {
                    "error": "<p>string message of the error or null if successfully sent</p>", 
                    "result": "<p>result status either as SENT, SAVED, CANCELLED or FAILED. (Note: Android result will be SENT even if user discards or saves the message.  SAVED and CANCELLED are not supported on Android.)</p>", 
                    "source": "the source object that fired the event", 
                    "success": "<p>boolean to indicate if the email was successfully sent</p>", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>fired when the email dialog has completed sending the email</p>"
            }
        ], 
        "examples": [
            {
                "code": "<p>In this example, we send an email with a file attachment.</p>\n<pre><code>var emailDialog = Titanium.UI.createEmailDialog()\nemailDialog.subject = \"Hello from Titanium\";\nemailDialog.toRecipients = ['foo@yahoo.com'];\nemailDialog.messageBody = '<b>Appcelerator Titanium Rocks!</b>';\nvar f = Ti.Filesystem.getFile('cricket.wav');\nemailDialog.addAttachment(f);\nemailDialog.open();\n</code></pre>", 
                "description": "Simple Email Dialog with Attachment"
            }
        ], 
        "methods": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.EmailDialog.addAttachment-method", 
                "name": "addAttachment", 
                "parameters": [
                    {
                        "description": "attachment object as either a Blob or File object", 
                        "name": "attachment", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>add an attachment to the email. the attachment can either be a Blob or File object. (Note: Android will only accept one attachment at this time.)</p>"
            }, 
            {
                "filename": "Titanium.UI.EmailDialog.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.EmailDialog.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.EmailDialog.isSupported-method", 
                "name": "isSupported", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>return whether or not sending email is supported</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.EmailDialog.open-method", 
                "name": "open", 
                "parameters": [
                    {
                        "description": "object of animation properties. pass <tt>animated</tt> property (as boolean) to indicate if the dialog should be animated on open.", 
                        "name": "properties", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>open the email dialog. the email dialog itself is a modal window</p>"
            }, 
            {
                "filename": "Titanium.UI.EmailDialog.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously added event listener"
            }
        ], 
        "notes": "", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.EmailDialog.CANCELLED-property", 
                "isClassProperty": true, 
                "name": "CANCELLED", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for the CANCELLED status result</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.EmailDialog.FAILED-property", 
                "isClassProperty": true, 
                "name": "FAILED", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for the FAILED status result</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.EmailDialog.SAVED-property", 
                "isClassProperty": true, 
                "name": "SAVED", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for the SAVED status result</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.EmailDialog.SENT-property", 
                "isClassProperty": true, 
                "name": "SENT", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant for the SENT status result</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.EmailDialog.barColor-property", 
                "isClassProperty": false, 
                "name": "barColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the bar color of the email dialog window when opened</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.EmailDialog.bccRecipients-property", 
                "isClassProperty": false, 
                "name": "bccRecipients", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "array", 
                "type_jsca": "array", 
                "value": "<p>array of email BCC: recipients</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.EmailDialog.ccRecipients-property", 
                "isClassProperty": false, 
                "name": "ccRecipients", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "array", 
                "type_jsca": "array", 
                "value": "<p>array of email CC: recipients</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.EmailDialog.html-property", 
                "isClassProperty": false, 
                "name": "html", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean to indicate whether the email messageBody should be sent as HTML content type. defaults to false. (Android note: you should not use html messages in 1.6: after that is okay.)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.EmailDialog.messageBody-property", 
                "isClassProperty": false, 
                "name": "messageBody", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the email message body</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.EmailDialog.subject-property", 
                "isClassProperty": false, 
                "name": "subject", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the subject line for the email</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.EmailDialog.toRecipients-property", 
                "isClassProperty": false, 
                "name": "toRecipients", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "array", 
                "type_jsca": "array", 
                "value": "<p>array of email recipients</p>"
            }
        ], 
        "returns": null, 
        "since": "0.8", 
        "subtype": "proxy", 
        "type": "object"
    }, 
    "Titanium.UI.ImageView": {
        "deprecated": null, 
        "description": "<p>An Image View is used to display an image or a series of images in an animation. The Image View is created by the method <a href=\"Titanium.UI.createImageView.html\">Titanium.UI.createImageView</a>.</p>", 
        "events": [
            {
                "filename": "Titanium.UI.ImageView.change-event", 
                "name": "change", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "index": "<p>the index of the image frame being displayed</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired for each frame changed during an animation</p>"
            }, 
            {
                "filename": "Titanium.UI.ImageView.click-event", 
                "name": "click", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a click (longer than touch) against the view"
            }, 
            {
                "filename": "Titanium.UI.ImageView.dblclick-event", 
                "name": "dblclick", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double click against the view"
            }, 
            {
                "filename": "Titanium.UI.ImageView.doubletap-event", 
                "name": "doubletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double tap against the view"
            }, 
            {
                "filename": "Titanium.UI.ImageView.load-event", 
                "name": "load", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "state": "<p>either <tt>url</tt> to indicate the url property is loaded or <tt>images</tt> when all the images are loaded</p>", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when either the initial image and/or all of the images in an animation are loaded</p>"
            }, 
            {
                "filename": "Titanium.UI.ImageView.singletap-event", 
                "name": "singletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a single tap against the view"
            }, 
            {
                "filename": "Titanium.UI.ImageView.start-event", 
                "name": "start", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the animation starts</p>"
            }, 
            {
                "filename": "Titanium.UI.ImageView.stop-event", 
                "name": "stop", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the animation stops</p>"
            }, 
            {
                "filename": "Titanium.UI.ImageView.swipe-event", 
                "name": "swipe", 
                "properties": {
                    "direction": "direction of the swipe - either left or right", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a swipe (left or right) against the view"
            }, 
            {
                "filename": "Titanium.UI.ImageView.touchcancel-event", 
                "name": "touchcancel", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is interrupted by the device. this happens in circumenstances such as an incoming call to allow the UI to clean up state."
            }, 
            {
                "filename": "Titanium.UI.ImageView.touchend-event", 
                "name": "touchend", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is completed"
            }, 
            {
                "filename": "Titanium.UI.ImageView.touchmove-event", 
                "name": "touchmove", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects movement of a touch.  Event coordinates are always relative to the view in which the initial touch occurred"
            }, 
            {
                "filename": "Titanium.UI.ImageView.touchstart-event", 
                "name": "touchstart", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects a gesture"
            }, 
            {
                "filename": "Titanium.UI.ImageView.twofingertap-event", 
                "name": "twofingertap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a two-finger tap against the view"
            }
        ], 
        "examples": [
            {
                "code": "<p>In this example, we create a simple image view:</p>\n<pre><code>var image = Titanium.UI.createImageView({url:'myimage.png'});\nview.add(image);\n</code></pre>", 
                "description": "Basic Image View"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.UI.ImageView.add-method", 
                "name": "add", 
                "parameters": [
                    {
                        "description": "the view to add to this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "add a child to the view hierarchy"
            }, 
            {
                "filename": "Titanium.UI.ImageView.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.ImageView.animate-method", 
                "name": "animate", 
                "parameters": [
                    {
                        "description": "either a dictionary of animation properties or an Animation object", 
                        "name": "obj", 
                        "type": "object"
                    }, 
                    {
                        "description": "function to be invoked upon completion of the animation", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "animate the view"
            }, 
            {
                "filename": "Titanium.UI.ImageView.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.ImageView.hide-method", 
                "name": "hide", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "hide the view"
            }, 
            {
                "filename": "Titanium.UI.ImageView.pause-method", 
                "name": "pause", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "<p>pause a started animation.</p>"
            }, 
            {
                "filename": "Titanium.UI.ImageView.remove-method", 
                "name": "remove", 
                "parameters": [
                    {
                        "description": "the view to remove from this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "remove a previously add view from the view hiearchy"
            }, 
            {
                "filename": "Titanium.UI.ImageView.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "remove a previously added event listener"
            }, 
            {
                "filename": "Titanium.UI.ImageView.show-method", 
                "name": "show", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "make the view visible"
            }, 
            {
                "filename": "Titanium.UI.ImageView.start-method", 
                "name": "start", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "<p>start the image animation. this method only works if you set multiple images</p>"
            }, 
            {
                "filename": "Titanium.UI.ImageView.stop-method", 
                "name": "stop", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "<p>stop a started animation and reset the index to the first image</p>"
            }, 
            {
                "filename": "Titanium.UI.ImageView.toBlob-method", 
                "name": "toBlob", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "<p>return the image as a Blob object</p>"
            }, 
            {
                "filename": "Titanium.UI.ImageView.toImage-method", 
                "name": "toImage", 
                "parameters": [
                    {
                        "description": "function to be invoked upon completion. if non-null, this method will be performed asynchronously. if null, it will be performed immediately", 
                        "name": "f", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.9", 
                "value": "return a Blob image of the rendered view"
            }
        ], 
        "notes": "<p>If you specify a <tt>width</tt> and/or <tt>height</tt> property on the image, the image will be scaled to fit into this space if the image is larger.</p>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.anchorPoint-property", 
                "isClassProperty": false, 
                "name": "anchorPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the anchor point value. anchor specifies the position by which animation should occur. center is 0.5, 0.5"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.animatedCenterPoint-property", 
                "isClassProperty": false, 
                "name": "animatedCenterPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "read-only object with x and y properties of where the view is during animation"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.animating-property", 
                "isClassProperty": false, 
                "name": "animating", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>readonly boolean to indicate if the animation is animating</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.backgroundColor-property", 
                "isClassProperty": false, 
                "name": "backgroundColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.backgroundDisabledColor-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background color of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.backgroundDisabledImage-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background image url of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.backgroundFocusedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.backgroundFocusedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.backgroundGradient-property", 
                "isClassProperty": false, 
                "name": "backgroundGradient", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a background gradient for the view with the properties: type,startPoint,endPoint,startRadius,endRadius,backfillStart,backfillEnd,colors."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.backgroundImage-property", 
                "isClassProperty": false, 
                "name": "backgroundImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background image url of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.backgroundLeftCap-property", 
                "isClassProperty": false, 
                "name": "backgroundLeftCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the left end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The right end cap is therefore computed by adding the size of the left end cap and the middle portion together and then subtracting that value from the width of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.backgroundSelectedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.backgroundSelectedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.backgroundTopCap-property", 
                "isClassProperty": false, 
                "name": "backgroundTopCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the top end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The bottom end cap is therefore computed by adding the size of the top end cap and the middle portion together and then subtracting that value from the height of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.borderColor-property", 
                "isClassProperty": false, 
                "name": "borderColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the border color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.borderRadius-property", 
                "isClassProperty": false, 
                "name": "borderRadius", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border radius of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.borderWidth-property", 
                "isClassProperty": false, 
                "name": "borderWidth", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border width of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.bottom-property", 
                "isClassProperty": false, 
                "name": "bottom", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view bottom position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.canScale-property", 
                "isClassProperty": false, 
                "name": "canScale", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>allow image to scale (Android)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.center-property", 
                "isClassProperty": false, 
                "name": "center", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the center of the views position relative to the parent view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.decodeRetries-property", 
                "isClassProperty": false, 
                "name": "decodeRetries", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>number of times to retry decoding the bitmap at this URL (1.7.0 / Android only. default: 5)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.defaultImage-property", 
                "isClassProperty": false, 
                "name": "defaultImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>url to the default image to display while loading a remote image</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.duration-property", 
                "isClassProperty": false, 
                "name": "duration", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>amount of time in milliseconds to animate one cycle</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.enableZoomControls-property", 
                "isClassProperty": false, 
                "name": "enableZoomControls", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>enable zoom controls on Android. Default is true for backward compatibility. (1.3.0)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.focusable-property", 
                "isClassProperty": false, 
                "name": "focusable", 
                "platforms": [
                    "android"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "Set true if you want a view to be focusable when navigating with the trackball or D-Pad. Default: false. (Android Only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.font-family-property", 
                "isClassProperty": false, 
                "name": "font-family", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font family"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.font-size-property", 
                "isClassProperty": false, 
                "name": "font-size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font size"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.font-style-property", 
                "isClassProperty": false, 
                "name": "font-style", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font style, either normal or italics"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.font-weight-property", 
                "isClassProperty": false, 
                "name": "font-weight", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font weight, either normal or bold"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.height-property", 
                "isClassProperty": false, 
                "name": "height", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view height. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.hires-property", 
                "isClassProperty": false, 
                "name": "hires", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>indicates whether or not the source image is in 2x resolution for retina displays.  Use for remote images ONLY.  (iOS)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.image-property", 
                "isClassProperty": false, 
                "name": "image", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>image to display either as string url, Blob or File</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.images-property", 
                "isClassProperty": false, 
                "name": "images", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "array", 
                "type_jsca": "array", 
                "value": "<p>array of images (either as string url, Blob or File) to display in an animation</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.left-property", 
                "isClassProperty": false, 
                "name": "left", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view left position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.opacity-property", 
                "isClassProperty": false, 
                "name": "opacity", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the opacity from 0.0-1.0"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.paused-property", 
                "isClassProperty": false, 
                "name": "paused", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>readonly boolean to indicate if the animation is paused</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.preventDefaultImage-property", 
                "isClassProperty": false, 
                "name": "preventDefaultImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean to indicate if the default image should be displaying while loading a remote image</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.repeatCount-property", 
                "isClassProperty": false, 
                "name": "repeatCount", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>number of times to repeat the image animation</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.reverse-property", 
                "isClassProperty": false, 
                "name": "reverse", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean to indicate if the animation should happen in reverse (from last to first)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.right-property", 
                "isClassProperty": false, 
                "name": "right", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view right position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.size-property", 
                "isClassProperty": false, 
                "name": "size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the size of the view as a dictionary of width and height properties"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.softKeyboardOnFocus-property", 
                "isClassProperty": false, 
                "name": "softKeyboardOnFocus", 
                "platforms": [
                    "android"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "One of Titanium.UI.Android.SOFT_KEYBOARD_DEFAULT_ON_FOCUS, Titanium.UI.Android.SOFT_KEYBOARD_HIDE_ON_FOCUS, or Titanium.UI.Android.SOFT_KEYBOARD_SHOW_ON_FOCUS. (Android only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.top-property", 
                "isClassProperty": false, 
                "name": "top", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view top position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.touchEnabled-property", 
                "isClassProperty": false, 
                "name": "touchEnabled", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean indicating if the view should receive touch events (true, default) or forward them to peers (false)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.transform-property", 
                "isClassProperty": false, 
                "name": "transform", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the transformation matrix to apply to the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.url-property", 
                "isClassProperty": false, 
                "name": "url", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>url to the image to display (NOTE: this property is deprecated. use image instead)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.visible-property", 
                "isClassProperty": false, 
                "name": "visible", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean of the visibility of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.width-property", 
                "isClassProperty": false, 
                "name": "width", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view width. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ImageView.zIndex-property", 
                "isClassProperty": false, 
                "name": "zIndex", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "the z index position relative to other sibling views"
            }
        ], 
        "returns": null, 
        "since": "0.9", 
        "subtype": "view", 
        "type": "object"
    }, 
    "Titanium.UI.Label": {
        "deprecated": null, 
        "description": "<p>A Label is created by the method <a href=\"Titanium.UI.createLabel.html\">Titanium.UI.createLabel</a>.</p>", 
        "events": [
            {
                "filename": "Titanium.UI.Label.click-event", 
                "name": "click", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a click (longer than touch) against the view"
            }, 
            {
                "filename": "Titanium.UI.Label.dblclick-event", 
                "name": "dblclick", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double click against the view"
            }, 
            {
                "filename": "Titanium.UI.Label.doubletap-event", 
                "name": "doubletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double tap against the view"
            }, 
            {
                "filename": "Titanium.UI.Label.singletap-event", 
                "name": "singletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a single tap against the view"
            }, 
            {
                "filename": "Titanium.UI.Label.swipe-event", 
                "name": "swipe", 
                "properties": {
                    "direction": "direction of the swipe - either left or right", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a swipe (left or right) against the view"
            }, 
            {
                "filename": "Titanium.UI.Label.touchcancel-event", 
                "name": "touchcancel", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is interrupted by the device. this happens in circumenstances such as an incoming call to allow the UI to clean up state."
            }, 
            {
                "filename": "Titanium.UI.Label.touchend-event", 
                "name": "touchend", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is completed"
            }, 
            {
                "filename": "Titanium.UI.Label.touchmove-event", 
                "name": "touchmove", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects movement of a touch.  Event coordinates are always relative to the view in which the initial touch occurred"
            }, 
            {
                "filename": "Titanium.UI.Label.touchstart-event", 
                "name": "touchstart", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects a gesture"
            }, 
            {
                "filename": "Titanium.UI.Label.twofingertap-event", 
                "name": "twofingertap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a two-finger tap against the view"
            }
        ], 
        "examples": [
            {
                "code": "<p>Create a label with a nice text shadow, 48px font that's aligned <tt>center</tt> and height <tt>auto</tt>.</p>\n<pre><code>var l2 = Titanium.UI.createLabel({\n    text:'Appcelerator',\n    height:'auto',\n    width:'auto',\n    shadowColor:'#aaa',\n    shadowOffset:{x:5,y:5},\n    color:'#900',\n    font:{fontSize:48},\n    textAlign:'center'\n});\n</code></pre>", 
                "description": "Basic Label"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.UI.Label.add-method", 
                "name": "add", 
                "parameters": [
                    {
                        "description": "the view to add to this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add a child to the view hierarchy"
            }, 
            {
                "filename": "Titanium.UI.Label.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.Label.animate-method", 
                "name": "animate", 
                "parameters": [
                    {
                        "description": "either a dictionary of animation properties or an Animation object", 
                        "name": "obj", 
                        "type": "object"
                    }, 
                    {
                        "description": "function to be invoked upon completion of the animation", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "animate the view"
            }, 
            {
                "filename": "Titanium.UI.Label.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.Label.hide-method", 
                "name": "hide", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "hide the view"
            }, 
            {
                "filename": "Titanium.UI.Label.remove-method", 
                "name": "remove", 
                "parameters": [
                    {
                        "description": "the view to remove from this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously add view from the view hiearchy"
            }, 
            {
                "filename": "Titanium.UI.Label.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously added event listener"
            }, 
            {
                "filename": "Titanium.UI.Label.show-method", 
                "name": "show", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "make the view visible"
            }, 
            {
                "filename": "Titanium.UI.Label.toImage-method", 
                "name": "toImage", 
                "parameters": [
                    {
                        "description": "function to be invoked upon completion. if non-null, this method will be performed asynchronously. if null, it will be performed immediately", 
                        "name": "f", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.8", 
                "value": "return a Blob image of the rendered view"
            }
        ], 
        "notes": "", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.anchorPoint-property", 
                "isClassProperty": false, 
                "name": "anchorPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the anchor point value. anchor specifies the position by which animation should occur. center is 0.5, 0.5"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.animatedCenterPoint-property", 
                "isClassProperty": false, 
                "name": "animatedCenterPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "read-only object with x and y properties of where the view is during animation"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.autoLink-property", 
                "isClassProperty": false, 
                "name": "autoLink", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>One of Ti.UI.Android.LINKIFY constants. Automatically create clickable links for the specified type. (Android Only)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.backgroundColor-property", 
                "isClassProperty": false, 
                "name": "backgroundColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.backgroundDisabledColor-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background color of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.backgroundDisabledImage-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background image url of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.backgroundFocusedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.backgroundFocusedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.backgroundGradient-property", 
                "isClassProperty": false, 
                "name": "backgroundGradient", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a background gradient for the view with the properties: type,startPoint,endPoint,startRadius,endRadius,backfillStart,backfillEnd,colors."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.backgroundImage-property", 
                "isClassProperty": false, 
                "name": "backgroundImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background image url of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.backgroundLeftCap-property", 
                "isClassProperty": false, 
                "name": "backgroundLeftCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the left end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The right end cap is therefore computed by adding the size of the left end cap and the middle portion together and then subtracting that value from the width of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.backgroundPaddingBottom-property", 
                "isClassProperty": false, 
                "name": "backgroundPaddingBottom", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the number of pixels to extend the background image past the label on the bottom</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.backgroundPaddingLeft-property", 
                "isClassProperty": false, 
                "name": "backgroundPaddingLeft", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the number of pixels to extend the background image past the label on the left</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.backgroundPaddingRight-property", 
                "isClassProperty": false, 
                "name": "backgroundPaddingRight", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the number of pixels to extend the background image past the label on the right</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.backgroundPaddingTop-property", 
                "isClassProperty": false, 
                "name": "backgroundPaddingTop", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the number of pixels to extend the background image past the label on the top</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.backgroundSelectedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.backgroundSelectedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.backgroundTopCap-property", 
                "isClassProperty": false, 
                "name": "backgroundTopCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the top end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The bottom end cap is therefore computed by adding the size of the top end cap and the middle portion together and then subtracting that value from the height of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.borderColor-property", 
                "isClassProperty": false, 
                "name": "borderColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the border color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.borderRadius-property", 
                "isClassProperty": false, 
                "name": "borderRadius", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border radius of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.borderWidth-property", 
                "isClassProperty": false, 
                "name": "borderWidth", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border width of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.bottom-property", 
                "isClassProperty": false, 
                "name": "bottom", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view bottom position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.center-property", 
                "isClassProperty": false, 
                "name": "center", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the center of the views position relative to the parent view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.color-property", 
                "isClassProperty": false, 
                "name": "color", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the color of the label</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.ellipsize-property", 
                "isClassProperty": false, 
                "name": "ellipsize", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "bool", 
                "type_jsca": "bool", 
                "value": "<p>Turn on/off the addition of ellipses at the end of the label if the text is too large to fit. (Android Only, default false)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.focusable-property", 
                "isClassProperty": false, 
                "name": "focusable", 
                "platforms": [
                    "android"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "Set true if you want a view to be focusable when navigating with the trackball or D-Pad. Default: false. (Android Only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.font-property", 
                "isClassProperty": false, 
                "name": "font", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>the label font object properties</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.font-family-property", 
                "isClassProperty": false, 
                "name": "font-family", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font family"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.font-size-property", 
                "isClassProperty": false, 
                "name": "font-size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font size"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.font-style-property", 
                "isClassProperty": false, 
                "name": "font-style", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font style, either normal or italics"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.font-weight-property", 
                "isClassProperty": false, 
                "name": "font-weight", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font weight, either normal or bold"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.height-property", 
                "isClassProperty": false, 
                "name": "height", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view height. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.highlightedColor-property", 
                "isClassProperty": false, 
                "name": "highlightedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the color of the label when in the highlighted state</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.html-property", 
                "isClassProperty": false, 
                "name": "html", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>simple html formatting. (Android Only)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.left-property", 
                "isClassProperty": false, 
                "name": "left", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view left position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.minimumFontSize-property", 
                "isClassProperty": false, 
                "name": "minimumFontSize", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the minimum size of the font when the font is sized based on the contents.  Enables font scaling to fit and forces the label content to be limited to a single line</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.opacity-property", 
                "isClassProperty": false, 
                "name": "opacity", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the opacity from 0.0-1.0"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.right-property", 
                "isClassProperty": false, 
                "name": "right", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view right position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.shadowColor-property", 
                "isClassProperty": false, 
                "name": "shadowColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the text shadow color</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.shadowOffset-property", 
                "isClassProperty": false, 
                "name": "shadowOffset", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>the shadow offset as a dictionary with the properties <tt>x</tt> and <tt>y</tt></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.size-property", 
                "isClassProperty": false, 
                "name": "size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the size of the view as a dictionary of width and height properties"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.softKeyboardOnFocus-property", 
                "isClassProperty": false, 
                "name": "softKeyboardOnFocus", 
                "platforms": [
                    "android"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "One of Titanium.UI.Android.SOFT_KEYBOARD_DEFAULT_ON_FOCUS, Titanium.UI.Android.SOFT_KEYBOARD_HIDE_ON_FOCUS, or Titanium.UI.Android.SOFT_KEYBOARD_SHOW_ON_FOCUS. (Android only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.text-property", 
                "isClassProperty": false, 
                "name": "text", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the text of the label</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.textAlign-property", 
                "isClassProperty": false, 
                "name": "textAlign", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string,int", 
                "type_jsca": "string,int", 
                "value": "<p>the alignment constant or string value such as <tt>left</tt>, <tt>center</tt> or <tt>right</tt></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.textid-property", 
                "isClassProperty": false, 
                "name": "textid", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the key in the locale file to use for the text property</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.top-property", 
                "isClassProperty": false, 
                "name": "top", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view top position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.touchEnabled-property", 
                "isClassProperty": false, 
                "name": "touchEnabled", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean indicating if the view should receive touch events (true, default) or forward them to peers (false)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.transform-property", 
                "isClassProperty": false, 
                "name": "transform", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the transformation matrix to apply to the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.visible-property", 
                "isClassProperty": false, 
                "name": "visible", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean of the visibility of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.width-property", 
                "isClassProperty": false, 
                "name": "width", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view width. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.wordWrap-property", 
                "isClassProperty": false, 
                "name": "wordWrap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "bool", 
                "type_jsca": "bool", 
                "value": "<p>Turn on/off word wrapping in the label. (Android Only - default true)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Label.zIndex-property", 
                "isClassProperty": false, 
                "name": "zIndex", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "the z index position relative to other sibling views"
            }
        ], 
        "returns": null, 
        "since": "0.8", 
        "subtype": "view", 
        "type": "object"
    }, 
    "Titanium.UI.OptionDialog": {
        "deprecated": null, 
        "description": "<p>The Option Dialog is created by <a href=\"Titanium.UI.createOptionDialog.html\">Titanium.UI.createOptionDialog</a> and allows you to show a modal dialog of one or more options to the user.</p>", 
        "events": [
            {
                "filename": "Titanium.UI.OptionDialog.click-event", 
                "name": "click", 
                "properties": {
                    "button": "<p>boolean to indicate that the index refers to a button on the dialog and not an item. (Android)</p>", 
                    "cancel": "<p>the index of the cancel button</p>", 
                    "destructive": "<p>the index of the destructive button</p>", 
                    "index": "<p>the button index that was pressed</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired"
                }, 
                "value": "<p>fired when a button in the dialog is clicked</p>"
            }
        ], 
        "examples": [
            {
                "code": "<p>In this example, we show a simple option dialog.</p>\n<pre><code>var dialog = Titanium.UI.createOptionDialog({\n    title: 'Hello',\n    options: ['Option 1','Option 2'],\n    cancel:1\n});\ndialog.show();\n</code></pre>", 
                "description": "Simple Options Dialog with 2 Options"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.UI.OptionDialog.show-method", 
                "name": "show", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>cause the dialog to become visible</p>"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.OptionDialog.androidView-property", 
                "isClassProperty": false, 
                "name": "androidView", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>A Titanium.UI.View. Allows for arbitrary contents inside a native dialog. Works for any dialog. (Android)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.OptionDialog.cancel-property", 
                "isClassProperty": false, 
                "name": "cancel", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>an index to indicate which button should be the cancel button. If no button should be the cancel button, use -1. If there is a cancel button, it MUST be the last button for use on iPad.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.OptionDialog.destructive-property", 
                "isClassProperty": false, 
                "name": "destructive", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the destructive button (indicated by a visual clue in the UI)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.OptionDialog.options-property", 
                "isClassProperty": false, 
                "name": "options", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "array", 
                "type_jsca": "array", 
                "value": "<p>array of button names as strings</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.OptionDialog.selectedIndex-property", 
                "isClassProperty": false, 
                "name": "selectedIndex", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>set an initially selected option. Only valid when options has been specified. (Android only)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.OptionDialog.title-property", 
                "isClassProperty": false, 
                "name": "title", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the title of the dialog</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.OptionDialog.titleid-property", 
                "isClassProperty": false, 
                "name": "titleid", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the key in the locale file to use for the title property</p>"
            }
        ], 
        "returns": null, 
        "since": "0.8", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.UI.Picker": {
        "deprecated": null, 
        "description": "<p>A Picker is created by the method <a href=\"Titanium.UI.createPicker\">Titanium.UI.createPicker</a>.  A Picker can be used to select one or more fixed values.</p>", 
        "events": [
            {
                "filename": "Titanium.UI.Picker.change-event", 
                "name": "change", 
                "properties": {
                    "column": "<p>the column object</p>", 
                    "columnIndex": "<p>the selected column index</p>", 
                    "row": "<p>the row object</p>", 
                    "rowIndex": "<p>the selected row index</p>", 
                    "selectedValue": "<p>(plain picker only) the array of selected values, one element per column in the picker.</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "value": "<p>(date/time pickers only) the selected date/time value.</p>"
                }, 
                "value": "<p>fired when the value of a picker row and/or column changes</p>"
            }
        ], 
        "examples": [
            {
                "code": "<p>In this basic picker example, we create a one column picker with 4 rows. </p>\n<pre><code>var picker = Titanium.UI.createPicker();\nvar data = [];\ndata[0]=Titanium.UI.createPickerRow({title:'Bananas'});\ndata[1]=Titanium.UI.createPickerRow({title:'Strawberries'});\ndata[2]=Titanium.UI.createPickerRow({title:'Mangos'});\ndata[3]=Titanium.UI.createPickerRow({title:'Grapes'});\npicker.add(data);\n</code></pre>", 
                "description": "Basic Single Column Picker"
            }, 
            {
                "code": "<p>In this example, we use a custom label for each row in a column.</p>\n<pre><code>var picker = Titanium.UI.createPicker();\nvar row = Titanium.UI.createPickerRow();\nvar label = Titanium.UI.createLabel({\n    text:text,\n    font:{fontSize:24,fontWeight:'bold'},\n    color:text,\n    width:'auto',\n    height:'auto'\n});\nrow.add(label);\npicker.add(row);\n</code></pre>", 
                "description": "Custom View for Row"
            }
        ], 
        "methods": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Picker.add-method", 
                "name": "add", 
                "parameters": [
                    {
                        "description": "add an array of rows, a single row or a column to the picker", 
                        "name": "data", 
                        "type": "array,object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>add an array of rows, a single row or a column to the picker</p>"
            }, 
            {
                "filename": "Titanium.UI.Picker.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.Picker.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Picker.getSelectedRow-method", 
                "name": "getSelectedRow", 
                "parameters": [
                    {
                        "description": "for the column index, return the row object or nil if not found", 
                        "name": "index", 
                        "type": "int"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.8", 
                "value": "<p>get the selected row object for column</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Picker.reloadColumn-method", 
                "name": "reloadColumn", 
                "parameters": [
                    {
                        "description": "new column to load", 
                        "name": "column", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>causes the picker to reload the values from the new column.</p>"
            }, 
            {
                "filename": "Titanium.UI.Picker.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously added event listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Picker.setSelectedRow-method", 
                "name": "setSelectedRow", 
                "parameters": [
                    {
                        "description": "the column index", 
                        "name": "column", 
                        "type": "int"
                    }, 
                    {
                        "description": "the row index", 
                        "name": "row", 
                        "type": "int"
                    }, 
                    {
                        "description": "boolean to indicate if the selection should be animated (default) (optional)", 
                        "name": "animated", 
                        "type": "boolean"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>set the column's row to the selected state</p>"
            }
        ], 
        "notes": "<p>For Android, note the <tt>useSpinner</tt> property above.  By default, when you create a picker you will get Android's native picker control, which looks more like the classic \"dropdown\" widget.  If you'd prefer to use something that looks more like iOS's picker -- which looks like one or more spinning wheels --, you can set <tt>useSpinner: true</tt>.</p>\n<p>Titanium's Android picker control (both the native and the <tt>useSpinner</tt> variety) does not support/display views that are added to picker rows.  Only the <tt>title</tt> of the row will be displayed within the control.\nTitanium for Android does not support the DateTime or Count Down Timer picker type.</p>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Picker.columns-property", 
                "isClassProperty": false, 
                "name": "columns", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "array", 
                "type_jsca": "array", 
                "value": "<p>array of column values</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Picker.countDownDuration-property", 
                "isClassProperty": false, 
                "name": "countDownDuration", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "double", 
                "type_jsca": "double", 
                "value": "<p>the duration value in milliseconds for count down timer pickers. (Note that Titanium's Android implementation does not support the countdown timer.)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Picker.format24-property", 
                "isClassProperty": false, 
                "name": "format24", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>(Android only, applicable only to the <a href=\"Titanium.UI.PICKER_TYPE_TIME.html\">Titanium.UI.PICKER_TYPE_TIME</a> picker.)  If true, a 24-hour cloc will be used, with hours 0 through 23.  If false, a 12-hour clock will be used, with hours 1 through 12 and am/pm controls.  For reasons of backward compatibility, the default value depends on the type of time picker being used.  For the native time picker (when \"useSpinner\" is either un-set or false), the default is false.  For the spinner-style time picker, the default is true.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Picker.locale-property", 
                "isClassProperty": false, 
                "name": "locale", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the locale used for displaying Date/Time pickers values</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Picker.minDate-property", 
                "isClassProperty": false, 
                "name": "minDate", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "date", 
                "type_jsca": "date", 
                "value": "<p>the minimum Date/Time for value for date pickers</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Picker.minuteInterval-property", 
                "isClassProperty": false, 
                "name": "minuteInterval", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>property to set the interval displayed by the minutes wheel (for example, 15 minutes). The interval value must be evenly divided into 60; if it is not, the default value is used. The default and minimum values are 1; the maximum value is 30.  (Not currently supported on Android.)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Picker.selectionIndicator-property", 
                "isClassProperty": false, 
                "name": "selectionIndicator", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>for basic picker, boolean value to indicate whether the visual selection style is shown. On the iPhone, this is a blue selected bar.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Picker.type-property", 
                "isClassProperty": false, 
                "name": "type", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the type constant for the picker. One of <a href=\"Titanium.UI.PICKER_TYPE_PLAIN.html\">Titanium.UI.PICKER_TYPE_PLAIN</a> (default), <a href=\"Titanium.UI.PICKER_TYPE_DATE_AND_TIME.html\">Titanium.UI.PICKER_TYPE_DATE_AND_TIME</a>, <a href=\"Titanium.UI.PICKER_TYPE_DATE.html\">Titanium.UI.PICKER_TYPE_DATE</a>, <a href=\"Titanium.UI.PICKER_TYPE_TIME.html\">Titanium.UI.PICKER_TYPE_TIME</a> or <a href=\"Titanium.UI.PICKER_TYPE_COUNT_DOWN_TIMER.html\">Titanium.UI.PICKER_TYPE_COUNT_DOWN_TIMER</a>. (Note that Titanium's Android implementation does not support the countdown timer or date+time varieties.)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Picker.useSpinner-property", 
                "isClassProperty": false, 
                "name": "useSpinner", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>(Android only, default false.) An indicator that you wish to use a non-native Android control that looks and behaves more like the iOS picker in the sense that the user selects values by spinning a wheel.  (The native Android spinner is more like a conventional \"dropdown\".)  Note that this option works both plain pickers, date pickers and time pickers.  Set it preferably immediately when creating the picker, i.e., <a href=\"Titanium.UI.createPicker({useSpinner:true});.html\">Titanium.UI.createPicker({useSpinner:true});</a>, but definitely before <tt>.add()</tt>ing the picker to its parent.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Picker.value-property", 
                "isClassProperty": false, 
                "name": "value", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "date", 
                "type_jsca": "date", 
                "value": "<p>the Date/Time value for date pickers</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Picker.visibleItems-property", 
                "isClassProperty": false, 
                "name": "visibleItems", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>(Android only.)  This is relevant only if you set <tt>useSpinner</tt> to <tt>true</tt>, and it is relevant only for the plain picker (not date/time).  By default, the spinner-style Android picker will show 5 rows: the one in the middle which is selected, and then 2 above and below.  You can set this to allow more (use an odd number to be sure the selected row is in the middle.)</p>"
            }
        ], 
        "returns": null, 
        "since": "0.8", 
        "subtype": "proxy", 
        "type": "object"
    }, 
    "Titanium.UI.PickerColumn": {
        "deprecated": null, 
        "description": "<p>The picker row object created by <a href=\"Titanium.UI.createPickerColumn\">Titanium.UI.createPickerColumn</a>.</p>", 
        "events": [
            {
                "filename": "Titanium.UI.PickerColumn.click-event", 
                "name": "click", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a click (longer than touch) against the view"
            }, 
            {
                "filename": "Titanium.UI.PickerColumn.dblclick-event", 
                "name": "dblclick", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double click against the view"
            }, 
            {
                "filename": "Titanium.UI.PickerColumn.doubletap-event", 
                "name": "doubletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double tap against the view"
            }, 
            {
                "filename": "Titanium.UI.PickerColumn.singletap-event", 
                "name": "singletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a single tap against the view"
            }, 
            {
                "filename": "Titanium.UI.PickerColumn.swipe-event", 
                "name": "swipe", 
                "properties": {
                    "direction": "direction of the swipe - either left or right", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a swipe (left or right) against the view"
            }, 
            {
                "filename": "Titanium.UI.PickerColumn.touchcancel-event", 
                "name": "touchcancel", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is interrupted by the device. this happens in circumenstances such as an incoming call to allow the UI to clean up state."
            }, 
            {
                "filename": "Titanium.UI.PickerColumn.touchend-event", 
                "name": "touchend", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is completed"
            }, 
            {
                "filename": "Titanium.UI.PickerColumn.touchmove-event", 
                "name": "touchmove", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects movement of a touch.  Event coordinates are always relative to the view in which the initial touch occurred"
            }, 
            {
                "filename": "Titanium.UI.PickerColumn.touchstart-event", 
                "name": "touchstart", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects a gesture"
            }, 
            {
                "filename": "Titanium.UI.PickerColumn.twofingertap-event", 
                "name": "twofingertap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a two-finger tap against the view"
            }
        ], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.UI.PickerColumn.add-method", 
                "name": "add", 
                "parameters": [
                    {
                        "description": "the view to add to this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "add a child to the view hierarchy"
            }, 
            {
                "filename": "Titanium.UI.PickerColumn.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.addRow-method", 
                "name": "addRow", 
                "parameters": [
                    {
                        "description": "The row to add.", 
                        "name": "row", 
                        "type": "<a href=\"Titanium.UI.PickerRow.html\">Titanium.UI.PickerRow</a>"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "<p>add a row to the column.</p>"
            }, 
            {
                "filename": "Titanium.UI.PickerColumn.animate-method", 
                "name": "animate", 
                "parameters": [
                    {
                        "description": "either a dictionary of animation properties or an Animation object", 
                        "name": "obj", 
                        "type": "object"
                    }, 
                    {
                        "description": "function to be invoked upon completion of the animation", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "animate the view"
            }, 
            {
                "filename": "Titanium.UI.PickerColumn.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.PickerColumn.hide-method", 
                "name": "hide", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "hide the view"
            }, 
            {
                "filename": "Titanium.UI.PickerColumn.remove-method", 
                "name": "remove", 
                "parameters": [
                    {
                        "description": "the view to remove from this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "remove a previously add view from the view hiearchy"
            }, 
            {
                "filename": "Titanium.UI.PickerColumn.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "remove a previously added event listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.removeRow-method", 
                "name": "removeRow", 
                "parameters": [
                    {
                        "description": "The row to remove.", 
                        "name": "row", 
                        "type": "<a href=\"Titanium.UI.PickerRow.html\">Titanium.UI.PickerRow</a>"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "<p>remove a row from the column.</p>"
            }, 
            {
                "filename": "Titanium.UI.PickerColumn.show-method", 
                "name": "show", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "make the view visible"
            }, 
            {
                "filename": "Titanium.UI.PickerColumn.toImage-method", 
                "name": "toImage", 
                "parameters": [
                    {
                        "description": "function to be invoked upon completion. if non-null, this method will be performed asynchronously. if null, it will be performed immediately", 
                        "name": "f", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.9", 
                "value": "return a Blob image of the rendered view"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.anchorPoint-property", 
                "isClassProperty": false, 
                "name": "anchorPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the anchor point value. anchor specifies the position by which animation should occur. center is 0.5, 0.5"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.animatedCenterPoint-property", 
                "isClassProperty": false, 
                "name": "animatedCenterPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "read-only object with x and y properties of where the view is during animation"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.backgroundColor-property", 
                "isClassProperty": false, 
                "name": "backgroundColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.backgroundDisabledColor-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background color of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.backgroundDisabledImage-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background image url of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.backgroundFocusedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.backgroundFocusedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.backgroundGradient-property", 
                "isClassProperty": false, 
                "name": "backgroundGradient", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a background gradient for the view with the properties: type,startPoint,endPoint,startRadius,endRadius,backfillStart,backfillEnd,colors."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.backgroundImage-property", 
                "isClassProperty": false, 
                "name": "backgroundImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background image url of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.backgroundLeftCap-property", 
                "isClassProperty": false, 
                "name": "backgroundLeftCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the left end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The right end cap is therefore computed by adding the size of the left end cap and the middle portion together and then subtracting that value from the width of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.backgroundSelectedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.backgroundSelectedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.backgroundTopCap-property", 
                "isClassProperty": false, 
                "name": "backgroundTopCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the top end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The bottom end cap is therefore computed by adding the size of the top end cap and the middle portion together and then subtracting that value from the height of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.borderColor-property", 
                "isClassProperty": false, 
                "name": "borderColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the border color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.borderRadius-property", 
                "isClassProperty": false, 
                "name": "borderRadius", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border radius of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.borderWidth-property", 
                "isClassProperty": false, 
                "name": "borderWidth", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border width of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.bottom-property", 
                "isClassProperty": false, 
                "name": "bottom", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view bottom position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.center-property", 
                "isClassProperty": false, 
                "name": "center", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the center of the views position relative to the parent view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.focusable-property", 
                "isClassProperty": false, 
                "name": "focusable", 
                "platforms": [
                    "android"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "Set true if you want a view to be focusable when navigating with the trackball or D-Pad. Default: false. (Android Only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.font-family-property", 
                "isClassProperty": false, 
                "name": "font-family", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font family"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.font-size-property", 
                "isClassProperty": false, 
                "name": "font-size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font size"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.font-style-property", 
                "isClassProperty": false, 
                "name": "font-style", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font style, either normal or italics"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.font-weight-property", 
                "isClassProperty": false, 
                "name": "font-weight", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font weight, either normal or bold"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.height-property", 
                "isClassProperty": false, 
                "name": "height", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view height. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.left-property", 
                "isClassProperty": false, 
                "name": "left", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view left position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.opacity-property", 
                "isClassProperty": false, 
                "name": "opacity", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the opacity from 0.0-1.0"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.right-property", 
                "isClassProperty": false, 
                "name": "right", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view right position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.rowCount-property", 
                "isClassProperty": false, 
                "name": "rowCount", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>number of rows in the column (readonly)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.rows-property", 
                "isClassProperty": false, 
                "name": "rows", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "array", 
                "type_jsca": "array", 
                "value": "<p>an array of rows</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.size-property", 
                "isClassProperty": false, 
                "name": "size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the size of the view as a dictionary of width and height properties"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.softKeyboardOnFocus-property", 
                "isClassProperty": false, 
                "name": "softKeyboardOnFocus", 
                "platforms": [
                    "android"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "One of Titanium.UI.Android.SOFT_KEYBOARD_DEFAULT_ON_FOCUS, Titanium.UI.Android.SOFT_KEYBOARD_HIDE_ON_FOCUS, or Titanium.UI.Android.SOFT_KEYBOARD_SHOW_ON_FOCUS. (Android only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.top-property", 
                "isClassProperty": false, 
                "name": "top", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view top position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.touchEnabled-property", 
                "isClassProperty": false, 
                "name": "touchEnabled", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean indicating if the view should receive touch events (true, default) or forward them to peers (false)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.transform-property", 
                "isClassProperty": false, 
                "name": "transform", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the transformation matrix to apply to the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.visible-property", 
                "isClassProperty": false, 
                "name": "visible", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean of the visibility of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.width-property", 
                "isClassProperty": false, 
                "name": "width", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view width. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerColumn.zIndex-property", 
                "isClassProperty": false, 
                "name": "zIndex", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "the z index position relative to other sibling views"
            }
        ], 
        "returns": null, 
        "since": "0.9", 
        "subtype": "view", 
        "type": "object"
    }, 
    "Titanium.UI.PickerRow": {
        "deprecated": null, 
        "description": "<p>The picker row object created by <a href=\"Titanium.UI.createPickerRow\">Titanium.UI.createPickerRow</a>.</p>", 
        "events": [
            {
                "filename": "Titanium.UI.PickerRow.click-event", 
                "name": "click", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a click (longer than touch) against the view"
            }, 
            {
                "filename": "Titanium.UI.PickerRow.dblclick-event", 
                "name": "dblclick", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double click against the view"
            }, 
            {
                "filename": "Titanium.UI.PickerRow.doubletap-event", 
                "name": "doubletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double tap against the view"
            }, 
            {
                "filename": "Titanium.UI.PickerRow.singletap-event", 
                "name": "singletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a single tap against the view"
            }, 
            {
                "filename": "Titanium.UI.PickerRow.swipe-event", 
                "name": "swipe", 
                "properties": {
                    "direction": "direction of the swipe - either left or right", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a swipe (left or right) against the view"
            }, 
            {
                "filename": "Titanium.UI.PickerRow.touchcancel-event", 
                "name": "touchcancel", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is interrupted by the device. this happens in circumenstances such as an incoming call to allow the UI to clean up state."
            }, 
            {
                "filename": "Titanium.UI.PickerRow.touchend-event", 
                "name": "touchend", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is completed"
            }, 
            {
                "filename": "Titanium.UI.PickerRow.touchmove-event", 
                "name": "touchmove", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects movement of a touch.  Event coordinates are always relative to the view in which the initial touch occurred"
            }, 
            {
                "filename": "Titanium.UI.PickerRow.touchstart-event", 
                "name": "touchstart", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects a gesture"
            }, 
            {
                "filename": "Titanium.UI.PickerRow.twofingertap-event", 
                "name": "twofingertap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a two-finger tap against the view"
            }
        ], 
        "examples": [
            {
                "code": "<p>Since the row object is itself a view, you can add views and widgets to it to customize the the rows display. In the example below, we create a custom label for the row.</p>\n<pre><code>var row = Ti.UI.createPickerRow();\nvar label = Ti.UI.createLabel({\n    text:text,\n    font:{fontSize:24,fontWeight:'bold'},\n    color:text,\n    width:'auto',\n    height:'auto'\n});\nrow.add(label);\npicker.add(row);\n</code></pre>", 
                "description": "Custom Views for a picker row"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.UI.PickerRow.add-method", 
                "name": "add", 
                "parameters": [
                    {
                        "description": "the view to add to this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "add a child to the view hierarchy"
            }, 
            {
                "filename": "Titanium.UI.PickerRow.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.PickerRow.animate-method", 
                "name": "animate", 
                "parameters": [
                    {
                        "description": "either a dictionary of animation properties or an Animation object", 
                        "name": "obj", 
                        "type": "object"
                    }, 
                    {
                        "description": "function to be invoked upon completion of the animation", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "animate the view"
            }, 
            {
                "filename": "Titanium.UI.PickerRow.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.PickerRow.hide-method", 
                "name": "hide", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "hide the view"
            }, 
            {
                "filename": "Titanium.UI.PickerRow.remove-method", 
                "name": "remove", 
                "parameters": [
                    {
                        "description": "the view to remove from this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "remove a previously add view from the view hiearchy"
            }, 
            {
                "filename": "Titanium.UI.PickerRow.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "remove a previously added event listener"
            }, 
            {
                "filename": "Titanium.UI.PickerRow.show-method", 
                "name": "show", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "make the view visible"
            }, 
            {
                "filename": "Titanium.UI.PickerRow.toImage-method", 
                "name": "toImage", 
                "parameters": [
                    {
                        "description": "function to be invoked upon completion. if non-null, this method will be performed asynchronously. if null, it will be performed immediately", 
                        "name": "f", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.9", 
                "value": "return a Blob image of the rendered view"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.anchorPoint-property", 
                "isClassProperty": false, 
                "name": "anchorPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the anchor point value. anchor specifies the position by which animation should occur. center is 0.5, 0.5"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.animatedCenterPoint-property", 
                "isClassProperty": false, 
                "name": "animatedCenterPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "read-only object with x and y properties of where the view is during animation"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.backgroundColor-property", 
                "isClassProperty": false, 
                "name": "backgroundColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.backgroundDisabledColor-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background color of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.backgroundDisabledImage-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background image url of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.backgroundFocusedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.backgroundFocusedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.backgroundGradient-property", 
                "isClassProperty": false, 
                "name": "backgroundGradient", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a background gradient for the view with the properties: type,startPoint,endPoint,startRadius,endRadius,backfillStart,backfillEnd,colors."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.backgroundImage-property", 
                "isClassProperty": false, 
                "name": "backgroundImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background image url of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.backgroundLeftCap-property", 
                "isClassProperty": false, 
                "name": "backgroundLeftCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the left end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The right end cap is therefore computed by adding the size of the left end cap and the middle portion together and then subtracting that value from the width of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.backgroundSelectedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.backgroundSelectedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.backgroundTopCap-property", 
                "isClassProperty": false, 
                "name": "backgroundTopCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the top end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The bottom end cap is therefore computed by adding the size of the top end cap and the middle portion together and then subtracting that value from the height of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.borderColor-property", 
                "isClassProperty": false, 
                "name": "borderColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the border color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.borderRadius-property", 
                "isClassProperty": false, 
                "name": "borderRadius", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border radius of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.borderWidth-property", 
                "isClassProperty": false, 
                "name": "borderWidth", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border width of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.bottom-property", 
                "isClassProperty": false, 
                "name": "bottom", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view bottom position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.center-property", 
                "isClassProperty": false, 
                "name": "center", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the center of the views position relative to the parent view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.focusable-property", 
                "isClassProperty": false, 
                "name": "focusable", 
                "platforms": [
                    "android"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "Set true if you want a view to be focusable when navigating with the trackball or D-Pad. Default: false. (Android Only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.font-family-property", 
                "isClassProperty": false, 
                "name": "font-family", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font family"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.font-size-property", 
                "isClassProperty": false, 
                "name": "font-size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font size"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.font-style-property", 
                "isClassProperty": false, 
                "name": "font-style", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font style, either normal or italics"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.font-weight-property", 
                "isClassProperty": false, 
                "name": "font-weight", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font weight, either normal or bold"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.fontSize-property", 
                "isClassProperty": false, 
                "name": "fontSize", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the font size when displaying the text. ignored when using a custom view</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.height-property", 
                "isClassProperty": false, 
                "name": "height", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view height. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.left-property", 
                "isClassProperty": false, 
                "name": "left", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view left position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.opacity-property", 
                "isClassProperty": false, 
                "name": "opacity", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the opacity from 0.0-1.0"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.right-property", 
                "isClassProperty": false, 
                "name": "right", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view right position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.selected-property", 
                "isClassProperty": false, 
                "name": "selected", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>when used in the constructor, set the row to selected on initial display</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.size-property", 
                "isClassProperty": false, 
                "name": "size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the size of the view as a dictionary of width and height properties"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.softKeyboardOnFocus-property", 
                "isClassProperty": false, 
                "name": "softKeyboardOnFocus", 
                "platforms": [
                    "android"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "One of Titanium.UI.Android.SOFT_KEYBOARD_DEFAULT_ON_FOCUS, Titanium.UI.Android.SOFT_KEYBOARD_HIDE_ON_FOCUS, or Titanium.UI.Android.SOFT_KEYBOARD_SHOW_ON_FOCUS. (Android only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.title-property", 
                "isClassProperty": false, 
                "name": "title", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the display text</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.top-property", 
                "isClassProperty": false, 
                "name": "top", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view top position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.touchEnabled-property", 
                "isClassProperty": false, 
                "name": "touchEnabled", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean indicating if the view should receive touch events (true, default) or forward them to peers (false)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.transform-property", 
                "isClassProperty": false, 
                "name": "transform", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the transformation matrix to apply to the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.visible-property", 
                "isClassProperty": false, 
                "name": "visible", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean of the visibility of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.width-property", 
                "isClassProperty": false, 
                "name": "width", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view width. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.PickerRow.zIndex-property", 
                "isClassProperty": false, 
                "name": "zIndex", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "the z index position relative to other sibling views"
            }
        ], 
        "returns": null, 
        "since": "0.9", 
        "subtype": "view", 
        "type": "object"
    }, 
    "Titanium.UI.ProgressBar": {
        "deprecated": null, 
        "description": "<p>A Progress Bar is created by the method <a href=\"Titanium.UI.createProgressBar.html\">Titanium.UI.createProgressBar</a>.</p>", 
        "events": [], 
        "examples": [
            {
                "code": "<p>In this example we create a progress bar with the min value of <tt>0</tt> and the max value of <tt>10</tt> and the current value of <tt>0</tt>.  The change the value of the progress bar to cause it to move, we would set the <tt>value</tt> property to a value between <tt>min</tt> and <tt>max</tt>.</p>\n<pre><code>var pb=Titanium.UI.createProgressBar({\n    width:250,\n    min:0,\n    max:10,\n    value:0,\n    color:'#fff',\n    message:'Downloading 0 of 10',\n    font:{fontSize:14, fontWeight:'bold'},\n    style:Titanium.UI.iPhone.ProgressBarStyle.PLAIN,\n});\n</code></pre>", 
                "description": "Simple Progress Bar"
            }
        ], 
        "methods": [], 
        "notes": "<p>For iPhone, progress bar styles are constants defined in <a href=\"Titanium.UI.iPhone.ProgressBarStyle\">Titanium.UI.iPhone.ProgressBarStyle</a>.</p>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ProgressBar.color-property", 
                "isClassProperty": false, 
                "name": "color", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the color of the progress bar text</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ProgressBar.font-property", 
                "isClassProperty": false, 
                "name": "font", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>the font object for the progress bar text</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ProgressBar.max-property", 
                "isClassProperty": false, 
                "name": "max", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>the maximum value of the progress bar</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ProgressBar.message-property", 
                "isClassProperty": false, 
                "name": "message", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the progress bar message</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ProgressBar.min-property", 
                "isClassProperty": false, 
                "name": "min", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>the minimum value of the progress bar</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ProgressBar.style-property", 
                "isClassProperty": false, 
                "name": "style", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the style of the progress bar</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ProgressBar.value-property", 
                "isClassProperty": false, 
                "name": "value", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>the current value of the progress bar</p>"
            }
        ], 
        "returns": null, 
        "since": "0.8", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.UI.ScrollView": {
        "deprecated": null, 
        "description": "<p>A Scroll View is used to create a scrollable region of content.  Views added to the Scroll View will be scrolled based on the content size of the Scroll View. The Scroll View is created by the method <a href=\"Titanium.UI.createScrollView.html\">Titanium.UI.createScrollView</a>. Note: In Android, Scroll Views can only scroll in one direction, either vertical or horizontal, but not both at the same time. See the <a href=\"Titanium.UI.ScrollView.scrollType.html\">Titanium.UI.ScrollView.scrollType</a> property</p>", 
        "events": [
            {
                "filename": "Titanium.UI.ScrollView.click-event", 
                "name": "click", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a click (longer than touch) against the view"
            }, 
            {
                "filename": "Titanium.UI.ScrollView.dblclick-event", 
                "name": "dblclick", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double click against the view"
            }, 
            {
                "filename": "Titanium.UI.ScrollView.doubletap-event", 
                "name": "doubletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double tap against the view"
            }, 
            {
                "filename": "Titanium.UI.ScrollView.scale-event", 
                "name": "scale", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "scale": "<p>the new scale as a float</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the zoom scale factor changes</p>"
            }, 
            {
                "filename": "Titanium.UI.ScrollView.scroll-event", 
                "name": "scroll", 
                "properties": {
                    "decelerating": "<p>boolean to indicate if the scroll is decelerating</p>", 
                    "dragging": "<p>boolean to indicate if the scroll is based on a dragging gesture</p>", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the view is scrolled</p>"
            }, 
            {
                "filename": "Titanium.UI.ScrollView.singletap-event", 
                "name": "singletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a single tap against the view"
            }, 
            {
                "filename": "Titanium.UI.ScrollView.swipe-event", 
                "name": "swipe", 
                "properties": {
                    "direction": "direction of the swipe - either left or right", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a swipe (left or right) against the view"
            }, 
            {
                "filename": "Titanium.UI.ScrollView.touchcancel-event", 
                "name": "touchcancel", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is interrupted by the device. this happens in circumenstances such as an incoming call to allow the UI to clean up state."
            }, 
            {
                "filename": "Titanium.UI.ScrollView.touchend-event", 
                "name": "touchend", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is completed"
            }, 
            {
                "filename": "Titanium.UI.ScrollView.touchmove-event", 
                "name": "touchmove", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects movement of a touch.  Event coordinates are always relative to the view in which the initial touch occurred"
            }, 
            {
                "filename": "Titanium.UI.ScrollView.touchstart-event", 
                "name": "touchstart", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects a gesture"
            }, 
            {
                "filename": "Titanium.UI.ScrollView.twofingertap-event", 
                "name": "twofingertap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a two-finger tap against the view"
            }
        ], 
        "examples": [
            {
                "code": "<p>Create a scroll view with content.</p>\n<pre><code>var scrollView = Titanium.UI.createScrollView({\n    contentWidth:'auto',\n    contentHeight:'auto',\n    top:0,\n    showVerticalScrollIndicator:true,\n    showHorizontalScrollIndicator:true\n});\nvar view = Ti.UI.createView({\n    backgroundColor:'#336699',\n    borderRadius:10,\n    width:300,\n    height:2000,\n    top:10\n});\nscrollView.add(view);\nTitanium.UI.currentWindow.add(scrollView);\n</code></pre>", 
                "description": "Simple Scroll View"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.UI.ScrollView.add-method", 
                "name": "add", 
                "parameters": [
                    {
                        "description": "the view to add to this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "add a child to the view hierarchy"
            }, 
            {
                "filename": "Titanium.UI.ScrollView.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.ScrollView.animate-method", 
                "name": "animate", 
                "parameters": [
                    {
                        "description": "either a dictionary of animation properties or an Animation object", 
                        "name": "obj", 
                        "type": "object"
                    }, 
                    {
                        "description": "function to be invoked upon completion of the animation", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "animate the view"
            }, 
            {
                "filename": "Titanium.UI.ScrollView.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.ScrollView.hide-method", 
                "name": "hide", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "hide the view"
            }, 
            {
                "filename": "Titanium.UI.ScrollView.remove-method", 
                "name": "remove", 
                "parameters": [
                    {
                        "description": "the view to remove from this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "remove a previously add view from the view hiearchy"
            }, 
            {
                "filename": "Titanium.UI.ScrollView.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "remove a previously added event listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.scrollTo-method", 
                "name": "scrollTo", 
                "parameters": [
                    {
                        "description": "the x point within the view", 
                        "name": "x", 
                        "type": "float"
                    }, 
                    {
                        "description": "the y point within the view", 
                        "name": "y", 
                        "type": "float"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "<p>scrollTo a particular point</p>"
            }, 
            {
                "filename": "Titanium.UI.ScrollView.show-method", 
                "name": "show", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "make the view visible"
            }, 
            {
                "filename": "Titanium.UI.ScrollView.toImage-method", 
                "name": "toImage", 
                "parameters": [
                    {
                        "description": "function to be invoked upon completion. if non-null, this method will be performed asynchronously. if null, it will be performed immediately", 
                        "name": "f", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.9", 
                "value": "return a Blob image of the rendered view"
            }
        ], 
        "notes": "<p>If your scrollable region fits within the size of the content area the scroll view will not scroll.</p>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.anchorPoint-property", 
                "isClassProperty": false, 
                "name": "anchorPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the anchor point value. anchor specifies the position by which animation should occur. center is 0.5, 0.5"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.animatedCenterPoint-property", 
                "isClassProperty": false, 
                "name": "animatedCenterPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "read-only object with x and y properties of where the view is during animation"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.backgroundColor-property", 
                "isClassProperty": false, 
                "name": "backgroundColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.backgroundDisabledColor-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background color of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.backgroundDisabledImage-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background image url of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.backgroundFocusedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.backgroundFocusedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.backgroundGradient-property", 
                "isClassProperty": false, 
                "name": "backgroundGradient", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a background gradient for the view with the properties: type,startPoint,endPoint,startRadius,endRadius,backfillStart,backfillEnd,colors."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.backgroundImage-property", 
                "isClassProperty": false, 
                "name": "backgroundImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background image url of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.backgroundLeftCap-property", 
                "isClassProperty": false, 
                "name": "backgroundLeftCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the left end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The right end cap is therefore computed by adding the size of the left end cap and the middle portion together and then subtracting that value from the width of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.backgroundSelectedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.backgroundSelectedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.backgroundTopCap-property", 
                "isClassProperty": false, 
                "name": "backgroundTopCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the top end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The bottom end cap is therefore computed by adding the size of the top end cap and the middle portion together and then subtracting that value from the height of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.borderColor-property", 
                "isClassProperty": false, 
                "name": "borderColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the border color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.borderRadius-property", 
                "isClassProperty": false, 
                "name": "borderRadius", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border radius of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.borderWidth-property", 
                "isClassProperty": false, 
                "name": "borderWidth", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border width of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.bottom-property", 
                "isClassProperty": false, 
                "name": "bottom", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view bottom position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.canCancelEvents-property", 
                "isClassProperty": false, 
                "name": "canCancelEvents", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>(iPhone only) boolean to indicate if the scroll view can cancel subview touches in order to scroll instead. Default of true</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.center-property", 
                "isClassProperty": false, 
                "name": "center", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the center of the views position relative to the parent view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.contentHeight-property", 
                "isClassProperty": false, 
                "name": "contentHeight", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>the height of the scrollable area</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.contentOffset-property", 
                "isClassProperty": false, 
                "name": "contentOffset", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>an object (with x and y properties) to indicate the offset of the content area</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.contentWidth-property", 
                "isClassProperty": false, 
                "name": "contentWidth", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>the width of the scrollable area</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.disableBounce-property", 
                "isClassProperty": false, 
                "name": "disableBounce", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean to control bounce during scrolling</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.focusable-property", 
                "isClassProperty": false, 
                "name": "focusable", 
                "platforms": [
                    "android"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "Set true if you want a view to be focusable when navigating with the trackball or D-Pad. Default: false. (Android Only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.font-family-property", 
                "isClassProperty": false, 
                "name": "font-family", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font family"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.font-size-property", 
                "isClassProperty": false, 
                "name": "font-size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font size"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.font-style-property", 
                "isClassProperty": false, 
                "name": "font-style", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font style, either normal or italics"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.font-weight-property", 
                "isClassProperty": false, 
                "name": "font-weight", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font weight, either normal or bold"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.height-property", 
                "isClassProperty": false, 
                "name": "height", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view height. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.horizontalBounce-property", 
                "isClassProperty": false, 
                "name": "horizontalBounce", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean to control the horizontal bounce during scrolling</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.left-property", 
                "isClassProperty": false, 
                "name": "left", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view left position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.maxZoomScale-property", 
                "isClassProperty": false, 
                "name": "maxZoomScale", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>the maximum scale of the content</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.minZoomScale-property", 
                "isClassProperty": false, 
                "name": "minZoomScale", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>the minimum scale of the content</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.opacity-property", 
                "isClassProperty": false, 
                "name": "opacity", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the opacity from 0.0-1.0"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.right-property", 
                "isClassProperty": false, 
                "name": "right", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view right position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.scrollType-property", 
                "isClassProperty": false, 
                "name": "scrollType", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>(Android only) the type of ScrollView: \"vertical\" or \"horizontal\"</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.showHorizontalScrollIndicator-property", 
                "isClassProperty": false, 
                "name": "showHorizontalScrollIndicator", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean to indicate whether the horizontal scroll indicator is visible</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.showVerticalScrollIndicator-property", 
                "isClassProperty": false, 
                "name": "showVerticalScrollIndicator", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean to indicate whether the vertical scroll indicator is visible</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.size-property", 
                "isClassProperty": false, 
                "name": "size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the size of the view as a dictionary of width and height properties"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.softKeyboardOnFocus-property", 
                "isClassProperty": false, 
                "name": "softKeyboardOnFocus", 
                "platforms": [
                    "android"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "One of Titanium.UI.Android.SOFT_KEYBOARD_DEFAULT_ON_FOCUS, Titanium.UI.Android.SOFT_KEYBOARD_HIDE_ON_FOCUS, or Titanium.UI.Android.SOFT_KEYBOARD_SHOW_ON_FOCUS. (Android only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.top-property", 
                "isClassProperty": false, 
                "name": "top", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view top position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.touchEnabled-property", 
                "isClassProperty": false, 
                "name": "touchEnabled", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean indicating if the view should receive touch events (true, default) or forward them to peers (false)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.transform-property", 
                "isClassProperty": false, 
                "name": "transform", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the transformation matrix to apply to the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.verticalBounce-property", 
                "isClassProperty": false, 
                "name": "verticalBounce", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean to control the vertical bounce during scrolling</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.visible-property", 
                "isClassProperty": false, 
                "name": "visible", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean of the visibility of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.width-property", 
                "isClassProperty": false, 
                "name": "width", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view width. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.zIndex-property", 
                "isClassProperty": false, 
                "name": "zIndex", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "the z index position relative to other sibling views"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollView.zoomScale-property", 
                "isClassProperty": false, 
                "name": "zoomScale", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>set the zoom scale for the current content area</p>"
            }
        ], 
        "returns": null, 
        "since": "0.9", 
        "subtype": "view", 
        "type": "object"
    }, 
    "Titanium.UI.ScrollableView": {
        "deprecated": null, 
        "description": "<p>The Scrollable View provides a view that supports horizontal scrolling on one or more views in a gesture motion.  The Scrollable View also optionally supports a visual paging control to indicate the page that the view is visible. The Scrollable View is created by the method <a href=\"Titanium.UI.createScrollableView.html\">Titanium.UI.createScrollableView</a>.</p>", 
        "events": [
            {
                "filename": "Titanium.UI.ScrollableView.click-event", 
                "name": "click", 
                "properties": {
                    "currentPage": "<p>the current page index</p>", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "view": "<p>the current page view</p>", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a click (longer than touch) against the view"
            }, 
            {
                "filename": "Titanium.UI.ScrollableView.dblclick-event", 
                "name": "dblclick", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double click against the view"
            }, 
            {
                "filename": "Titanium.UI.ScrollableView.doubletap-event", 
                "name": "doubletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double tap against the view"
            }, 
            {
                "filename": "Titanium.UI.ScrollableView.scroll-event", 
                "name": "scroll", 
                "properties": {
                    "currentPage": "<p>the current page index</p>", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "view": "<p>the current page view</p>", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the scroll view is scrolled</p>"
            }, 
            {
                "filename": "Titanium.UI.ScrollableView.singletap-event", 
                "name": "singletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a single tap against the view"
            }, 
            {
                "filename": "Titanium.UI.ScrollableView.swipe-event", 
                "name": "swipe", 
                "properties": {
                    "direction": "direction of the swipe - either left or right", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a swipe (left or right) against the view"
            }, 
            {
                "filename": "Titanium.UI.ScrollableView.touchcancel-event", 
                "name": "touchcancel", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is interrupted by the device. this happens in circumenstances such as an incoming call to allow the UI to clean up state."
            }, 
            {
                "filename": "Titanium.UI.ScrollableView.touchend-event", 
                "name": "touchend", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is completed"
            }, 
            {
                "filename": "Titanium.UI.ScrollableView.touchmove-event", 
                "name": "touchmove", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects movement of a touch.  Event coordinates are always relative to the view in which the initial touch occurred"
            }, 
            {
                "filename": "Titanium.UI.ScrollableView.touchstart-event", 
                "name": "touchstart", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects a gesture"
            }, 
            {
                "filename": "Titanium.UI.ScrollableView.twofingertap-event", 
                "name": "twofingertap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a two-finger tap against the view"
            }
        ], 
        "examples": [
            {
                "code": "<p>Create three views and place each into a scrollable view.</p>\n<pre><code>var view1 = Titanium.UI.createView({backgroundColor:'#123'});\nvar view2 = Titanium.UI.createView({backgroundColor:'#123'});\nvar view3 = Titanium.UI.createView({backgroundColor:'#123'});\nvar scrollView = Titanium.UI.createScrollableView({\n    views:[view1,view2,view3],\n    showPagingControl:true\n});\nwin.add(scrollView);\n</code></pre>", 
                "description": "Simple Scrollable View with 3 Views"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.UI.ScrollableView.add-method", 
                "name": "add", 
                "parameters": [
                    {
                        "description": "the view to add to this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add a child to the view hierarchy"
            }, 
            {
                "filename": "Titanium.UI.ScrollableView.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.addView-method", 
                "name": "addView", 
                "parameters": [
                    {
                        "description": "the view to add", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>add a new view to the Scrollable View</p>"
            }, 
            {
                "filename": "Titanium.UI.ScrollableView.animate-method", 
                "name": "animate", 
                "parameters": [
                    {
                        "description": "either a dictionary of animation properties or an Animation object", 
                        "name": "obj", 
                        "type": "object"
                    }, 
                    {
                        "description": "function to be invoked upon completion of the animation", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "animate the view"
            }, 
            {
                "filename": "Titanium.UI.ScrollableView.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.ScrollableView.hide-method", 
                "name": "hide", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "hide the view"
            }, 
            {
                "filename": "Titanium.UI.ScrollableView.remove-method", 
                "name": "remove", 
                "parameters": [
                    {
                        "description": "the view to remove from this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously add view from the view hiearchy"
            }, 
            {
                "filename": "Titanium.UI.ScrollableView.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously added event listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.removeView-method", 
                "name": "removeView", 
                "parameters": [
                    {
                        "description": "the view to remove", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>remove an existing view from the Scrollable View</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.scrollToView-method", 
                "name": "scrollToView", 
                "parameters": [
                    {
                        "description": "either an integer index or the view object to bring into view as the currentPage", 
                        "name": "view", 
                        "type": "int,object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>scroll to a specific view</p>"
            }, 
            {
                "filename": "Titanium.UI.ScrollableView.show-method", 
                "name": "show", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "make the view visible"
            }, 
            {
                "filename": "Titanium.UI.ScrollableView.toImage-method", 
                "name": "toImage", 
                "parameters": [
                    {
                        "description": "function to be invoked upon completion. if non-null, this method will be performed asynchronously. if null, it will be performed immediately", 
                        "name": "f", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.8", 
                "value": "return a Blob image of the rendered view"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.anchorPoint-property", 
                "isClassProperty": false, 
                "name": "anchorPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the anchor point value. anchor specifies the position by which animation should occur. center is 0.5, 0.5"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.animatedCenterPoint-property", 
                "isClassProperty": false, 
                "name": "animatedCenterPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "read-only object with x and y properties of where the view is during animation"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.backgroundColor-property", 
                "isClassProperty": false, 
                "name": "backgroundColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.backgroundDisabledColor-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background color of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.backgroundDisabledImage-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background image url of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.backgroundFocusedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.backgroundFocusedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.backgroundGradient-property", 
                "isClassProperty": false, 
                "name": "backgroundGradient", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a background gradient for the view with the properties: type,startPoint,endPoint,startRadius,endRadius,backfillStart,backfillEnd,colors."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.backgroundImage-property", 
                "isClassProperty": false, 
                "name": "backgroundImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background image url of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.backgroundLeftCap-property", 
                "isClassProperty": false, 
                "name": "backgroundLeftCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the left end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The right end cap is therefore computed by adding the size of the left end cap and the middle portion together and then subtracting that value from the width of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.backgroundSelectedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.backgroundSelectedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.backgroundTopCap-property", 
                "isClassProperty": false, 
                "name": "backgroundTopCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the top end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The bottom end cap is therefore computed by adding the size of the top end cap and the middle portion together and then subtracting that value from the height of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.borderColor-property", 
                "isClassProperty": false, 
                "name": "borderColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the border color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.borderRadius-property", 
                "isClassProperty": false, 
                "name": "borderRadius", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border radius of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.borderWidth-property", 
                "isClassProperty": false, 
                "name": "borderWidth", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border width of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.bottom-property", 
                "isClassProperty": false, 
                "name": "bottom", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view bottom position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.cacheSize-property", 
                "isClassProperty": false, 
                "name": "cacheSize", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The number of views to cache (prerender).  Views are rendered in the range (currentPage +/- (cacheSize - 1)/2), ROUNDED DOWN for even values (i.e. cacheSize=4 renders 3 views into the cache).  Keep in mind that improved performance (larger cache) will lead to faster performance, but more memory usage.  iOS only.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.center-property", 
                "isClassProperty": false, 
                "name": "center", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the center of the views position relative to the parent view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.currentPage-property", 
                "isClassProperty": false, 
                "name": "currentPage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the current page visible in the view</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.focusable-property", 
                "isClassProperty": false, 
                "name": "focusable", 
                "platforms": [
                    "android"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "Set true if you want a view to be focusable when navigating with the trackball or D-Pad. Default: false. (Android Only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.font-family-property", 
                "isClassProperty": false, 
                "name": "font-family", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font family"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.font-size-property", 
                "isClassProperty": false, 
                "name": "font-size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font size"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.font-style-property", 
                "isClassProperty": false, 
                "name": "font-style", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font style, either normal or italics"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.font-weight-property", 
                "isClassProperty": false, 
                "name": "font-weight", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font weight, either normal or bold"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.height-property", 
                "isClassProperty": false, 
                "name": "height", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view height. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.left-property", 
                "isClassProperty": false, 
                "name": "left", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view left position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.maxZoomScale-property", 
                "isClassProperty": false, 
                "name": "maxZoomScale", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>the maximum zoom scale for the view</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.minZoomScale-property", 
                "isClassProperty": false, 
                "name": "minZoomScale", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>the minimum zoom scale for the view</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.opacity-property", 
                "isClassProperty": false, 
                "name": "opacity", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the opacity from 0.0-1.0"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.pagingControlColor-property", 
                "isClassProperty": false, 
                "name": "pagingControlColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the color of the paging control. defaults to black.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.pagingControlHeight-property", 
                "isClassProperty": false, 
                "name": "pagingControlHeight", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>the height in pixels of the paging control, if visible. defaults to 20</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.right-property", 
                "isClassProperty": false, 
                "name": "right", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view right position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.showPagingControl-property", 
                "isClassProperty": false, 
                "name": "showPagingControl", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean to indicate whether the paging control UI is visible</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.size-property", 
                "isClassProperty": false, 
                "name": "size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the size of the view as a dictionary of width and height properties"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.softKeyboardOnFocus-property", 
                "isClassProperty": false, 
                "name": "softKeyboardOnFocus", 
                "platforms": [
                    "android"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "One of Titanium.UI.Android.SOFT_KEYBOARD_DEFAULT_ON_FOCUS, Titanium.UI.Android.SOFT_KEYBOARD_HIDE_ON_FOCUS, or Titanium.UI.Android.SOFT_KEYBOARD_SHOW_ON_FOCUS. (Android only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.top-property", 
                "isClassProperty": false, 
                "name": "top", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view top position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.touchEnabled-property", 
                "isClassProperty": false, 
                "name": "touchEnabled", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean indicating if the view should receive touch events (true, default) or forward them to peers (false)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.transform-property", 
                "isClassProperty": false, 
                "name": "transform", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the transformation matrix to apply to the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.views-property", 
                "isClassProperty": false, 
                "name": "views", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "array", 
                "type_jsca": "array", 
                "value": "<p>array of view objects to place in the view</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.visible-property", 
                "isClassProperty": false, 
                "name": "visible", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean of the visibility of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.width-property", 
                "isClassProperty": false, 
                "name": "width", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view width. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.ScrollableView.zIndex-property", 
                "isClassProperty": false, 
                "name": "zIndex", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "the z index position relative to other sibling views"
            }
        ], 
        "returns": null, 
        "since": "0.8", 
        "subtype": "view", 
        "type": "object"
    }, 
    "Titanium.UI.SearchBar": {
        "deprecated": null, 
        "description": "<p>A Search Bar is created by the method <a href=\"Titanium.UI.createSearchBar.html\">Titanium.UI.createSearchBar</a>.</p>", 
        "events": [
            {
                "filename": "Titanium.UI.SearchBar.blur-event", 
                "name": "blur", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the search bar loses focus</p>"
            }, 
            {
                "filename": "Titanium.UI.SearchBar.cancel-event", 
                "name": "cancel", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the cancel button is pressed</p>"
            }, 
            {
                "filename": "Titanium.UI.SearchBar.change-event", 
                "name": "change", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the value of the search bar changes</p>"
            }, 
            {
                "filename": "Titanium.UI.SearchBar.click-event", 
                "name": "click", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a click (longer than touch) against the view"
            }, 
            {
                "filename": "Titanium.UI.SearchBar.dblclick-event", 
                "name": "dblclick", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double click against the view"
            }, 
            {
                "filename": "Titanium.UI.SearchBar.doubletap-event", 
                "name": "doubletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double tap against the view"
            }, 
            {
                "filename": "Titanium.UI.SearchBar.focus-event", 
                "name": "focus", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the search bar gains focus</p>"
            }, 
            {
                "filename": "Titanium.UI.SearchBar.return-event", 
                "name": "return", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when keyboard search button is pressed</p>"
            }, 
            {
                "filename": "Titanium.UI.SearchBar.singletap-event", 
                "name": "singletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a single tap against the view"
            }, 
            {
                "filename": "Titanium.UI.SearchBar.swipe-event", 
                "name": "swipe", 
                "properties": {
                    "direction": "direction of the swipe - either left or right", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a swipe (left or right) against the view"
            }, 
            {
                "filename": "Titanium.UI.SearchBar.touchcancel-event", 
                "name": "touchcancel", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is interrupted by the device. this happens in circumenstances such as an incoming call to allow the UI to clean up state."
            }, 
            {
                "filename": "Titanium.UI.SearchBar.touchend-event", 
                "name": "touchend", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is completed"
            }, 
            {
                "filename": "Titanium.UI.SearchBar.touchmove-event", 
                "name": "touchmove", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects movement of a touch.  Event coordinates are always relative to the view in which the initial touch occurred"
            }, 
            {
                "filename": "Titanium.UI.SearchBar.touchstart-event", 
                "name": "touchstart", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects a gesture"
            }, 
            {
                "filename": "Titanium.UI.SearchBar.twofingertap-event", 
                "name": "twofingertap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a two-finger tap against the view"
            }
        ], 
        "examples": [
            {
                "code": "<pre><code>var search = Titanium.UI.createSearchBar({\n    barColor:'#000', \n    showCancel:true,\n    height:43,\n    top:0,\n});\n</code></pre>", 
                "description": "Simple Search Bar"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.UI.SearchBar.add-method", 
                "name": "add", 
                "parameters": [
                    {
                        "description": "the view to add to this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add a child to the view hierarchy"
            }, 
            {
                "filename": "Titanium.UI.SearchBar.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.SearchBar.animate-method", 
                "name": "animate", 
                "parameters": [
                    {
                        "description": "either a dictionary of animation properties or an Animation object", 
                        "name": "obj", 
                        "type": "object"
                    }, 
                    {
                        "description": "function to be invoked upon completion of the animation", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "animate the view"
            }, 
            {
                "filename": "Titanium.UI.SearchBar.blur-method", 
                "name": "blur", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>called to force the search bar to lose focus</p>"
            }, 
            {
                "filename": "Titanium.UI.SearchBar.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.SearchBar.focus-method", 
                "name": "focus", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>called to force the search bar to focus</p>"
            }, 
            {
                "filename": "Titanium.UI.SearchBar.hide-method", 
                "name": "hide", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "hide the view"
            }, 
            {
                "filename": "Titanium.UI.SearchBar.remove-method", 
                "name": "remove", 
                "parameters": [
                    {
                        "description": "the view to remove from this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously add view from the view hiearchy"
            }, 
            {
                "filename": "Titanium.UI.SearchBar.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously added event listener"
            }, 
            {
                "filename": "Titanium.UI.SearchBar.show-method", 
                "name": "show", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "make the view visible"
            }, 
            {
                "filename": "Titanium.UI.SearchBar.toImage-method", 
                "name": "toImage", 
                "parameters": [
                    {
                        "description": "function to be invoked upon completion. if non-null, this method will be performed asynchronously. if null, it will be performed immediately", 
                        "name": "f", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.8", 
                "value": "return a Blob image of the rendered view"
            }
        ], 
        "notes": "", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.anchorPoint-property", 
                "isClassProperty": false, 
                "name": "anchorPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the anchor point value. anchor specifies the position by which animation should occur. center is 0.5, 0.5"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.animatedCenterPoint-property", 
                "isClassProperty": false, 
                "name": "animatedCenterPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "read-only object with x and y properties of where the view is during animation"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.autocapitalization-property", 
                "isClassProperty": false, 
                "name": "autocapitalization", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>One of <a href=\"Titanium.UI.TEXT_AUTOCAPITALIZATION_NONE.html\">Titanium.UI.TEXT_AUTOCAPITALIZATION_NONE</a>, <a href=\"Titanium.UI.TEXT_AUTOCAPITALIZATION_WORDS.html\">Titanium.UI.TEXT_AUTOCAPITALIZATION_WORDS</a>, <a href=\"Titanium.UI.TEXT_AUTOCAPITALIZATION_SENTENCES.html\">Titanium.UI.TEXT_AUTOCAPITALIZATION_SENTENCES</a>, or <a href=\"Titanium.UI.TEXT_AUTOCAPITALIZATION_ALL.html\">Titanium.UI.TEXT_AUTOCAPITALIZATION_ALL</a> to indicate how the field should be capitalized during typing.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.autocorrect-property", 
                "isClassProperty": false, 
                "name": "autocorrect", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean to indicate if the text in the field should be autocorrected as typed</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.backgroundColor-property", 
                "isClassProperty": false, 
                "name": "backgroundColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.backgroundDisabledColor-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background color of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.backgroundDisabledImage-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background image url of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.backgroundFocusedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.backgroundFocusedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.backgroundGradient-property", 
                "isClassProperty": false, 
                "name": "backgroundGradient", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a background gradient for the view with the properties: type,startPoint,endPoint,startRadius,endRadius,backfillStart,backfillEnd,colors."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.backgroundImage-property", 
                "isClassProperty": false, 
                "name": "backgroundImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background image url of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.backgroundLeftCap-property", 
                "isClassProperty": false, 
                "name": "backgroundLeftCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the left end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The right end cap is therefore computed by adding the size of the left end cap and the middle portion together and then subtracting that value from the width of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.backgroundSelectedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.backgroundSelectedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.backgroundTopCap-property", 
                "isClassProperty": false, 
                "name": "backgroundTopCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the top end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The bottom end cap is therefore computed by adding the size of the top end cap and the middle portion together and then subtracting that value from the height of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.barColor-property", 
                "isClassProperty": false, 
                "name": "barColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the bar color of the search bar view</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.borderColor-property", 
                "isClassProperty": false, 
                "name": "borderColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the border color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.borderRadius-property", 
                "isClassProperty": false, 
                "name": "borderRadius", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border radius of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.borderWidth-property", 
                "isClassProperty": false, 
                "name": "borderWidth", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border width of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.bottom-property", 
                "isClassProperty": false, 
                "name": "bottom", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view bottom position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.center-property", 
                "isClassProperty": false, 
                "name": "center", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the center of the views position relative to the parent view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.focusable-property", 
                "isClassProperty": false, 
                "name": "focusable", 
                "platforms": [
                    "android"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "Set true if you want a view to be focusable when navigating with the trackball or D-Pad. Default: false. (Android Only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.font-family-property", 
                "isClassProperty": false, 
                "name": "font-family", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font family"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.font-size-property", 
                "isClassProperty": false, 
                "name": "font-size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font size"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.font-style-property", 
                "isClassProperty": false, 
                "name": "font-style", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font style, either normal or italics"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.font-weight-property", 
                "isClassProperty": false, 
                "name": "font-weight", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font weight, either normal or bold"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.height-property", 
                "isClassProperty": false, 
                "name": "height", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view height. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.hintText-property", 
                "isClassProperty": false, 
                "name": "hintText", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the text to show when the search bar field is not focused</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.hinttextid-property", 
                "isClassProperty": false, 
                "name": "hinttextid", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the key in the locale file to use for the hintText property</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.keyboardType-property", 
                "isClassProperty": false, 
                "name": "keyboardType", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the keyboard type constant to use when the field is focused</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.left-property", 
                "isClassProperty": false, 
                "name": "left", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view left position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.opacity-property", 
                "isClassProperty": false, 
                "name": "opacity", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the opacity from 0.0-1.0"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.prompt-property", 
                "isClassProperty": false, 
                "name": "prompt", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>a single line of text displayed at the top of the search bar</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.promptid-property", 
                "isClassProperty": false, 
                "name": "promptid", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the key in the locale file to use for the prompt property</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.right-property", 
                "isClassProperty": false, 
                "name": "right", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view right position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.showCancel-property", 
                "isClassProperty": false, 
                "name": "showCancel", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean indicates whether the cancel button is displayed</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.size-property", 
                "isClassProperty": false, 
                "name": "size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the size of the view as a dictionary of width and height properties"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.softKeyboardOnFocus-property", 
                "isClassProperty": false, 
                "name": "softKeyboardOnFocus", 
                "platforms": [
                    "android"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "One of Titanium.UI.Android.SOFT_KEYBOARD_DEFAULT_ON_FOCUS, Titanium.UI.Android.SOFT_KEYBOARD_HIDE_ON_FOCUS, or Titanium.UI.Android.SOFT_KEYBOARD_SHOW_ON_FOCUS. (Android only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.top-property", 
                "isClassProperty": false, 
                "name": "top", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view top position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.touchEnabled-property", 
                "isClassProperty": false, 
                "name": "touchEnabled", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean indicating if the view should receive touch events (true, default) or forward them to peers (false)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.transform-property", 
                "isClassProperty": false, 
                "name": "transform", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the transformation matrix to apply to the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.value-property", 
                "isClassProperty": false, 
                "name": "value", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the value of the search bar</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.visible-property", 
                "isClassProperty": false, 
                "name": "visible", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean of the visibility of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.width-property", 
                "isClassProperty": false, 
                "name": "width", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view width. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.SearchBar.zIndex-property", 
                "isClassProperty": false, 
                "name": "zIndex", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "the z index position relative to other sibling views"
            }
        ], 
        "returns": null, 
        "since": "0.8", 
        "subtype": "view", 
        "type": "object"
    }, 
    "Titanium.UI.Slider": {
        "deprecated": null, 
        "description": "<p>A Slider is created by the method <a href=\"Titanium.UI.createSlider.html\">Titanium.UI.createSlider</a>.</p>", 
        "events": [
            {
                "filename": "Titanium.UI.Slider.change-event", 
                "name": "change", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "thumbOffset": "<p>a dictionary with properties x and y of the thumbs left-top corner in the control Available with custom thumb image. (Android)</p>", 
                    "thumbSize": "<p>a dictionary with properties width and height of the size of the thumb. Available with custom thumb image.  (Android)</p>", 
                    "type": "the name of the event fired", 
                    "value": "<p>the new value of the slider</p>", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the value of the slider changes</p>"
            }, 
            {
                "filename": "Titanium.UI.Slider.click-event", 
                "name": "click", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a click (longer than touch) against the view"
            }, 
            {
                "filename": "Titanium.UI.Slider.dblclick-event", 
                "name": "dblclick", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double click against the view"
            }, 
            {
                "filename": "Titanium.UI.Slider.doubletap-event", 
                "name": "doubletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double tap against the view"
            }, 
            {
                "filename": "Titanium.UI.Slider.singletap-event", 
                "name": "singletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a single tap against the view"
            }, 
            {
                "filename": "Titanium.UI.Slider.swipe-event", 
                "name": "swipe", 
                "properties": {
                    "direction": "direction of the swipe - either left or right", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a swipe (left or right) against the view"
            }, 
            {
                "filename": "Titanium.UI.Slider.touchcancel-event", 
                "name": "touchcancel", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is interrupted by the device. this happens in circumenstances such as an incoming call to allow the UI to clean up state."
            }, 
            {
                "filename": "Titanium.UI.Slider.touchend-event", 
                "name": "touchend", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is completed"
            }, 
            {
                "filename": "Titanium.UI.Slider.touchmove-event", 
                "name": "touchmove", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects movement of a touch.  Event coordinates are always relative to the view in which the initial touch occurred"
            }, 
            {
                "filename": "Titanium.UI.Slider.touchstart-event", 
                "name": "touchstart", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects a gesture"
            }, 
            {
                "filename": "Titanium.UI.Slider.twofingertap-event", 
                "name": "twofingertap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a two-finger tap against the view"
            }
        ], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.UI.Slider.add-method", 
                "name": "add", 
                "parameters": [
                    {
                        "description": "the view to add to this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add a child to the view hierarchy"
            }, 
            {
                "filename": "Titanium.UI.Slider.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.Slider.animate-method", 
                "name": "animate", 
                "parameters": [
                    {
                        "description": "either a dictionary of animation properties or an Animation object", 
                        "name": "obj", 
                        "type": "object"
                    }, 
                    {
                        "description": "function to be invoked upon completion of the animation", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "animate the view"
            }, 
            {
                "filename": "Titanium.UI.Slider.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.Slider.hide-method", 
                "name": "hide", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "hide the view"
            }, 
            {
                "filename": "Titanium.UI.Slider.remove-method", 
                "name": "remove", 
                "parameters": [
                    {
                        "description": "the view to remove from this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously add view from the view hiearchy"
            }, 
            {
                "filename": "Titanium.UI.Slider.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously added event listener"
            }, 
            {
                "filename": "Titanium.UI.Slider.show-method", 
                "name": "show", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "make the view visible"
            }, 
            {
                "filename": "Titanium.UI.Slider.toImage-method", 
                "name": "toImage", 
                "parameters": [
                    {
                        "description": "function to be invoked upon completion. if non-null, this method will be performed asynchronously. if null, it will be performed immediately", 
                        "name": "f", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.8", 
                "value": "return a Blob image of the rendered view"
            }
        ], 
        "notes": "", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.anchorPoint-property", 
                "isClassProperty": false, 
                "name": "anchorPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the anchor point value. anchor specifies the position by which animation should occur. center is 0.5, 0.5"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.animatedCenterPoint-property", 
                "isClassProperty": false, 
                "name": "animatedCenterPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "read-only object with x and y properties of where the view is during animation"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.backgroundColor-property", 
                "isClassProperty": false, 
                "name": "backgroundColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.backgroundDisabledColor-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background color of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.backgroundDisabledImage-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background image url of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.backgroundFocusedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.backgroundFocusedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.backgroundGradient-property", 
                "isClassProperty": false, 
                "name": "backgroundGradient", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a background gradient for the view with the properties: type,startPoint,endPoint,startRadius,endRadius,backfillStart,backfillEnd,colors."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.backgroundImage-property", 
                "isClassProperty": false, 
                "name": "backgroundImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background image url of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.backgroundLeftCap-property", 
                "isClassProperty": false, 
                "name": "backgroundLeftCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the left end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The right end cap is therefore computed by adding the size of the left end cap and the middle portion together and then subtracting that value from the width of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.backgroundSelectedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.backgroundSelectedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.backgroundTopCap-property", 
                "isClassProperty": false, 
                "name": "backgroundTopCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the top end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The bottom end cap is therefore computed by adding the size of the top end cap and the middle portion together and then subtracting that value from the height of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.borderColor-property", 
                "isClassProperty": false, 
                "name": "borderColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the border color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.borderRadius-property", 
                "isClassProperty": false, 
                "name": "borderRadius", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border radius of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.borderWidth-property", 
                "isClassProperty": false, 
                "name": "borderWidth", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border width of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.bottom-property", 
                "isClassProperty": false, 
                "name": "bottom", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view bottom position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.center-property", 
                "isClassProperty": false, 
                "name": "center", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the center of the views position relative to the parent view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.disabledLeftTrackImage-property", 
                "isClassProperty": false, 
                "name": "disabledLeftTrackImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the image url of the slider left track when in the disabled state</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.disabledRightTrackImage-property", 
                "isClassProperty": false, 
                "name": "disabledRightTrackImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the image url of the slider right track when in the disabled state</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.disabledThumbImage-property", 
                "isClassProperty": false, 
                "name": "disabledThumbImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the image url of the slider thumb when in the disabled state</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.enabled-property", 
                "isClassProperty": false, 
                "name": "enabled", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean to indicate the enabled state of the slider</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.focusable-property", 
                "isClassProperty": false, 
                "name": "focusable", 
                "platforms": [
                    "android"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "Set true if you want a view to be focusable when navigating with the trackball or D-Pad. Default: false. (Android Only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.font-family-property", 
                "isClassProperty": false, 
                "name": "font-family", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font family"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.font-size-property", 
                "isClassProperty": false, 
                "name": "font-size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font size"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.font-style-property", 
                "isClassProperty": false, 
                "name": "font-style", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font style, either normal or italics"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.font-weight-property", 
                "isClassProperty": false, 
                "name": "font-weight", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font weight, either normal or bold"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.height-property", 
                "isClassProperty": false, 
                "name": "height", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view height. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.highlightedLeftTrackImage-property", 
                "isClassProperty": false, 
                "name": "highlightedLeftTrackImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the image url of the slider left track when in the highlighted state</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.highlightedRightTrackImage-property", 
                "isClassProperty": false, 
                "name": "highlightedRightTrackImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the image url of the slider right track when in the highlighted state</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.highlightedThumbImage-property", 
                "isClassProperty": false, 
                "name": "highlightedThumbImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the image url of the slider thumb when in the highlighted state</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.left-property", 
                "isClassProperty": false, 
                "name": "left", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view left position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.leftTrackImage-property", 
                "isClassProperty": false, 
                "name": "leftTrackImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the image url of the slider left track</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.max-property", 
                "isClassProperty": false, 
                "name": "max", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>the maximum slider value</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.maxRange-property", 
                "isClassProperty": false, 
                "name": "maxRange", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>value can't be moved higher than maxRange. maxRange equals max by default. (Android)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.min-property", 
                "isClassProperty": false, 
                "name": "min", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>the minimum slider value</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.minRange-property", 
                "isClassProperty": false, 
                "name": "minRange", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>value can't be moved lower than minRange. minRange equals min by default. (Android)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.opacity-property", 
                "isClassProperty": false, 
                "name": "opacity", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the opacity from 0.0-1.0"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.right-property", 
                "isClassProperty": false, 
                "name": "right", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view right position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.rightTrackImage-property", 
                "isClassProperty": false, 
                "name": "rightTrackImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the image url of the slider right track</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.selectedLeftTrackImage-property", 
                "isClassProperty": false, 
                "name": "selectedLeftTrackImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the image url of the slider left track when in the selected state</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.selectedRightTrackImage-property", 
                "isClassProperty": false, 
                "name": "selectedRightTrackImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the image url of the slider right track when in the selected state</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.selectedThumbImage-property", 
                "isClassProperty": false, 
                "name": "selectedThumbImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the image url of the slider thumb when in the selected state</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.size-property", 
                "isClassProperty": false, 
                "name": "size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the size of the view as a dictionary of width and height properties"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.softKeyboardOnFocus-property", 
                "isClassProperty": false, 
                "name": "softKeyboardOnFocus", 
                "platforms": [
                    "android"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "One of Titanium.UI.Android.SOFT_KEYBOARD_DEFAULT_ON_FOCUS, Titanium.UI.Android.SOFT_KEYBOARD_HIDE_ON_FOCUS, or Titanium.UI.Android.SOFT_KEYBOARD_SHOW_ON_FOCUS. (Android only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.thumbImage-property", 
                "isClassProperty": false, 
                "name": "thumbImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the image url to the slider thumb</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.top-property", 
                "isClassProperty": false, 
                "name": "top", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view top position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.touchEnabled-property", 
                "isClassProperty": false, 
                "name": "touchEnabled", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean indicating if the view should receive touch events (true, default) or forward them to peers (false)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.transform-property", 
                "isClassProperty": false, 
                "name": "transform", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the transformation matrix to apply to the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.value-property", 
                "isClassProperty": false, 
                "name": "value", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the value of the slider</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.visible-property", 
                "isClassProperty": false, 
                "name": "visible", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean of the visibility of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.width-property", 
                "isClassProperty": false, 
                "name": "width", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view width. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Slider.zIndex-property", 
                "isClassProperty": false, 
                "name": "zIndex", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "the z index position relative to other sibling views"
            }
        ], 
        "returns": null, 
        "since": "0.8", 
        "subtype": "view", 
        "type": "object"
    }, 
    "Titanium.UI.Switch": {
        "deprecated": null, 
        "description": "<p>A Switch is created by the method <a href=\"Titanium.UI.createSwitch.html\">Titanium.UI.createSwitch</a>.</p>", 
        "events": [
            {
                "filename": "Titanium.UI.Switch.change-event", 
                "name": "change", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "value": "<p>the new value of the switch</p>", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the switch value is changed</p>"
            }, 
            {
                "filename": "Titanium.UI.Switch.click-event", 
                "name": "click", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a click (longer than touch) against the view"
            }, 
            {
                "filename": "Titanium.UI.Switch.dblclick-event", 
                "name": "dblclick", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double click against the view"
            }, 
            {
                "filename": "Titanium.UI.Switch.doubletap-event", 
                "name": "doubletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double tap against the view"
            }, 
            {
                "filename": "Titanium.UI.Switch.singletap-event", 
                "name": "singletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a single tap against the view"
            }, 
            {
                "filename": "Titanium.UI.Switch.swipe-event", 
                "name": "swipe", 
                "properties": {
                    "direction": "direction of the swipe - either left or right", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a swipe (left or right) against the view"
            }, 
            {
                "filename": "Titanium.UI.Switch.touchcancel-event", 
                "name": "touchcancel", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is interrupted by the device. this happens in circumenstances such as an incoming call to allow the UI to clean up state."
            }, 
            {
                "filename": "Titanium.UI.Switch.touchend-event", 
                "name": "touchend", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is completed"
            }, 
            {
                "filename": "Titanium.UI.Switch.touchmove-event", 
                "name": "touchmove", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects movement of a touch.  Event coordinates are always relative to the view in which the initial touch occurred"
            }, 
            {
                "filename": "Titanium.UI.Switch.touchstart-event", 
                "name": "touchstart", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects a gesture"
            }, 
            {
                "filename": "Titanium.UI.Switch.twofingertap-event", 
                "name": "twofingertap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a two-finger tap against the view"
            }
        ], 
        "examples": [
            {
                "code": "<p>The following is a simple example of a switch and receiving <tt>change</tt> events.</p>\n<pre><code>var basicSwitch = Titanium.UI.createSwitch({\n    value:false\n});\nbasicSwitch.addEventListener('change',function(e)\n{\n    Titanium.API.info('Basic Switch value = ' + e.value + ' act val ' + basicSwitch.value);\n});\n</code></pre>", 
                "description": "Simple Switch Example"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.UI.Switch.add-method", 
                "name": "add", 
                "parameters": [
                    {
                        "description": "the view to add to this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add a child to the view hierarchy"
            }, 
            {
                "filename": "Titanium.UI.Switch.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.Switch.animate-method", 
                "name": "animate", 
                "parameters": [
                    {
                        "description": "either a dictionary of animation properties or an Animation object", 
                        "name": "obj", 
                        "type": "object"
                    }, 
                    {
                        "description": "function to be invoked upon completion of the animation", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "animate the view"
            }, 
            {
                "filename": "Titanium.UI.Switch.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.Switch.hide-method", 
                "name": "hide", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "hide the view"
            }, 
            {
                "filename": "Titanium.UI.Switch.remove-method", 
                "name": "remove", 
                "parameters": [
                    {
                        "description": "the view to remove from this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously add view from the view hiearchy"
            }, 
            {
                "filename": "Titanium.UI.Switch.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously added event listener"
            }, 
            {
                "filename": "Titanium.UI.Switch.show-method", 
                "name": "show", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "make the view visible"
            }, 
            {
                "filename": "Titanium.UI.Switch.toImage-method", 
                "name": "toImage", 
                "parameters": [
                    {
                        "description": "function to be invoked upon completion. if non-null, this method will be performed asynchronously. if null, it will be performed immediately", 
                        "name": "f", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.8", 
                "value": "return a Blob image of the rendered view"
            }
        ], 
        "notes": "", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.anchorPoint-property", 
                "isClassProperty": false, 
                "name": "anchorPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the anchor point value. anchor specifies the position by which animation should occur. center is 0.5, 0.5"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.animatedCenterPoint-property", 
                "isClassProperty": false, 
                "name": "animatedCenterPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "read-only object with x and y properties of where the view is during animation"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.backgroundColor-property", 
                "isClassProperty": false, 
                "name": "backgroundColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.backgroundDisabledColor-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background color of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.backgroundDisabledImage-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background image url of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.backgroundFocusedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.backgroundFocusedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.backgroundGradient-property", 
                "isClassProperty": false, 
                "name": "backgroundGradient", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a background gradient for the view with the properties: type,startPoint,endPoint,startRadius,endRadius,backfillStart,backfillEnd,colors."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.backgroundImage-property", 
                "isClassProperty": false, 
                "name": "backgroundImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background image url of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.backgroundLeftCap-property", 
                "isClassProperty": false, 
                "name": "backgroundLeftCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the left end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The right end cap is therefore computed by adding the size of the left end cap and the middle portion together and then subtracting that value from the width of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.backgroundSelectedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.backgroundSelectedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.backgroundTopCap-property", 
                "isClassProperty": false, 
                "name": "backgroundTopCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the top end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The bottom end cap is therefore computed by adding the size of the top end cap and the middle portion together and then subtracting that value from the height of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.borderColor-property", 
                "isClassProperty": false, 
                "name": "borderColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the border color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.borderRadius-property", 
                "isClassProperty": false, 
                "name": "borderRadius", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border radius of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.borderWidth-property", 
                "isClassProperty": false, 
                "name": "borderWidth", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border width of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.bottom-property", 
                "isClassProperty": false, 
                "name": "bottom", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view bottom position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.center-property", 
                "isClassProperty": false, 
                "name": "center", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the center of the views position relative to the parent view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.enabled-property", 
                "isClassProperty": false, 
                "name": "enabled", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean for the state of the switch</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.focusable-property", 
                "isClassProperty": false, 
                "name": "focusable", 
                "platforms": [
                    "android"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "Set true if you want a view to be focusable when navigating with the trackball or D-Pad. Default: false. (Android Only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.font-family-property", 
                "isClassProperty": false, 
                "name": "font-family", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font family"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.font-size-property", 
                "isClassProperty": false, 
                "name": "font-size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font size"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.font-style-property", 
                "isClassProperty": false, 
                "name": "font-style", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font style, either normal or italics"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.font-weight-property", 
                "isClassProperty": false, 
                "name": "font-weight", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font weight, either normal or bold"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.height-property", 
                "isClassProperty": false, 
                "name": "height", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view height. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.left-property", 
                "isClassProperty": false, 
                "name": "left", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view left position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.opacity-property", 
                "isClassProperty": false, 
                "name": "opacity", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the opacity from 0.0-1.0"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.right-property", 
                "isClassProperty": false, 
                "name": "right", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view right position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.size-property", 
                "isClassProperty": false, 
                "name": "size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the size of the view as a dictionary of width and height properties"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.softKeyboardOnFocus-property", 
                "isClassProperty": false, 
                "name": "softKeyboardOnFocus", 
                "platforms": [
                    "android"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "One of Titanium.UI.Android.SOFT_KEYBOARD_DEFAULT_ON_FOCUS, Titanium.UI.Android.SOFT_KEYBOARD_HIDE_ON_FOCUS, or Titanium.UI.Android.SOFT_KEYBOARD_SHOW_ON_FOCUS. (Android only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.style-property", 
                "isClassProperty": false, 
                "name": "style", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>one of Ti.UI.Android.SWITCH_STYLE_CHECKBOX or Ti.UI.Android.SWITCH_STYLE_TOGGLEBUTTON (default). (Android only)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.title-property", 
                "isClassProperty": false, 
                "name": "title", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>text to display with checkbox. Used if style is Ti.UI.Android.SWITCH_STYLE_CHECKBOX (Android only)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.titleOff-property", 
                "isClassProperty": false, 
                "name": "titleOff", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>text to display when value is <tt>false</tt>. used if style is Ti.UI.Android.SWITCH_STYLE_TOGGLEBUTTON (Android only)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.titleOn-property", 
                "isClassProperty": false, 
                "name": "titleOn", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>text to display when value is <tt>true</tt>. used if style is Ti.UI.Android.SWITCH_STYLE_TOGGLEBUTTON (Android only)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.top-property", 
                "isClassProperty": false, 
                "name": "top", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view top position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.touchEnabled-property", 
                "isClassProperty": false, 
                "name": "touchEnabled", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean indicating if the view should receive touch events (true, default) or forward them to peers (false)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.transform-property", 
                "isClassProperty": false, 
                "name": "transform", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the transformation matrix to apply to the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.value-property", 
                "isClassProperty": false, 
                "name": "value", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean value of the switch where true is the switch is <tt>on</tt> and false the switch if <tt>off</tt></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.visible-property", 
                "isClassProperty": false, 
                "name": "visible", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean of the visibility of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.width-property", 
                "isClassProperty": false, 
                "name": "width", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view width. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Switch.zIndex-property", 
                "isClassProperty": false, 
                "name": "zIndex", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "the z index position relative to other sibling views"
            }
        ], 
        "returns": null, 
        "since": "0.8", 
        "subtype": "view", 
        "type": "object"
    }, 
    "Titanium.UI.Tab": {
        "deprecated": null, 
        "description": "<p>A TabGroup Tab instance.  Each Tab instance maintains a stack of tab windows. Only one window within in the Tab can be visible at a time.  When a window is closed, either by the user or by code, the window is removed from the stack, make the previous window visible. The root tab window cannot be removed. The Tab Group is created by the method <a href=\"Titanium.UI.createTab.html\">Titanium.UI.createTab</a>.</p>", 
        "events": [
            {
                "filename": "Titanium.UI.Tab.click-event", 
                "name": "click", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a click (longer than touch) against the view"
            }, 
            {
                "filename": "Titanium.UI.Tab.dblclick-event", 
                "name": "dblclick", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double click against the view"
            }, 
            {
                "filename": "Titanium.UI.Tab.doubletap-event", 
                "name": "doubletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double tap against the view"
            }, 
            {
                "filename": "Titanium.UI.Tab.singletap-event", 
                "name": "singletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a single tap against the view"
            }, 
            {
                "filename": "Titanium.UI.Tab.swipe-event", 
                "name": "swipe", 
                "properties": {
                    "direction": "direction of the swipe - either left or right", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a swipe (left or right) against the view"
            }, 
            {
                "filename": "Titanium.UI.Tab.touchcancel-event", 
                "name": "touchcancel", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is interrupted by the device. this happens in circumenstances such as an incoming call to allow the UI to clean up state."
            }, 
            {
                "filename": "Titanium.UI.Tab.touchend-event", 
                "name": "touchend", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is completed"
            }, 
            {
                "filename": "Titanium.UI.Tab.touchmove-event", 
                "name": "touchmove", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects movement of a touch.  Event coordinates are always relative to the view in which the initial touch occurred"
            }, 
            {
                "filename": "Titanium.UI.Tab.touchstart-event", 
                "name": "touchstart", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects a gesture"
            }, 
            {
                "filename": "Titanium.UI.Tab.twofingertap-event", 
                "name": "twofingertap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a two-finger tap against the view"
            }
        ], 
        "examples": [
            {
                "code": "<p>In this example, we create a simple tab and add it to a tab group.</p>\n<pre><code>var tab = Titanium.UI.createTab({\n    window:mywin,\n    title:'Hello',\n    icon:'myicon.png'\n});\ntabGroup.addTab(tab);\n</code></pre>", 
                "description": "Simple Tab Example"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.UI.Tab.add-method", 
                "name": "add", 
                "parameters": [
                    {
                        "description": "the view to add to this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add a child to the view hierarchy"
            }, 
            {
                "filename": "Titanium.UI.Tab.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.Tab.animate-method", 
                "name": "animate", 
                "parameters": [
                    {
                        "description": "either a dictionary of animation properties or an Animation object", 
                        "name": "obj", 
                        "type": "object"
                    }, 
                    {
                        "description": "function to be invoked upon completion of the animation", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "animate the view"
            }, 
            {
                "filename": "Titanium.UI.Tab.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.Tab.hide-method", 
                "name": "hide", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "hide the view"
            }, 
            {
                "filename": "Titanium.UI.Tab.remove-method", 
                "name": "remove", 
                "parameters": [
                    {
                        "description": "the view to remove from this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously add view from the view hiearchy"
            }, 
            {
                "filename": "Titanium.UI.Tab.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously added event listener"
            }, 
            {
                "filename": "Titanium.UI.Tab.show-method", 
                "name": "show", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "make the view visible"
            }, 
            {
                "filename": "Titanium.UI.Tab.toImage-method", 
                "name": "toImage", 
                "parameters": [
                    {
                        "description": "function to be invoked upon completion. if non-null, this method will be performed asynchronously. if null, it will be performed immediately", 
                        "name": "f", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.8", 
                "value": "return a Blob image of the rendered view"
            }
        ], 
        "notes": "", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.anchorPoint-property", 
                "isClassProperty": false, 
                "name": "anchorPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the anchor point value. anchor specifies the position by which animation should occur. center is 0.5, 0.5"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.animatedCenterPoint-property", 
                "isClassProperty": false, 
                "name": "animatedCenterPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "read-only object with x and y properties of where the view is during animation"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.backgroundColor-property", 
                "isClassProperty": false, 
                "name": "backgroundColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.backgroundDisabledColor-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background color of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.backgroundDisabledImage-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background image url of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.backgroundFocusedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.backgroundFocusedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.backgroundGradient-property", 
                "isClassProperty": false, 
                "name": "backgroundGradient", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a background gradient for the view with the properties: type,startPoint,endPoint,startRadius,endRadius,backfillStart,backfillEnd,colors."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.backgroundImage-property", 
                "isClassProperty": false, 
                "name": "backgroundImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background image url of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.backgroundLeftCap-property", 
                "isClassProperty": false, 
                "name": "backgroundLeftCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the left end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The right end cap is therefore computed by adding the size of the left end cap and the middle portion together and then subtracting that value from the width of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.backgroundSelectedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.backgroundSelectedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.backgroundTopCap-property", 
                "isClassProperty": false, 
                "name": "backgroundTopCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the top end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The bottom end cap is therefore computed by adding the size of the top end cap and the middle portion together and then subtracting that value from the height of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.badge-property", 
                "isClassProperty": false, 
                "name": "badge", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the badge value for the tab group for this tab. null indicates no badge is value</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.borderColor-property", 
                "isClassProperty": false, 
                "name": "borderColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the border color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.borderRadius-property", 
                "isClassProperty": false, 
                "name": "borderRadius", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border radius of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.borderWidth-property", 
                "isClassProperty": false, 
                "name": "borderWidth", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border width of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.bottom-property", 
                "isClassProperty": false, 
                "name": "bottom", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view bottom position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.center-property", 
                "isClassProperty": false, 
                "name": "center", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the center of the views position relative to the parent view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.focusable-property", 
                "isClassProperty": false, 
                "name": "focusable", 
                "platforms": [
                    "android"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "Set true if you want a view to be focusable when navigating with the trackball or D-Pad. Default: false. (Android Only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.font-family-property", 
                "isClassProperty": false, 
                "name": "font-family", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font family"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.font-size-property", 
                "isClassProperty": false, 
                "name": "font-size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font size"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.font-style-property", 
                "isClassProperty": false, 
                "name": "font-style", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font style, either normal or italics"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.font-weight-property", 
                "isClassProperty": false, 
                "name": "font-weight", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font weight, either normal or bold"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.height-property", 
                "isClassProperty": false, 
                "name": "height", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view height. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.icon-property", 
                "isClassProperty": false, 
                "name": "icon", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the icon url for the tab group for this tab</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.left-property", 
                "isClassProperty": false, 
                "name": "left", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view left position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.opacity-property", 
                "isClassProperty": false, 
                "name": "opacity", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the opacity from 0.0-1.0"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.right-property", 
                "isClassProperty": false, 
                "name": "right", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view right position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.size-property", 
                "isClassProperty": false, 
                "name": "size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the size of the view as a dictionary of width and height properties"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.softKeyboardOnFocus-property", 
                "isClassProperty": false, 
                "name": "softKeyboardOnFocus", 
                "platforms": [
                    "android"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "One of Titanium.UI.Android.SOFT_KEYBOARD_DEFAULT_ON_FOCUS, Titanium.UI.Android.SOFT_KEYBOARD_HIDE_ON_FOCUS, or Titanium.UI.Android.SOFT_KEYBOARD_SHOW_ON_FOCUS. (Android only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.title-property", 
                "isClassProperty": false, 
                "name": "title", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the title for the tab group for this tab</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.top-property", 
                "isClassProperty": false, 
                "name": "top", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view top position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.touchEnabled-property", 
                "isClassProperty": false, 
                "name": "touchEnabled", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean indicating if the view should receive touch events (true, default) or forward them to peers (false)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.transform-property", 
                "isClassProperty": false, 
                "name": "transform", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the transformation matrix to apply to the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.visible-property", 
                "isClassProperty": false, 
                "name": "visible", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean of the visibility of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.width-property", 
                "isClassProperty": false, 
                "name": "width", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view width. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.window-property", 
                "isClassProperty": false, 
                "name": "window", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>the root level tab window.  all tabs must have at least one root level tab window.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Tab.zIndex-property", 
                "isClassProperty": false, 
                "name": "zIndex", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "the z index position relative to other sibling views"
            }
        ], 
        "returns": null, 
        "since": "0.8", 
        "subtype": "view", 
        "type": "object"
    }, 
    "Titanium.UI.TabGroup": {
        "deprecated": null, 
        "description": "<p>The Tab Group allows you to manage a tabbed UI of one or more windows. The Tab Group is created by the method <a href=\"Titanium.UI.createTabGroup.html\">Titanium.UI.createTabGroup</a>.</p>", 
        "events": [
            {
                "filename": "Titanium.UI.TabGroup.blur-event", 
                "name": "blur", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "index": "<p>the tab index</p>", 
                    "previousIndex": "<p>the previous tab index</p>", 
                    "previousTab": "<p>the previous tab object</p>", 
                    "source": "the source object that fired the event", 
                    "tab": "<p>the tab object</p>", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the tab group loses focus</p>"
            }, 
            {
                "filename": "Titanium.UI.TabGroup.click-event", 
                "name": "click", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a click (longer than touch) against the view"
            }, 
            {
                "filename": "Titanium.UI.TabGroup.close-event", 
                "name": "close", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the tab group is closed</p>"
            }, 
            {
                "filename": "Titanium.UI.TabGroup.dblclick-event", 
                "name": "dblclick", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double click against the view"
            }, 
            {
                "filename": "Titanium.UI.TabGroup.doubletap-event", 
                "name": "doubletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double tap against the view"
            }, 
            {
                "filename": "Titanium.UI.TabGroup.focus-event", 
                "name": "focus", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "index": "<p>the tab index</p>", 
                    "previousIndex": "<p>the previous tab index</p>", 
                    "previousTab": "<p>the previous tab object</p>", 
                    "source": "the source object that fired the event", 
                    "tab": "<p>the tab object</p>", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the tab group gains focus</p>"
            }, 
            {
                "filename": "Titanium.UI.TabGroup.open-event", 
                "name": "open", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the tab group is opened</p>"
            }, 
            {
                "filename": "Titanium.UI.TabGroup.singletap-event", 
                "name": "singletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a single tap against the view"
            }, 
            {
                "filename": "Titanium.UI.TabGroup.swipe-event", 
                "name": "swipe", 
                "properties": {
                    "direction": "direction of the swipe - either left or right", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a swipe (left or right) against the view"
            }, 
            {
                "filename": "Titanium.UI.TabGroup.touchcancel-event", 
                "name": "touchcancel", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is interrupted by the device. this happens in circumenstances such as an incoming call to allow the UI to clean up state."
            }, 
            {
                "filename": "Titanium.UI.TabGroup.touchend-event", 
                "name": "touchend", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is completed"
            }, 
            {
                "filename": "Titanium.UI.TabGroup.touchmove-event", 
                "name": "touchmove", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects movement of a touch.  Event coordinates are always relative to the view in which the initial touch occurred"
            }, 
            {
                "filename": "Titanium.UI.TabGroup.touchstart-event", 
                "name": "touchstart", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects a gesture"
            }, 
            {
                "filename": "Titanium.UI.TabGroup.twofingertap-event", 
                "name": "twofingertap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a two-finger tap against the view"
            }
        ], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.UI.TabGroup.add-method", 
                "name": "add", 
                "parameters": [
                    {
                        "description": "the view to add to this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "add a child to the view hierarchy"
            }, 
            {
                "filename": "Titanium.UI.TabGroup.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.TabGroup.addTab-method", 
                "name": "addTab", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "<p>add a tab to the tab group</p>"
            }, 
            {
                "filename": "Titanium.UI.TabGroup.animate-method", 
                "name": "animate", 
                "parameters": [
                    {
                        "description": "either a dictionary of animation properties or an Animation object", 
                        "name": "obj", 
                        "type": "object"
                    }, 
                    {
                        "description": "function to be invoked upon completion of the animation", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "animate the view"
            }, 
            {
                "filename": "Titanium.UI.TabGroup.close-method", 
                "name": "close", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "<p>close the tab group and remove it from the UI</p>"
            }, 
            {
                "filename": "Titanium.UI.TabGroup.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.TabGroup.hide-method", 
                "name": "hide", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "hide the view"
            }, 
            {
                "filename": "Titanium.UI.TabGroup.open-method", 
                "name": "open", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "<p>open the tab group and make it visible</p>"
            }, 
            {
                "filename": "Titanium.UI.TabGroup.remove-method", 
                "name": "remove", 
                "parameters": [
                    {
                        "description": "the view to remove from this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "remove a previously add view from the view hiearchy"
            }, 
            {
                "filename": "Titanium.UI.TabGroup.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "remove a previously added event listener"
            }, 
            {
                "filename": "Titanium.UI.TabGroup.removeTab-method", 
                "name": "removeTab", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "<p>remove a tab from the tab group</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.setActiveTab-method", 
                "name": "setActiveTab", 
                "parameters": [
                    {
                        "description": "an int representing the desired tab index or a reference to the tab object you'd like to switch to", 
                        "name": "indexOrObject", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "<p>select the currently active tab in a tab group</p>"
            }, 
            {
                "filename": "Titanium.UI.TabGroup.show-method", 
                "name": "show", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "make the view visible"
            }, 
            {
                "filename": "Titanium.UI.TabGroup.toImage-method", 
                "name": "toImage", 
                "parameters": [
                    {
                        "description": "function to be invoked upon completion. if non-null, this method will be performed asynchronously. if null, it will be performed immediately", 
                        "name": "f", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.9", 
                "value": "return a Blob image of the rendered view"
            }
        ], 
        "notes": "<p>Note that when opening a tab group, if one or more of its tabs have been set 'active' prior to opening, or if setActiveTab() has been called while a tab is 'active', the result of which tab is initially selected is undefined.</p>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.activeTab-property", 
                "isClassProperty": false, 
                "name": "activeTab", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>the active tab</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.allowUserCustomization-property", 
                "isClassProperty": false, 
                "name": "allowUserCustomization", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>whether or not the user can configure the tab group via the 'More' tab's edit functionality.  iPhone/iPad only</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.anchorPoint-property", 
                "isClassProperty": false, 
                "name": "anchorPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the anchor point value. anchor specifies the position by which animation should occur. center is 0.5, 0.5"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.animatedCenterPoint-property", 
                "isClassProperty": false, 
                "name": "animatedCenterPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "read-only object with x and y properties of where the view is during animation"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.backgroundColor-property", 
                "isClassProperty": false, 
                "name": "backgroundColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.backgroundDisabledColor-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background color of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.backgroundDisabledImage-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background image url of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.backgroundFocusedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.backgroundFocusedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.backgroundGradient-property", 
                "isClassProperty": false, 
                "name": "backgroundGradient", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a background gradient for the view with the properties: type,startPoint,endPoint,startRadius,endRadius,backfillStart,backfillEnd,colors."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.backgroundImage-property", 
                "isClassProperty": false, 
                "name": "backgroundImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background image url of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.backgroundLeftCap-property", 
                "isClassProperty": false, 
                "name": "backgroundLeftCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the left end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The right end cap is therefore computed by adding the size of the left end cap and the middle portion together and then subtracting that value from the width of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.backgroundSelectedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.backgroundSelectedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.backgroundTopCap-property", 
                "isClassProperty": false, 
                "name": "backgroundTopCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the top end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The bottom end cap is therefore computed by adding the size of the top end cap and the middle portion together and then subtracting that value from the height of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.barColor-property", 
                "isClassProperty": false, 
                "name": "barColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the default navigation bar color (typically for the \"More\" tab)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.borderColor-property", 
                "isClassProperty": false, 
                "name": "borderColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the border color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.borderRadius-property", 
                "isClassProperty": false, 
                "name": "borderRadius", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border radius of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.borderWidth-property", 
                "isClassProperty": false, 
                "name": "borderWidth", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border width of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.bottom-property", 
                "isClassProperty": false, 
                "name": "bottom", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view bottom position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.center-property", 
                "isClassProperty": false, 
                "name": "center", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the center of the views position relative to the parent view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.editButtonTitle-property", 
                "isClassProperty": false, 
                "name": "editButtonTitle", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the title for the 'More' tab edit button.  iPhone/iPad only</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.focusable-property", 
                "isClassProperty": false, 
                "name": "focusable", 
                "platforms": [
                    "android"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "Set true if you want a view to be focusable when navigating with the trackball or D-Pad. Default: false. (Android Only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.font-family-property", 
                "isClassProperty": false, 
                "name": "font-family", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font family"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.font-size-property", 
                "isClassProperty": false, 
                "name": "font-size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font size"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.font-style-property", 
                "isClassProperty": false, 
                "name": "font-style", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font style, either normal or italics"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.font-weight-property", 
                "isClassProperty": false, 
                "name": "font-weight", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font weight, either normal or bold"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.height-property", 
                "isClassProperty": false, 
                "name": "height", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view height. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.left-property", 
                "isClassProperty": false, 
                "name": "left", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view left position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.opacity-property", 
                "isClassProperty": false, 
                "name": "opacity", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the opacity from 0.0-1.0"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.right-property", 
                "isClassProperty": false, 
                "name": "right", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view right position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.size-property", 
                "isClassProperty": false, 
                "name": "size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the size of the view as a dictionary of width and height properties"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.softKeyboardOnFocus-property", 
                "isClassProperty": false, 
                "name": "softKeyboardOnFocus", 
                "platforms": [
                    "android"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "One of Titanium.UI.Android.SOFT_KEYBOARD_DEFAULT_ON_FOCUS, Titanium.UI.Android.SOFT_KEYBOARD_HIDE_ON_FOCUS, or Titanium.UI.Android.SOFT_KEYBOARD_SHOW_ON_FOCUS. (Android only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.tabs-property", 
                "isClassProperty": false, 
                "name": "tabs", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "array", 
                "type_jsca": "array", 
                "value": "<p>array of tab objects that are managed by the tab group</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.top-property", 
                "isClassProperty": false, 
                "name": "top", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view top position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.touchEnabled-property", 
                "isClassProperty": false, 
                "name": "touchEnabled", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean indicating if the view should receive touch events (true, default) or forward them to peers (false)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.transform-property", 
                "isClassProperty": false, 
                "name": "transform", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the transformation matrix to apply to the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.visible-property", 
                "isClassProperty": false, 
                "name": "visible", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean of the visibility of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.width-property", 
                "isClassProperty": false, 
                "name": "width", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view width. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.windowSoftInputMode-property", 
                "isClassProperty": false, 
                "name": "windowSoftInputMode", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>One of Ti.UI.Android.SOFT_INPUT_ADJUST_PAN, Ti.UI.Android.SOFT_INPUT_ADJUST_RESIZE, or Ti.UI.Android.SOFT_INPUT_ADJUST_UNSPECIFIED. Note: MUST be passed in the creation options. (Android Only) <a href=\"http://developer.android.com/reference/android/view/Window.html#setSoftInputMode(int)\">Android Doc: Window.setSoftInputMode</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabGroup.zIndex-property", 
                "isClassProperty": false, 
                "name": "zIndex", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "the z index position relative to other sibling views"
            }
        ], 
        "returns": null, 
        "since": "0.9", 
        "subtype": "view", 
        "type": "object"
    }, 
    "Titanium.UI.TabbedBar": {
        "deprecated": null, 
        "description": "<p>A Tabbed Bar is created by the method <a href=\"Titanium.UI.createTabbedBar.html\">Titanium.UI.createTabbedBar</a>. The difference between the Tabbed Bar and the Button Bar is that the tabbed bar visually maintains a state (visually distinguished as a pressed or selected look).</p>", 
        "events": [
            {
                "filename": "Titanium.UI.TabbedBar.click-event", 
                "name": "click", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "index": "<p>the index of the button that was clicked</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a click (longer than touch) against the view"
            }, 
            {
                "filename": "Titanium.UI.TabbedBar.dblclick-event", 
                "name": "dblclick", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double click against the view"
            }, 
            {
                "filename": "Titanium.UI.TabbedBar.doubletap-event", 
                "name": "doubletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double tap against the view"
            }, 
            {
                "filename": "Titanium.UI.TabbedBar.singletap-event", 
                "name": "singletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a single tap against the view"
            }, 
            {
                "filename": "Titanium.UI.TabbedBar.swipe-event", 
                "name": "swipe", 
                "properties": {
                    "direction": "direction of the swipe - either left or right", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a swipe (left or right) against the view"
            }, 
            {
                "filename": "Titanium.UI.TabbedBar.touchcancel-event", 
                "name": "touchcancel", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is interrupted by the device. this happens in circumenstances such as an incoming call to allow the UI to clean up state."
            }, 
            {
                "filename": "Titanium.UI.TabbedBar.touchend-event", 
                "name": "touchend", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is completed"
            }, 
            {
                "filename": "Titanium.UI.TabbedBar.touchmove-event", 
                "name": "touchmove", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects movement of a touch.  Event coordinates are always relative to the view in which the initial touch occurred"
            }, 
            {
                "filename": "Titanium.UI.TabbedBar.touchstart-event", 
                "name": "touchstart", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects a gesture"
            }, 
            {
                "filename": "Titanium.UI.TabbedBar.twofingertap-event", 
                "name": "twofingertap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a two-finger tap against the view"
            }
        ], 
        "examples": [
            {
                "code": "<pre><code>var bb1 = Titanium.UI.createTabbedBar({\n    labels:['One', 'Two', 'Three'],\n    backgroundColor:'#336699',\n    top:50,\n    style:Titanium.UI.iPhone.SystemButtonStyle.BAR,\n    height:25,\n    width:200\n});\nwin.add(bb1);\n</code></pre>", 
                "description": "Simple Tabbed Bar with 3 items"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.UI.TabbedBar.add-method", 
                "name": "add", 
                "parameters": [
                    {
                        "description": "the view to add to this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add a child to the view hierarchy"
            }, 
            {
                "filename": "Titanium.UI.TabbedBar.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.TabbedBar.animate-method", 
                "name": "animate", 
                "parameters": [
                    {
                        "description": "either a dictionary of animation properties or an Animation object", 
                        "name": "obj", 
                        "type": "object"
                    }, 
                    {
                        "description": "function to be invoked upon completion of the animation", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "animate the view"
            }, 
            {
                "filename": "Titanium.UI.TabbedBar.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.TabbedBar.hide-method", 
                "name": "hide", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "hide the view"
            }, 
            {
                "filename": "Titanium.UI.TabbedBar.remove-method", 
                "name": "remove", 
                "parameters": [
                    {
                        "description": "the view to remove from this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously add view from the view hiearchy"
            }, 
            {
                "filename": "Titanium.UI.TabbedBar.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously added event listener"
            }, 
            {
                "filename": "Titanium.UI.TabbedBar.show-method", 
                "name": "show", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "make the view visible"
            }, 
            {
                "filename": "Titanium.UI.TabbedBar.toImage-method", 
                "name": "toImage", 
                "parameters": [
                    {
                        "description": "function to be invoked upon completion. if non-null, this method will be performed asynchronously. if null, it will be performed immediately", 
                        "name": "f", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.8", 
                "value": "return a Blob image of the rendered view"
            }
        ], 
        "notes": "<p>For iPhone, the style constants are available in the constants defined in <a href=\"Titanium.UI.iPhone.SystemButtonStyle\">Titanium.UI.iPhone.SystemButtonStyle</a>.</p>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.anchorPoint-property", 
                "isClassProperty": false, 
                "name": "anchorPoint", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the anchor point value. anchor specifies the position by which animation should occur. center is 0.5, 0.5"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.animatedCenterPoint-property", 
                "isClassProperty": false, 
                "name": "animatedCenterPoint", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "read-only object with x and y properties of where the view is during animation"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.backgroundColor-property", 
                "isClassProperty": false, 
                "name": "backgroundColor", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.backgroundDisabledColor-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledColor", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background color of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.backgroundDisabledImage-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledImage", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background image url of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.backgroundFocusedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedColor", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.backgroundFocusedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedImage", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.backgroundGradient-property", 
                "isClassProperty": false, 
                "name": "backgroundGradient", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a background gradient for the view with the properties: type,startPoint,endPoint,startRadius,endRadius,backfillStart,backfillEnd,colors."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.backgroundImage-property", 
                "isClassProperty": false, 
                "name": "backgroundImage", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background image url of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.backgroundLeftCap-property", 
                "isClassProperty": false, 
                "name": "backgroundLeftCap", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the left end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The right end cap is therefore computed by adding the size of the left end cap and the middle portion together and then subtracting that value from the width of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.backgroundSelectedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedColor", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.backgroundSelectedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedImage", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.backgroundTopCap-property", 
                "isClassProperty": false, 
                "name": "backgroundTopCap", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the top end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The bottom end cap is therefore computed by adding the size of the top end cap and the middle portion together and then subtracting that value from the height of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.borderColor-property", 
                "isClassProperty": false, 
                "name": "borderColor", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the border color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.borderRadius-property", 
                "isClassProperty": false, 
                "name": "borderRadius", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border radius of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.borderWidth-property", 
                "isClassProperty": false, 
                "name": "borderWidth", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border width of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.bottom-property", 
                "isClassProperty": false, 
                "name": "bottom", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view bottom position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.center-property", 
                "isClassProperty": false, 
                "name": "center", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the center of the views position relative to the parent view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.font-family-property", 
                "isClassProperty": false, 
                "name": "font-family", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font family"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.font-size-property", 
                "isClassProperty": false, 
                "name": "font-size", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font size"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.font-style-property", 
                "isClassProperty": false, 
                "name": "font-style", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font style, either normal or italics"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.font-weight-property", 
                "isClassProperty": false, 
                "name": "font-weight", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font weight, either normal or bold"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.height-property", 
                "isClassProperty": false, 
                "name": "height", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view height. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.index-property", 
                "isClassProperty": false, 
                "name": "index", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the selected index</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.labels-property", 
                "isClassProperty": false, 
                "name": "labels", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "array", 
                "type_jsca": "array", 
                "value": "<p>the array of labels for the tabbed bar. each object should have the properties <tt>title</tt>, <tt>image</tt>, <tt>width</tt> and <tt>enabled</tt>.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.left-property", 
                "isClassProperty": false, 
                "name": "left", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view left position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.opacity-property", 
                "isClassProperty": false, 
                "name": "opacity", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the opacity from 0.0-1.0"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.right-property", 
                "isClassProperty": false, 
                "name": "right", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view right position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.size-property", 
                "isClassProperty": false, 
                "name": "size", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the size of the view as a dictionary of width and height properties"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.style-property", 
                "isClassProperty": false, 
                "name": "style", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the style of the tabbed bar</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.top-property", 
                "isClassProperty": false, 
                "name": "top", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view top position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.touchEnabled-property", 
                "isClassProperty": false, 
                "name": "touchEnabled", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean indicating if the view should receive touch events (true, default) or forward them to peers (false)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.transform-property", 
                "isClassProperty": false, 
                "name": "transform", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the transformation matrix to apply to the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.visible-property", 
                "isClassProperty": false, 
                "name": "visible", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean of the visibility of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.width-property", 
                "isClassProperty": false, 
                "name": "width", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view width. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TabbedBar.zIndex-property", 
                "isClassProperty": false, 
                "name": "zIndex", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "the z index position relative to other sibling views"
            }
        ], 
        "returns": null, 
        "since": "0.8", 
        "subtype": "view", 
        "type": "object"
    }, 
    "Titanium.UI.TableView": {
        "deprecated": null, 
        "description": "<p>A Table View allows you to create a scrollable table of content in a list-based fashion. The Table View is created by the method <a href=\"Titanium.UI.createTableView.html\">Titanium.UI.createTableView</a>.</p>", 
        "events": [
            {
                "filename": "Titanium.UI.TableView.click-event", 
                "name": "click", 
                "properties": {
                    "detail": "<p>boolean to indicate if the right area was clicked</p>", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "index": "<p>table view row index</p>", 
                    "row": "<p>table view row object</p>", 
                    "rowData": "<p>table view row data object</p>", 
                    "searchMode": "<p>boolean to indicate if the table is in search mode</p>", 
                    "section": "<p>table view section object</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a click (longer than touch) against the view"
            }, 
            {
                "filename": "Titanium.UI.TableView.dblclick-event", 
                "name": "dblclick", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double click against the view"
            }, 
            {
                "filename": "Titanium.UI.TableView.delete-event", 
                "name": "delete", 
                "properties": {
                    "detail": "<p>boolean to indicate if the right area was clicked</p>", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "index": "<p>table view row index</p>", 
                    "row": "<p>table view row object</p>", 
                    "rowData": "<p>table view row data object</p>", 
                    "searchMode": "<p>boolean to indicate if the table is in search mode</p>", 
                    "section": "<p>table view section object</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when a table row is delete by the user</p>"
            }, 
            {
                "filename": "Titanium.UI.TableView.doubletap-event", 
                "name": "doubletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double tap against the view"
            }, 
            {
                "filename": "Titanium.UI.TableView.move-event", 
                "name": "move", 
                "properties": {
                    "detail": "<p>boolean to indicate if the right area was clicked</p>", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "index": "<p>table view row index</p>", 
                    "row": "<p>table view row object</p>", 
                    "rowData": "<p>table view row data object</p>", 
                    "searchMode": "<p>boolean to indicate if the table is in search mode</p>", 
                    "section": "<p>table view section object</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when a table row is moved by the user</p>"
            }, 
            {
                "filename": "Titanium.UI.TableView.scroll-event", 
                "name": "scroll", 
                "properties": {
                    "contentOffset": "<p>dictionary with <tt>x</tt> and <tt>y</tt> properties containing the content offset (iOS only)</p>", 
                    "contentSize": "<p>dictionary with <tt>width</tt> and <tt>height</tt> properties containing the size of the content (regardless of the display size in the case of scrolling) (iOS only)</p>", 
                    "firstVisibleItem": "<p>the row index of the topmost visible row in the view (Android only)</p>", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "size": "<p>dictionary with <tt>width</tt> and <tt>height</tt> properties containing the size of the visible table view</p>", 
                    "source": "the source object that fired the event", 
                    "totalItemCount": "<p>the total number of rows in the view (Android only)</p>", 
                    "type": "the name of the event fired", 
                    "visibleItemCount": "<p>the number of rows currently visible in the view (Android only)</p>", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the table view is scrolled</p>"
            }, 
            {
                "filename": "Titanium.UI.TableView.scrollEnd-event", 
                "name": "scrollEnd", 
                "properties": {
                    "contentOffset": "<p>dictionary with <tt>x</tt> and <tt>y</tt> properties containing the content offset (iOS only)</p>", 
                    "contentSize": "<p>dictionary with <tt>width</tt> and <tt>height</tt> properties containing the size of the content (regardless of the display size in the case of scrolling) (iOS only)</p>", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "size": "<p>dictionary with <tt>width</tt> and <tt>height</tt> properties containing the size of the visible table view</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the table view stops scrolling</p>"
            }, 
            {
                "filename": "Titanium.UI.TableView.singletap-event", 
                "name": "singletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a single tap against the view"
            }, 
            {
                "filename": "Titanium.UI.TableView.swipe-event", 
                "name": "swipe", 
                "properties": {
                    "direction": "direction of the swipe - either left or right", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a swipe (left or right) against the view"
            }, 
            {
                "filename": "Titanium.UI.TableView.touchcancel-event", 
                "name": "touchcancel", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is interrupted by the device. this happens in circumenstances such as an incoming call to allow the UI to clean up state."
            }, 
            {
                "filename": "Titanium.UI.TableView.touchend-event", 
                "name": "touchend", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is completed"
            }, 
            {
                "filename": "Titanium.UI.TableView.touchmove-event", 
                "name": "touchmove", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects movement of a touch.  Event coordinates are always relative to the view in which the initial touch occurred"
            }, 
            {
                "filename": "Titanium.UI.TableView.touchstart-event", 
                "name": "touchstart", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects a gesture"
            }, 
            {
                "filename": "Titanium.UI.TableView.twofingertap-event", 
                "name": "twofingertap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a two-finger tap against the view"
            }
        ], 
        "examples": [
            {
                "code": "<p>The most basic example of a table view.</p>\n<pre><code>var data = [{title:\"Row 1\"},{title:\"Row 2\"}];\nvar table = Titanium.UI.createTableView({data:data});\nwin.add(table);\n</code></pre>", 
                "description": "Simple Table View with basic rows"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.UI.TableView.add-method", 
                "name": "add", 
                "parameters": [
                    {
                        "description": "the view to add to this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add a child to the view hierarchy"
            }, 
            {
                "filename": "Titanium.UI.TableView.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.TableView.animate-method", 
                "name": "animate", 
                "parameters": [
                    {
                        "description": "either a dictionary of animation properties or an Animation object", 
                        "name": "obj", 
                        "type": "object"
                    }, 
                    {
                        "description": "function to be invoked upon completion of the animation", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "animate the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.appendRow-method", 
                "name": "appendRow", 
                "parameters": [
                    {
                        "description": "row to append", 
                        "name": "row", 
                        "type": "object"
                    }, 
                    {
                        "description": "animation properties", 
                        "name": "properties", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>append a row to the table, optionally with animation</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.deleteRow-method", 
                "name": "deleteRow", 
                "parameters": [
                    {
                        "description": "index of row to delete", 
                        "name": "row", 
                        "type": "int"
                    }, 
                    {
                        "description": "animation properties", 
                        "name": "properties", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>delete an existing row, optionally with animation</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.deselectRow-method", 
                "name": "deselectRow", 
                "parameters": [
                    {
                        "description": "row index to deselect", 
                        "name": "row", 
                        "type": "int"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>programmatically deselect a row</p>"
            }, 
            {
                "filename": "Titanium.UI.TableView.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.TableView.hide-method", 
                "name": "hide", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "hide the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.insertRowAfter-method", 
                "name": "insertRowAfter", 
                "parameters": [
                    {
                        "description": "index", 
                        "name": "index", 
                        "type": "int"
                    }, 
                    {
                        "description": "row to insert", 
                        "name": "row", 
                        "type": "object"
                    }, 
                    {
                        "description": "animation properties", 
                        "name": "properties", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>insert a row before another row, optionally with animation</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.insertRowBefore-method", 
                "name": "insertRowBefore", 
                "parameters": [
                    {
                        "description": "index", 
                        "name": "index", 
                        "type": "int"
                    }, 
                    {
                        "description": "row to insert", 
                        "name": "row", 
                        "type": "object"
                    }, 
                    {
                        "description": "animation properties", 
                        "name": "properties", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>insert a row after another row, optionally with animation</p>"
            }, 
            {
                "filename": "Titanium.UI.TableView.remove-method", 
                "name": "remove", 
                "parameters": [
                    {
                        "description": "the view to remove from this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously add view from the view hiearchy"
            }, 
            {
                "filename": "Titanium.UI.TableView.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously added event listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.scrollToIndex-method", 
                "name": "scrollToIndex", 
                "parameters": [
                    {
                        "description": "index", 
                        "name": "index", 
                        "type": "int"
                    }, 
                    {
                        "description": "animation properties. <tt>position</tt> property controls the position constant to use for position (on iPhone, use constants from Titanium.UI.iPhone.TableViewScrollPosition).", 
                        "name": "properties", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>scroll to a specific row index and ensure that that row is on screen</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.scrollToTop-method", 
                "name": "scrollToTop", 
                "parameters": [
                    {
                        "description": "y position", 
                        "name": "top", 
                        "type": "float"
                    }, 
                    {
                        "description": "optional dictionary with the key <tt>animated</tt> (default, true) as boolean to indicate if the scroll should be animated or immediate", 
                        "name": "properties", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>scroll the table to a specific top position where 0 is the topmost y position in the table view</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.selectRow-method", 
                "name": "selectRow", 
                "parameters": [
                    {
                        "description": "row index to select", 
                        "name": "row", 
                        "type": "int"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>programmatically select a row</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.setData-method", 
                "name": "setData", 
                "parameters": [
                    {
                        "description": "data array of rows either as objects or row objects", 
                        "name": "data", 
                        "type": "array"
                    }, 
                    {
                        "description": "animation properties", 
                        "name": "properties", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>set the data in the table, optionally with animation</p>"
            }, 
            {
                "filename": "Titanium.UI.TableView.show-method", 
                "name": "show", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "make the view visible"
            }, 
            {
                "filename": "Titanium.UI.TableView.toImage-method", 
                "name": "toImage", 
                "parameters": [
                    {
                        "description": "function to be invoked upon completion. if non-null, this method will be performed asynchronously. if null, it will be performed immediately", 
                        "name": "f", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.8", 
                "value": "return a Blob image of the rendered view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.updateRow-method", 
                "name": "updateRow", 
                "parameters": [
                    {
                        "description": "row data to update", 
                        "name": "row", 
                        "type": "object"
                    }, 
                    {
                        "description": "animation properties", 
                        "name": "properties", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>update an existing row, optionally with animation</p>"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.allowsSelection-property", 
                "isClassProperty": false, 
                "name": "allowsSelection", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>true if the rows can be selected</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.allowsSelectionDuringEditing-property", 
                "isClassProperty": false, 
                "name": "allowsSelectionDuringEditing", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>true if the rows can be selected while editing the table (iOS Only)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.anchorPoint-property", 
                "isClassProperty": false, 
                "name": "anchorPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the anchor point value. anchor specifies the position by which animation should occur. center is 0.5, 0.5"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.animatedCenterPoint-property", 
                "isClassProperty": false, 
                "name": "animatedCenterPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "read-only object with x and y properties of where the view is during animation"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.backgroundColor-property", 
                "isClassProperty": false, 
                "name": "backgroundColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.backgroundDisabledColor-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background color of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.backgroundDisabledImage-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background image url of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.backgroundFocusedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.backgroundFocusedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.backgroundGradient-property", 
                "isClassProperty": false, 
                "name": "backgroundGradient", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a background gradient for the view with the properties: type,startPoint,endPoint,startRadius,endRadius,backfillStart,backfillEnd,colors."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.backgroundImage-property", 
                "isClassProperty": false, 
                "name": "backgroundImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background image url of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.backgroundLeftCap-property", 
                "isClassProperty": false, 
                "name": "backgroundLeftCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the left end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The right end cap is therefore computed by adding the size of the left end cap and the middle portion together and then subtracting that value from the width of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.backgroundSelectedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.backgroundSelectedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.backgroundTopCap-property", 
                "isClassProperty": false, 
                "name": "backgroundTopCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the top end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The bottom end cap is therefore computed by adding the size of the top end cap and the middle portion together and then subtracting that value from the height of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.borderColor-property", 
                "isClassProperty": false, 
                "name": "borderColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the border color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.borderRadius-property", 
                "isClassProperty": false, 
                "name": "borderRadius", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border radius of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.borderWidth-property", 
                "isClassProperty": false, 
                "name": "borderWidth", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border width of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.bottom-property", 
                "isClassProperty": false, 
                "name": "bottom", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view bottom position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.center-property", 
                "isClassProperty": false, 
                "name": "center", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the center of the views position relative to the parent view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.data-property", 
                "isClassProperty": false, 
                "name": "data", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "array", 
                "type_jsca": "array", 
                "value": "<p>the data array of objects to be used for the rows of the table view</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.editable-property", 
                "isClassProperty": false, 
                "name": "editable", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>allow the table view to be editable (this must be true for swipe-to-delete) (iOS Only)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.editing-property", 
                "isClassProperty": false, 
                "name": "editing", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean to control the editing state of the table view (iOS Only)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.filterAttribute-property", 
                "isClassProperty": false, 
                "name": "filterAttribute", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the filter attribute to be used when searching. this property maps to your data object or a property on the row object</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.filterCaseInsensitive-property", 
                "isClassProperty": false, 
                "name": "filterCaseInsensitive", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean to indicate if the search should be case sensitive or case insensitive (default)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.focusable-property", 
                "isClassProperty": false, 
                "name": "focusable", 
                "platforms": [
                    "android"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "Set true if you want a view to be focusable when navigating with the trackball or D-Pad. Default: false. (Android Only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.font-family-property", 
                "isClassProperty": false, 
                "name": "font-family", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font family"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.font-size-property", 
                "isClassProperty": false, 
                "name": "font-size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font size"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.font-style-property", 
                "isClassProperty": false, 
                "name": "font-style", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font style, either normal or italics"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.font-weight-property", 
                "isClassProperty": false, 
                "name": "font-weight", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font weight, either normal or bold"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.footerTitle-property", 
                "isClassProperty": false, 
                "name": "footerTitle", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the table view footer title</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.footerView-property", 
                "isClassProperty": false, 
                "name": "footerView", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>the table view footer as a view that will be rendered instead of a label</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.headerTitle-property", 
                "isClassProperty": false, 
                "name": "headerTitle", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the table view header title</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.headerView-property", 
                "isClassProperty": false, 
                "name": "headerView", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>the table view header as a view that will be rendered instead of a label</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.height-property", 
                "isClassProperty": false, 
                "name": "height", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view height. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.index-property", 
                "isClassProperty": false, 
                "name": "index", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "array", 
                "type_jsca": "array", 
                "value": "<p>an array of objects (with title and index properties) to control the table view index</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.left-property", 
                "isClassProperty": false, 
                "name": "left", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view left position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.maxRowHeight-property", 
                "isClassProperty": false, 
                "name": "maxRowHeight", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>max row height for table view rows</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.minRowHeight-property", 
                "isClassProperty": false, 
                "name": "minRowHeight", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>min row height for table view rows</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.moving-property", 
                "isClassProperty": false, 
                "name": "moving", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean to control the moveable state of the table view (iOS Only)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.opacity-property", 
                "isClassProperty": false, 
                "name": "opacity", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the opacity from 0.0-1.0"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.right-property", 
                "isClassProperty": false, 
                "name": "right", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view right position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.rowHeight-property", 
                "isClassProperty": false, 
                "name": "rowHeight", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>default row height for table view rows</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.scrollable-property", 
                "isClassProperty": false, 
                "name": "scrollable", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>true (default) if tableview can be scrolled</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.search-property", 
                "isClassProperty": false, 
                "name": "search", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>the search field to use for the table view</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.searchHidden-property", 
                "isClassProperty": false, 
                "name": "searchHidden", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean to control the visibility of the search field</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.separatorColor-property", 
                "isClassProperty": false, 
                "name": "separatorColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the separator color color as a hex or named value</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.separatorStyle-property", 
                "isClassProperty": false, 
                "name": "separatorStyle", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the separator style constant. For iPhone, Titanium.UI.iPhone.TableViewSeparatorStyle</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.showVerticalScrollIndicator-property", 
                "isClassProperty": false, 
                "name": "showVerticalScrollIndicator", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>true (default) if tableview displays vertical scroll indicator (iOS Only)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.size-property", 
                "isClassProperty": false, 
                "name": "size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the size of the view as a dictionary of width and height properties"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.softKeyboardOnFocus-property", 
                "isClassProperty": false, 
                "name": "softKeyboardOnFocus", 
                "platforms": [
                    "android"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "One of Titanium.UI.Android.SOFT_KEYBOARD_DEFAULT_ON_FOCUS, Titanium.UI.Android.SOFT_KEYBOARD_HIDE_ON_FOCUS, or Titanium.UI.Android.SOFT_KEYBOARD_SHOW_ON_FOCUS. (Android only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.style-property", 
                "isClassProperty": false, 
                "name": "style", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>iPhone only. the style of the table view. constant from <a href=\"Titanium.UI.iPhone.TableViewStyle.html\">Titanium.UI.iPhone.TableViewStyle</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.top-property", 
                "isClassProperty": false, 
                "name": "top", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view top position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.touchEnabled-property", 
                "isClassProperty": false, 
                "name": "touchEnabled", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean indicating if the view should receive touch events (true, default) or forward them to peers (false)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.transform-property", 
                "isClassProperty": false, 
                "name": "transform", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the transformation matrix to apply to the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.visible-property", 
                "isClassProperty": false, 
                "name": "visible", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean of the visibility of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.width-property", 
                "isClassProperty": false, 
                "name": "width", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view width. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableView.zIndex-property", 
                "isClassProperty": false, 
                "name": "zIndex", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "the z index position relative to other sibling views"
            }
        ], 
        "returns": null, 
        "since": "0.8", 
        "subtype": "view", 
        "type": "object"
    }, 
    "Titanium.UI.TableViewRow": {
        "deprecated": null, 
        "description": "<p>A TableView row object created by the method <a href=\"Titanium.UI.createTableViewRow.html\">Titanium.UI.createTableViewRow</a>.</p>", 
        "events": [
            {
                "filename": "Titanium.UI.TableViewRow.click-event", 
                "name": "click", 
                "properties": {
                    "detail": "<p>boolean to indicate if the right area was clicked</p>", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "index": "<p>table view row index</p>", 
                    "row": "<p>table view row object</p>", 
                    "rowData": "<p>table view row data object</p>", 
                    "searchMode": "<p>boolean to indicate if the table is in search mode</p>", 
                    "section": "<p>table view section object</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a click (longer than touch) against the view"
            }, 
            {
                "filename": "Titanium.UI.TableViewRow.dblclick-event", 
                "name": "dblclick", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double click against the view"
            }, 
            {
                "filename": "Titanium.UI.TableViewRow.doubletap-event", 
                "name": "doubletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double tap against the view"
            }, 
            {
                "filename": "Titanium.UI.TableViewRow.singletap-event", 
                "name": "singletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a single tap against the view"
            }, 
            {
                "filename": "Titanium.UI.TableViewRow.swipe-event", 
                "name": "swipe", 
                "properties": {
                    "direction": "direction of the swipe - either left or right", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a swipe (left or right) against the view"
            }, 
            {
                "filename": "Titanium.UI.TableViewRow.touchcancel-event", 
                "name": "touchcancel", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is interrupted by the device. this happens in circumenstances such as an incoming call to allow the UI to clean up state."
            }, 
            {
                "filename": "Titanium.UI.TableViewRow.touchend-event", 
                "name": "touchend", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is completed"
            }, 
            {
                "filename": "Titanium.UI.TableViewRow.touchmove-event", 
                "name": "touchmove", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects movement of a touch.  Event coordinates are always relative to the view in which the initial touch occurred"
            }, 
            {
                "filename": "Titanium.UI.TableViewRow.touchstart-event", 
                "name": "touchstart", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects a gesture"
            }, 
            {
                "filename": "Titanium.UI.TableViewRow.twofingertap-event", 
                "name": "twofingertap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a two-finger tap against the view"
            }
        ], 
        "examples": [
            {
                "code": "<p>In this simple example, we create a table view row with a red square in the cell.</p>\n<pre><code>var row = Titanium.UI.createTableViewRow();\nvar view = Titanium.UI.createView({backgroundColor:'red',width:20,height:20});\nrow.height = 'auto';\nrow.add(view);\n</code></pre>", 
                "description": "Simple Table View Row example"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.UI.TableViewRow.add-method", 
                "name": "add", 
                "parameters": [
                    {
                        "description": "the view to add to this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "add a child to the view hierarchy"
            }, 
            {
                "filename": "Titanium.UI.TableViewRow.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.TableViewRow.animate-method", 
                "name": "animate", 
                "parameters": [
                    {
                        "description": "either a dictionary of animation properties or an Animation object", 
                        "name": "obj", 
                        "type": "object"
                    }, 
                    {
                        "description": "function to be invoked upon completion of the animation", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "animate the view"
            }, 
            {
                "filename": "Titanium.UI.TableViewRow.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.TableViewRow.hide-method", 
                "name": "hide", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "hide the view"
            }, 
            {
                "filename": "Titanium.UI.TableViewRow.remove-method", 
                "name": "remove", 
                "parameters": [
                    {
                        "description": "the view to remove from this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "remove a previously add view from the view hiearchy"
            }, 
            {
                "filename": "Titanium.UI.TableViewRow.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "remove a previously added event listener"
            }, 
            {
                "filename": "Titanium.UI.TableViewRow.show-method", 
                "name": "show", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "make the view visible"
            }, 
            {
                "filename": "Titanium.UI.TableViewRow.toImage-method", 
                "name": "toImage", 
                "parameters": [
                    {
                        "description": "function to be invoked upon completion. if non-null, this method will be performed asynchronously. if null, it will be performed immediately", 
                        "name": "f", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.9", 
                "value": "return a Blob image of the rendered view"
            }
        ], 
        "notes": "<p>Make sure you set the tableClass on each row instance if using more than one type of row layout. You can use the same value for each instance of a row where the layout is the same - even if the value of the elements inside the row have different values.  For example, if the text is the only thing different between two cells but the layout is the same, both row instances should have the same value for tableClass.</p>\n<p>You can listen for table row events on all rows by adding an event listener to the table view instance.  Events automatically propagate to parent views.</p>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.anchorPoint-property", 
                "isClassProperty": false, 
                "name": "anchorPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the anchor point value. anchor specifies the position by which animation should occur. center is 0.5, 0.5"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.animatedCenterPoint-property", 
                "isClassProperty": false, 
                "name": "animatedCenterPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "read-only object with x and y properties of where the view is during animation"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.backgroundColor-property", 
                "isClassProperty": false, 
                "name": "backgroundColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.backgroundDisabledColor-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background color of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.backgroundDisabledImage-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background image url of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.backgroundFocusedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.backgroundFocusedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.backgroundGradient-property", 
                "isClassProperty": false, 
                "name": "backgroundGradient", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a background gradient for the view with the properties: type,startPoint,endPoint,startRadius,endRadius,backfillStart,backfillEnd,colors."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.backgroundImage-property", 
                "isClassProperty": false, 
                "name": "backgroundImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background image url of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.backgroundLeftCap-property", 
                "isClassProperty": false, 
                "name": "backgroundLeftCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the left end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The right end cap is therefore computed by adding the size of the left end cap and the middle portion together and then subtracting that value from the width of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.backgroundSelectedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.backgroundSelectedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.backgroundTopCap-property", 
                "isClassProperty": false, 
                "name": "backgroundTopCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the top end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The bottom end cap is therefore computed by adding the size of the top end cap and the middle portion together and then subtracting that value from the height of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.borderColor-property", 
                "isClassProperty": false, 
                "name": "borderColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the border color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.borderRadius-property", 
                "isClassProperty": false, 
                "name": "borderRadius", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border radius of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.borderWidth-property", 
                "isClassProperty": false, 
                "name": "borderWidth", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border width of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.bottom-property", 
                "isClassProperty": false, 
                "name": "bottom", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view bottom position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.center-property", 
                "isClassProperty": false, 
                "name": "center", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the center of the views position relative to the parent view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.className-property", 
                "isClassProperty": false, 
                "name": "className", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the class name of the table. each table view cell must have a unique class name if the cell layout is different. however, use the same name for rows that have the same structural layout (even if the content is different) to provide maximum rendering performance.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.color-property", 
                "isClassProperty": false, 
                "name": "color", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>default color of the row when not selected</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.focusable-property", 
                "isClassProperty": false, 
                "name": "focusable", 
                "platforms": [
                    "android"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "Set true if you want a view to be focusable when navigating with the trackball or D-Pad. Default: false. (Android Only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.font-family-property", 
                "isClassProperty": false, 
                "name": "font-family", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font family"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.font-size-property", 
                "isClassProperty": false, 
                "name": "font-size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font size"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.font-style-property", 
                "isClassProperty": false, 
                "name": "font-style", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font style, either normal or italics"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.font-weight-property", 
                "isClassProperty": false, 
                "name": "font-weight", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font weight, either normal or bold"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.hasCheck-property", 
                "isClassProperty": false, 
                "name": "hasCheck", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>render a system provided check mark in the right image area of the row cell</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.hasChild-property", 
                "isClassProperty": false, 
                "name": "hasChild", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>render a system provided right arrow in the right image area of the row cell</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.hasDetail-property", 
                "isClassProperty": false, 
                "name": "hasDetail", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>render a system provided blue indicator icon in the right image area of the row cell</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.height-property", 
                "isClassProperty": false, 
                "name": "height", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view height. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.indentionLevel-property", 
                "isClassProperty": false, 
                "name": "indentionLevel", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the indention level for the cell (defaults to 0)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.layout-property", 
                "isClassProperty": false, 
                "name": "layout", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the layout algorithm to use for the layout. either absolute (default) or vertical.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.left-property", 
                "isClassProperty": false, 
                "name": "left", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view left position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.leftImage-property", 
                "isClassProperty": false, 
                "name": "leftImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>image url to render in the left image area of the row cell</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.opacity-property", 
                "isClassProperty": false, 
                "name": "opacity", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the opacity from 0.0-1.0"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.right-property", 
                "isClassProperty": false, 
                "name": "right", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view right position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.rightImage-property", 
                "isClassProperty": false, 
                "name": "rightImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>image url to render in the right image area of the row cell</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.selectedBackgroundColor-property", 
                "isClassProperty": false, 
                "name": "selectedBackgroundColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the background color to render when the row cell is selected</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.selectedBackgroundImage-property", 
                "isClassProperty": false, 
                "name": "selectedBackgroundImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the background image to render when the row cell is selected</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.selectedColor-property", 
                "isClassProperty": false, 
                "name": "selectedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>color of the row during selection</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.selectionStyle-property", 
                "isClassProperty": false, 
                "name": "selectionStyle", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>a selection style constant to control the selection color. For iPhone, use the constants from Titanium.UI.iPhone.TableViewCellSelectionStyle</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.size-property", 
                "isClassProperty": false, 
                "name": "size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the size of the view as a dictionary of width and height properties"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.softKeyboardOnFocus-property", 
                "isClassProperty": false, 
                "name": "softKeyboardOnFocus", 
                "platforms": [
                    "android"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "One of Titanium.UI.Android.SOFT_KEYBOARD_DEFAULT_ON_FOCUS, Titanium.UI.Android.SOFT_KEYBOARD_HIDE_ON_FOCUS, or Titanium.UI.Android.SOFT_KEYBOARD_SHOW_ON_FOCUS. (Android only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.title-property", 
                "isClassProperty": false, 
                "name": "title", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the title cell value. do not specify if using views as children of the row</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.top-property", 
                "isClassProperty": false, 
                "name": "top", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view top position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.touchEnabled-property", 
                "isClassProperty": false, 
                "name": "touchEnabled", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean indicating if the view should receive touch events (true, default) or forward them to peers (false)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.transform-property", 
                "isClassProperty": false, 
                "name": "transform", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the transformation matrix to apply to the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.visible-property", 
                "isClassProperty": false, 
                "name": "visible", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean of the visibility of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.width-property", 
                "isClassProperty": false, 
                "name": "width", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view width. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewRow.zIndex-property", 
                "isClassProperty": false, 
                "name": "zIndex", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "the z index position relative to other sibling views"
            }
        ], 
        "returns": null, 
        "since": "0.9", 
        "subtype": "view", 
        "type": "object"
    }, 
    "Titanium.UI.TableViewSection": {
        "deprecated": null, 
        "description": "<p>A TableView section object created by the method <a href=\"Titanium.UI.createTableViewSection.html\">Titanium.UI.createTableViewSection</a>.</p>", 
        "events": [
            {
                "filename": "Titanium.UI.TableViewSection.click-event", 
                "name": "click", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a click (longer than touch) against the view"
            }, 
            {
                "filename": "Titanium.UI.TableViewSection.dblclick-event", 
                "name": "dblclick", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double click against the view"
            }, 
            {
                "filename": "Titanium.UI.TableViewSection.doubletap-event", 
                "name": "doubletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double tap against the view"
            }, 
            {
                "filename": "Titanium.UI.TableViewSection.singletap-event", 
                "name": "singletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a single tap against the view"
            }, 
            {
                "filename": "Titanium.UI.TableViewSection.swipe-event", 
                "name": "swipe", 
                "properties": {
                    "direction": "direction of the swipe - either left or right", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a swipe (left or right) against the view"
            }, 
            {
                "filename": "Titanium.UI.TableViewSection.touchcancel-event", 
                "name": "touchcancel", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is interrupted by the device. this happens in circumenstances such as an incoming call to allow the UI to clean up state."
            }, 
            {
                "filename": "Titanium.UI.TableViewSection.touchend-event", 
                "name": "touchend", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is completed"
            }, 
            {
                "filename": "Titanium.UI.TableViewSection.touchmove-event", 
                "name": "touchmove", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects movement of a touch.  Event coordinates are always relative to the view in which the initial touch occurred"
            }, 
            {
                "filename": "Titanium.UI.TableViewSection.touchstart-event", 
                "name": "touchstart", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects a gesture"
            }, 
            {
                "filename": "Titanium.UI.TableViewSection.twofingertap-event", 
                "name": "twofingertap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a two-finger tap against the view"
            }
        ], 
        "examples": [
            {
                "code": "<p>In this example, we create a section with the header <tt>Hello</tt> and add two rows to it.</p>\n<pre><code>var section = Titanium.UI.createTableViewSection();\nsection.headerTitle = \"Hello\";\nvar row1 = Titanium.UI.createTableViewRow({title:\"Hello 1\"});\nvar row2 = Titanium.UI.createTableViewRow({title:\"Hello 2\"});\nsection.add(row1);\nsection.add(row2);\ntableview.add(section);\n</code></pre>", 
                "description": "Simple Table View Section Example"
            }
        ], 
        "methods": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.add-method", 
                "name": "add", 
                "parameters": [
                    {
                        "description": "the row object to add to the section", 
                        "name": "row", 
                        "type": "object"
                    }, 
                    {
                        "description": "the view to add to this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "add a child to the view hierarchy"
            }, 
            {
                "filename": "Titanium.UI.TableViewSection.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.TableViewSection.animate-method", 
                "name": "animate", 
                "parameters": [
                    {
                        "description": "either a dictionary of animation properties or an Animation object", 
                        "name": "obj", 
                        "type": "object"
                    }, 
                    {
                        "description": "function to be invoked upon completion of the animation", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "animate the view"
            }, 
            {
                "filename": "Titanium.UI.TableViewSection.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.TableViewSection.hide-method", 
                "name": "hide", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "hide the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.remove-method", 
                "name": "remove", 
                "parameters": [
                    {
                        "description": "the row object to remove from the section", 
                        "name": "row", 
                        "type": "object"
                    }, 
                    {
                        "description": "the view to remove from this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "remove a previously add view from the view hiearchy"
            }, 
            {
                "filename": "Titanium.UI.TableViewSection.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "remove a previously added event listener"
            }, 
            {
                "filename": "Titanium.UI.TableViewSection.show-method", 
                "name": "show", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "make the view visible"
            }, 
            {
                "filename": "Titanium.UI.TableViewSection.toImage-method", 
                "name": "toImage", 
                "parameters": [
                    {
                        "description": "function to be invoked upon completion. if non-null, this method will be performed asynchronously. if null, it will be performed immediately", 
                        "name": "f", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.9", 
                "value": "return a Blob image of the rendered view"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.anchorPoint-property", 
                "isClassProperty": false, 
                "name": "anchorPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the anchor point value. anchor specifies the position by which animation should occur. center is 0.5, 0.5"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.animatedCenterPoint-property", 
                "isClassProperty": false, 
                "name": "animatedCenterPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "read-only object with x and y properties of where the view is during animation"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.backgroundColor-property", 
                "isClassProperty": false, 
                "name": "backgroundColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.backgroundDisabledColor-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background color of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.backgroundDisabledImage-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background image url of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.backgroundFocusedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.backgroundFocusedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.backgroundGradient-property", 
                "isClassProperty": false, 
                "name": "backgroundGradient", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a background gradient for the view with the properties: type,startPoint,endPoint,startRadius,endRadius,backfillStart,backfillEnd,colors."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.backgroundImage-property", 
                "isClassProperty": false, 
                "name": "backgroundImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background image url of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.backgroundLeftCap-property", 
                "isClassProperty": false, 
                "name": "backgroundLeftCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the left end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The right end cap is therefore computed by adding the size of the left end cap and the middle portion together and then subtracting that value from the width of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.backgroundSelectedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.backgroundSelectedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.backgroundTopCap-property", 
                "isClassProperty": false, 
                "name": "backgroundTopCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the top end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The bottom end cap is therefore computed by adding the size of the top end cap and the middle portion together and then subtracting that value from the height of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.borderColor-property", 
                "isClassProperty": false, 
                "name": "borderColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the border color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.borderRadius-property", 
                "isClassProperty": false, 
                "name": "borderRadius", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border radius of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.borderWidth-property", 
                "isClassProperty": false, 
                "name": "borderWidth", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border width of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.bottom-property", 
                "isClassProperty": false, 
                "name": "bottom", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view bottom position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.center-property", 
                "isClassProperty": false, 
                "name": "center", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the center of the views position relative to the parent view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.focusable-property", 
                "isClassProperty": false, 
                "name": "focusable", 
                "platforms": [
                    "android"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "Set true if you want a view to be focusable when navigating with the trackball or D-Pad. Default: false. (Android Only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.font-family-property", 
                "isClassProperty": false, 
                "name": "font-family", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font family"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.font-size-property", 
                "isClassProperty": false, 
                "name": "font-size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font size"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.font-style-property", 
                "isClassProperty": false, 
                "name": "font-style", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font style, either normal or italics"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.font-weight-property", 
                "isClassProperty": false, 
                "name": "font-weight", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font weight, either normal or bold"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.footerTitle-property", 
                "isClassProperty": false, 
                "name": "footerTitle", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the title of the section footer</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.footerView-property", 
                "isClassProperty": false, 
                "name": "footerView", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>a view to use instead of the default label when rendering the section footer</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.headerTitle-property", 
                "isClassProperty": false, 
                "name": "headerTitle", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the title of the section header</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.headerView-property", 
                "isClassProperty": false, 
                "name": "headerView", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>a view to use instead of the default label when rendering the section header</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.height-property", 
                "isClassProperty": false, 
                "name": "height", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view height. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.left-property", 
                "isClassProperty": false, 
                "name": "left", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view left position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.opacity-property", 
                "isClassProperty": false, 
                "name": "opacity", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the opacity from 0.0-1.0"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.right-property", 
                "isClassProperty": false, 
                "name": "right", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view right position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.rowCount-property", 
                "isClassProperty": false, 
                "name": "rowCount", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the (readonly) number of rows in the section</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.size-property", 
                "isClassProperty": false, 
                "name": "size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the size of the view as a dictionary of width and height properties"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.softKeyboardOnFocus-property", 
                "isClassProperty": false, 
                "name": "softKeyboardOnFocus", 
                "platforms": [
                    "android"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "One of Titanium.UI.Android.SOFT_KEYBOARD_DEFAULT_ON_FOCUS, Titanium.UI.Android.SOFT_KEYBOARD_HIDE_ON_FOCUS, or Titanium.UI.Android.SOFT_KEYBOARD_SHOW_ON_FOCUS. (Android only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.top-property", 
                "isClassProperty": false, 
                "name": "top", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view top position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.touchEnabled-property", 
                "isClassProperty": false, 
                "name": "touchEnabled", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean indicating if the view should receive touch events (true, default) or forward them to peers (false)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.transform-property", 
                "isClassProperty": false, 
                "name": "transform", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the transformation matrix to apply to the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.visible-property", 
                "isClassProperty": false, 
                "name": "visible", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean of the visibility of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.width-property", 
                "isClassProperty": false, 
                "name": "width", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view width. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TableViewSection.zIndex-property", 
                "isClassProperty": false, 
                "name": "zIndex", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "the z index position relative to other sibling views"
            }
        ], 
        "returns": null, 
        "since": "0.9", 
        "subtype": "view", 
        "type": "object"
    }, 
    "Titanium.UI.TextArea": {
        "deprecated": null, 
        "description": "<p>A Text Area is created by the method <a href=\"Titanium.UI.createTextArea.html\">Titanium.UI.createTextArea</a>. The Text Area is a multiline field.</p>", 
        "events": [
            {
                "filename": "Titanium.UI.TextArea.blur-event", 
                "name": "blur", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "value": "<p>the value of the field upon blur</p>", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the field loses focus</p>"
            }, 
            {
                "filename": "Titanium.UI.TextArea.change-event", 
                "name": "change", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "value": "<p>the value of the field upon change</p>", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the field value changes</p>"
            }, 
            {
                "filename": "Titanium.UI.TextArea.click-event", 
                "name": "click", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a click (longer than touch) against the view"
            }, 
            {
                "filename": "Titanium.UI.TextArea.dblclick-event", 
                "name": "dblclick", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double click against the view"
            }, 
            {
                "filename": "Titanium.UI.TextArea.doubletap-event", 
                "name": "doubletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double tap against the view"
            }, 
            {
                "filename": "Titanium.UI.TextArea.focus-event", 
                "name": "focus", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "value": "<p>the value of the field upon focus</p>", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the field gains focus</p>"
            }, 
            {
                "filename": "Titanium.UI.TextArea.return-event", 
                "name": "return", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "value": "<p>the value of the field upon return</p>", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the field return key is pressed on the keyboard</p>"
            }, 
            {
                "filename": "Titanium.UI.TextArea.selected-event", 
                "name": "selected", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "range": "<p>the range of text. range is an object with the properties <tt>location</tt> and <tt>length</tt>.</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the text in the field is selected</p>"
            }, 
            {
                "filename": "Titanium.UI.TextArea.singletap-event", 
                "name": "singletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a single tap against the view"
            }, 
            {
                "filename": "Titanium.UI.TextArea.swipe-event", 
                "name": "swipe", 
                "properties": {
                    "direction": "direction of the swipe - either left or right", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a swipe (left or right) against the view"
            }, 
            {
                "filename": "Titanium.UI.TextArea.touchcancel-event", 
                "name": "touchcancel", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is interrupted by the device. this happens in circumenstances such as an incoming call to allow the UI to clean up state."
            }, 
            {
                "filename": "Titanium.UI.TextArea.touchend-event", 
                "name": "touchend", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is completed"
            }, 
            {
                "filename": "Titanium.UI.TextArea.touchmove-event", 
                "name": "touchmove", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects movement of a touch.  Event coordinates are always relative to the view in which the initial touch occurred"
            }, 
            {
                "filename": "Titanium.UI.TextArea.touchstart-event", 
                "name": "touchstart", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects a gesture"
            }, 
            {
                "filename": "Titanium.UI.TextArea.twofingertap-event", 
                "name": "twofingertap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a two-finger tap against the view"
            }
        ], 
        "examples": [
            {
                "code": "<p>This example created a highly customized text area.</p>\n<pre><code>var ta1 = Titanium.UI.createTextArea({\n    value:'I am a textarea',\n    height:70,\n    width:300,\n    top:60,\n    font:{fontSize:20,fontFamily:'Marker Felt', fontWeight:'bold'},\n    color:'#888',\n    textAlign:'left',\n    appearance:Titanium.UI.KEYBOARD_APPEARANCE_ALERT,   \n    keyboardType:Titanium.UI.KEYBOARD_NUMBERS_PUNCTUATION,\n    returnKeyType:Titanium.UI.RETURNKEY_EMERGENCY_CALL,\n    borderWidth:2,\n    borderColor:'#bbb',\n    borderRadius:5\n});\n</code></pre>", 
                "description": "Basic Text Area with Customizations"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.UI.TextArea.add-method", 
                "name": "add", 
                "parameters": [
                    {
                        "description": "the view to add to this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add a child to the view hierarchy"
            }, 
            {
                "filename": "Titanium.UI.TextArea.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.TextArea.animate-method", 
                "name": "animate", 
                "parameters": [
                    {
                        "description": "either a dictionary of animation properties or an Animation object", 
                        "name": "obj", 
                        "type": "object"
                    }, 
                    {
                        "description": "function to be invoked upon completion of the animation", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "animate the view"
            }, 
            {
                "filename": "Titanium.UI.TextArea.blur-method", 
                "name": "blur", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>force the field to lose focus</p>"
            }, 
            {
                "filename": "Titanium.UI.TextArea.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.TextArea.focus-method", 
                "name": "focus", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>force the field to gain focus</p>"
            }, 
            {
                "filename": "Titanium.UI.TextArea.hasText-method", 
                "name": "hasText", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>return boolean (true) if the field has text</p>"
            }, 
            {
                "filename": "Titanium.UI.TextArea.hide-method", 
                "name": "hide", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "hide the view"
            }, 
            {
                "filename": "Titanium.UI.TextArea.remove-method", 
                "name": "remove", 
                "parameters": [
                    {
                        "description": "the view to remove from this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously add view from the view hiearchy"
            }, 
            {
                "filename": "Titanium.UI.TextArea.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously added event listener"
            }, 
            {
                "filename": "Titanium.UI.TextArea.show-method", 
                "name": "show", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "make the view visible"
            }, 
            {
                "filename": "Titanium.UI.TextArea.toImage-method", 
                "name": "toImage", 
                "parameters": [
                    {
                        "description": "function to be invoked upon completion. if non-null, this method will be performed asynchronously. if null, it will be performed immediately", 
                        "name": "f", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.8", 
                "value": "return a Blob image of the rendered view"
            }
        ], 
        "notes": "<p>Both Text Areas and Text Fields can control the buttons displayed in a button bar above the keyboard when it's visible.</p>\n<p>Example using a custom keyboard toolbar:</p>\n<pre><code>var textfield = Titanium.UI.createTextField({\n    color:'#336699',\n    value:'Focus to see keyboard w/ toolbar',\n    height:35,\n    width:300,\n    top:10,\n    borderStyle:Titanium.UI.INPUT_BORDERSTYLE_ROUNDED,\n    keyboardToolbar:[flexSpace,camera, flexSpace,tf,flexSpace, send,flexSpace],\n    keyboardToolbarColor: '#999',   \n    keyboardToolbarHeight: 40,\n});\n</code></pre>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.anchorPoint-property", 
                "isClassProperty": false, 
                "name": "anchorPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the anchor point value. anchor specifies the position by which animation should occur. center is 0.5, 0.5"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.animatedCenterPoint-property", 
                "isClassProperty": false, 
                "name": "animatedCenterPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "read-only object with x and y properties of where the view is during animation"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.autoLink-property", 
                "isClassProperty": false, 
                "name": "autoLink", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>whether or not to convert text within this area to clickable links.  iOS only.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.autocapitalization-property", 
                "isClassProperty": false, 
                "name": "autocapitalization", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>One of <a href=\"Titanium.UI.TEXT_AUTOCAPITALIZATION_NONE.html\">Titanium.UI.TEXT_AUTOCAPITALIZATION_NONE</a>, <a href=\"Titanium.UI.TEXT_AUTOCAPITALIZATION_WORDS.html\">Titanium.UI.TEXT_AUTOCAPITALIZATION_WORDS</a>, <a href=\"Titanium.UI.TEXT_AUTOCAPITALIZATION_SENTENCES.html\">Titanium.UI.TEXT_AUTOCAPITALIZATION_SENTENCES</a>, or <a href=\"Titanium.UI.TEXT_AUTOCAPITALIZATION_ALL.html\">Titanium.UI.TEXT_AUTOCAPITALIZATION_ALL</a> to indicate how the field should be capitalized during typing. (only Android)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.backgroundColor-property", 
                "isClassProperty": false, 
                "name": "backgroundColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.backgroundDisabledColor-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background color of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.backgroundDisabledImage-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background image url of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.backgroundFocusedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.backgroundFocusedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.backgroundGradient-property", 
                "isClassProperty": false, 
                "name": "backgroundGradient", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a background gradient for the view with the properties: type,startPoint,endPoint,startRadius,endRadius,backfillStart,backfillEnd,colors."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.backgroundImage-property", 
                "isClassProperty": false, 
                "name": "backgroundImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background image url of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.backgroundLeftCap-property", 
                "isClassProperty": false, 
                "name": "backgroundLeftCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the left end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The right end cap is therefore computed by adding the size of the left end cap and the middle portion together and then subtracting that value from the width of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.backgroundSelectedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.backgroundSelectedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.backgroundTopCap-property", 
                "isClassProperty": false, 
                "name": "backgroundTopCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the top end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The bottom end cap is therefore computed by adding the size of the top end cap and the middle portion together and then subtracting that value from the height of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.borderColor-property", 
                "isClassProperty": false, 
                "name": "borderColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the border color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.borderRadius-property", 
                "isClassProperty": false, 
                "name": "borderRadius", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border radius of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.borderWidth-property", 
                "isClassProperty": false, 
                "name": "borderWidth", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border width of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.bottom-property", 
                "isClassProperty": false, 
                "name": "bottom", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view bottom position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.center-property", 
                "isClassProperty": false, 
                "name": "center", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the center of the views position relative to the parent view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.editable-property", 
                "isClassProperty": false, 
                "name": "editable", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean indicating if the field is editable</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.enabled-property", 
                "isClassProperty": false, 
                "name": "enabled", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean indicating the enabled state of the field</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.focusable-property", 
                "isClassProperty": false, 
                "name": "focusable", 
                "platforms": [
                    "android"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "Set true if you want a view to be focusable when navigating with the trackball or D-Pad. Default: false. (Android Only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.font-family-property", 
                "isClassProperty": false, 
                "name": "font-family", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font family"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.font-size-property", 
                "isClassProperty": false, 
                "name": "font-size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font size"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.font-style-property", 
                "isClassProperty": false, 
                "name": "font-style", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font style, either normal or italics"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.font-weight-property", 
                "isClassProperty": false, 
                "name": "font-weight", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font weight, either normal or bold"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.height-property", 
                "isClassProperty": false, 
                "name": "height", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view height. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.keyboardToolbar-property", 
                "isClassProperty": false, 
                "name": "keyboardToolbar", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "array", 
                "type_jsca": "array", 
                "value": "<p>array of toolbar button objects to be used when the keyboard is displayed</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.keyboardToolbarColor-property", 
                "isClassProperty": false, 
                "name": "keyboardToolbarColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the color of the keyboard toolbar</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.keyboardToolbarHeight-property", 
                "isClassProperty": false, 
                "name": "keyboardToolbarHeight", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>the height of the keyboard toolbar</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.left-property", 
                "isClassProperty": false, 
                "name": "left", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view left position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.opacity-property", 
                "isClassProperty": false, 
                "name": "opacity", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the opacity from 0.0-1.0"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.right-property", 
                "isClassProperty": false, 
                "name": "right", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view right position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.size-property", 
                "isClassProperty": false, 
                "name": "size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the size of the view as a dictionary of width and height properties"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.softKeyboardOnFocus-property", 
                "isClassProperty": false, 
                "name": "softKeyboardOnFocus", 
                "platforms": [
                    "android"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "One of Titanium.UI.Android.SOFT_KEYBOARD_DEFAULT_ON_FOCUS, Titanium.UI.Android.SOFT_KEYBOARD_HIDE_ON_FOCUS, or Titanium.UI.Android.SOFT_KEYBOARD_SHOW_ON_FOCUS. (Android only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.suppressReturn-property", 
                "isClassProperty": false, 
                "name": "suppressReturn", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean to indicate if the return key should be suppressed during entry</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.top-property", 
                "isClassProperty": false, 
                "name": "top", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view top position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.touchEnabled-property", 
                "isClassProperty": false, 
                "name": "touchEnabled", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean indicating if the view should receive touch events (true, default) or forward them to peers (false)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.transform-property", 
                "isClassProperty": false, 
                "name": "transform", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the transformation matrix to apply to the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.value-property", 
                "isClassProperty": false, 
                "name": "value", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>value of the field</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.visible-property", 
                "isClassProperty": false, 
                "name": "visible", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean of the visibility of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.width-property", 
                "isClassProperty": false, 
                "name": "width", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view width. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextArea.zIndex-property", 
                "isClassProperty": false, 
                "name": "zIndex", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "the z index position relative to other sibling views"
            }
        ], 
        "returns": null, 
        "since": "0.8", 
        "subtype": "view", 
        "type": "object"
    }, 
    "Titanium.UI.TextField": {
        "deprecated": null, 
        "description": "<p>A Text Area is created by the method <a href=\"Titanium.UI.createTextField.html\">Titanium.UI.createTextField</a>. The Text Field is a single line field.</p>", 
        "events": [
            {
                "filename": "Titanium.UI.TextField.blur-event", 
                "name": "blur", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "value": "<p>the value of the field upon blur</p>", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the field loses focus</p>"
            }, 
            {
                "filename": "Titanium.UI.TextField.change-event", 
                "name": "change", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "value": "<p>the value of the field upon change</p>", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the field value changes</p>"
            }, 
            {
                "filename": "Titanium.UI.TextField.click-event", 
                "name": "click", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a click (longer than touch) against the view"
            }, 
            {
                "filename": "Titanium.UI.TextField.dblclick-event", 
                "name": "dblclick", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double click against the view"
            }, 
            {
                "filename": "Titanium.UI.TextField.doubletap-event", 
                "name": "doubletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double tap against the view"
            }, 
            {
                "filename": "Titanium.UI.TextField.focus-event", 
                "name": "focus", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "value": "<p>the value of the field upon focus</p>", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the field gains focus</p>"
            }, 
            {
                "filename": "Titanium.UI.TextField.return-event", 
                "name": "return", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the field return key is pressed on the keyboard</p>"
            }, 
            {
                "filename": "Titanium.UI.TextField.singletap-event", 
                "name": "singletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a single tap against the view"
            }, 
            {
                "filename": "Titanium.UI.TextField.swipe-event", 
                "name": "swipe", 
                "properties": {
                    "direction": "direction of the swipe - either left or right", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a swipe (left or right) against the view"
            }, 
            {
                "filename": "Titanium.UI.TextField.touchcancel-event", 
                "name": "touchcancel", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is interrupted by the device. this happens in circumenstances such as an incoming call to allow the UI to clean up state."
            }, 
            {
                "filename": "Titanium.UI.TextField.touchend-event", 
                "name": "touchend", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is completed"
            }, 
            {
                "filename": "Titanium.UI.TextField.touchmove-event", 
                "name": "touchmove", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects movement of a touch.  Event coordinates are always relative to the view in which the initial touch occurred"
            }, 
            {
                "filename": "Titanium.UI.TextField.touchstart-event", 
                "name": "touchstart", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects a gesture"
            }, 
            {
                "filename": "Titanium.UI.TextField.twofingertap-event", 
                "name": "twofingertap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a two-finger tap against the view"
            }
        ], 
        "examples": [
            {
                "code": "<p>Create a simple text field with a round border style.</p>\n<pre><code>var tf1 = Titanium.UI.createTextField({\n    color:'#336699',\n    height:35,\n    top:10,\n    left:10,\n    width:250,\n    borderStyle:Titanium.UI.INPUT_BORDERSTYLE_ROUNDED\n});\n</code></pre>", 
                "description": "Basic Text Field with rounded border"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.UI.TextField.add-method", 
                "name": "add", 
                "parameters": [
                    {
                        "description": "the view to add to this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add a child to the view hierarchy"
            }, 
            {
                "filename": "Titanium.UI.TextField.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.TextField.animate-method", 
                "name": "animate", 
                "parameters": [
                    {
                        "description": "either a dictionary of animation properties or an Animation object", 
                        "name": "obj", 
                        "type": "object"
                    }, 
                    {
                        "description": "function to be invoked upon completion of the animation", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "animate the view"
            }, 
            {
                "filename": "Titanium.UI.TextField.blur-method", 
                "name": "blur", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>force the field to lose focus</p>"
            }, 
            {
                "filename": "Titanium.UI.TextField.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.TextField.focus-method", 
                "name": "focus", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>force the field to gain focus</p>"
            }, 
            {
                "filename": "Titanium.UI.TextField.hasText-method", 
                "name": "hasText", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>return boolean (true) if the field has text</p>"
            }, 
            {
                "filename": "Titanium.UI.TextField.hide-method", 
                "name": "hide", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "hide the view"
            }, 
            {
                "filename": "Titanium.UI.TextField.remove-method", 
                "name": "remove", 
                "parameters": [
                    {
                        "description": "the view to remove from this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously add view from the view hiearchy"
            }, 
            {
                "filename": "Titanium.UI.TextField.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously added event listener"
            }, 
            {
                "filename": "Titanium.UI.TextField.show-method", 
                "name": "show", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "make the view visible"
            }, 
            {
                "filename": "Titanium.UI.TextField.toImage-method", 
                "name": "toImage", 
                "parameters": [
                    {
                        "description": "function to be invoked upon completion. if non-null, this method will be performed asynchronously. if null, it will be performed immediately", 
                        "name": "f", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.8", 
                "value": "return a Blob image of the rendered view"
            }
        ], 
        "notes": "<p>On iPhone, the borderStyle can be set with a constant from <a href=\"Titanium.UI\">Titanium.UI</a>.</p>\n<p>Both Text Areas and Text Fields can control the buttons displayed in a button bar above the keyboard when it's visible.</p>\n<p>Example using a custom keyboard toolbar:</p>\n<pre><code>var textfield = Titanium.UI.createTextField({\n    color:'#336699',\n    value:'Focus to see keyboard w/ toolbar',\n    height:35,\n    width:300,\n    top:10,\n    borderStyle:Titanium.UI.INPUT_BORDERSTYLE_ROUNDED,\n    keyboardToolbar:[flexSpace,camera, flexSpace,tf,flexSpace, send,flexSpace],\n    keyboardToolbarColor: '#999',   \n    keyboardToolbarHeight: 40,\n});\n</code></pre>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.anchorPoint-property", 
                "isClassProperty": false, 
                "name": "anchorPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the anchor point value. anchor specifies the position by which animation should occur. center is 0.5, 0.5"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.animatedCenterPoint-property", 
                "isClassProperty": false, 
                "name": "animatedCenterPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "read-only object with x and y properties of where the view is during animation"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.autocapitalization-property", 
                "isClassProperty": false, 
                "name": "autocapitalization", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>One of <a href=\"Titanium.UI.TEXT_AUTOCAPITALIZATION_NONE.html\">Titanium.UI.TEXT_AUTOCAPITALIZATION_NONE</a>, <a href=\"Titanium.UI.TEXT_AUTOCAPITALIZATION_WORDS.html\">Titanium.UI.TEXT_AUTOCAPITALIZATION_WORDS</a>, <a href=\"Titanium.UI.TEXT_AUTOCAPITALIZATION_SENTENCES.html\">Titanium.UI.TEXT_AUTOCAPITALIZATION_SENTENCES</a>, or <a href=\"Titanium.UI.TEXT_AUTOCAPITALIZATION_ALL.html\">Titanium.UI.TEXT_AUTOCAPITALIZATION_ALL</a> to indicate how the field should be capitalized during typing.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.backgroundColor-property", 
                "isClassProperty": false, 
                "name": "backgroundColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.backgroundDisabledColor-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background color of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.backgroundDisabledImage-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background image url of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.backgroundFocusedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.backgroundFocusedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.backgroundGradient-property", 
                "isClassProperty": false, 
                "name": "backgroundGradient", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a background gradient for the view with the properties: type,startPoint,endPoint,startRadius,endRadius,backfillStart,backfillEnd,colors."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.backgroundImage-property", 
                "isClassProperty": false, 
                "name": "backgroundImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background image url of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.backgroundLeftCap-property", 
                "isClassProperty": false, 
                "name": "backgroundLeftCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the left end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The right end cap is therefore computed by adding the size of the left end cap and the middle portion together and then subtracting that value from the width of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.backgroundSelectedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.backgroundSelectedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.backgroundTopCap-property", 
                "isClassProperty": false, 
                "name": "backgroundTopCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the top end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The bottom end cap is therefore computed by adding the size of the top end cap and the middle portion together and then subtracting that value from the height of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.borderColor-property", 
                "isClassProperty": false, 
                "name": "borderColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the border color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.borderRadius-property", 
                "isClassProperty": false, 
                "name": "borderRadius", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border radius of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.borderStyle-property", 
                "isClassProperty": false, 
                "name": "borderStyle", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the border style constant for the field</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.borderWidth-property", 
                "isClassProperty": false, 
                "name": "borderWidth", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border width of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.bottom-property", 
                "isClassProperty": false, 
                "name": "bottom", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view bottom position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.center-property", 
                "isClassProperty": false, 
                "name": "center", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the center of the views position relative to the parent view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.clearButtonMode-property", 
                "isClassProperty": false, 
                "name": "clearButtonMode", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the mode constant for how to handle displaying the clear button</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.clearOnEdit-property", 
                "isClassProperty": false, 
                "name": "clearOnEdit", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean that indicates if the value of the field is cleared upon editing</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.editable-property", 
                "isClassProperty": false, 
                "name": "editable", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean indicating if the field is editable</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.enabled-property", 
                "isClassProperty": false, 
                "name": "enabled", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean indicating the enabled state of the field</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.focusable-property", 
                "isClassProperty": false, 
                "name": "focusable", 
                "platforms": [
                    "android"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "Set true if you want a view to be focusable when navigating with the trackball or D-Pad. Default: false. (Android Only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.font-family-property", 
                "isClassProperty": false, 
                "name": "font-family", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font family"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.font-size-property", 
                "isClassProperty": false, 
                "name": "font-size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font size"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.font-style-property", 
                "isClassProperty": false, 
                "name": "font-style", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font style, either normal or italics"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.font-weight-property", 
                "isClassProperty": false, 
                "name": "font-weight", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font weight, either normal or bold"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.height-property", 
                "isClassProperty": false, 
                "name": "height", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view height. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.hintText-property", 
                "isClassProperty": false, 
                "name": "hintText", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the hint text to display when the field is unfocused</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.keyboardToolbar-property", 
                "isClassProperty": false, 
                "name": "keyboardToolbar", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "array", 
                "type_jsca": "array", 
                "value": "<p>array of toolbar button objects to be used when the keyboard is displayed</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.keyboardToolbarColor-property", 
                "isClassProperty": false, 
                "name": "keyboardToolbarColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the color of the keyboard toolbar</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.keyboardToolbarHeight-property", 
                "isClassProperty": false, 
                "name": "keyboardToolbarHeight", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>the height of the keyboard toolbar</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.left-property", 
                "isClassProperty": false, 
                "name": "left", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view left position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.leftButton-property", 
                "isClassProperty": false, 
                "name": "leftButton", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>the left button view</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.leftButtonMode-property", 
                "isClassProperty": false, 
                "name": "leftButtonMode", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the mode of the left button view</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.leftButtonPadding-property", 
                "isClassProperty": false, 
                "name": "leftButtonPadding", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>the left padding of the space between the button and the edge of the field</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.minimumFontSize-property", 
                "isClassProperty": false, 
                "name": "minimumFontSize", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the minimum size of the font when the font is sized based on the contents.  Enables font scaling to fit</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.opacity-property", 
                "isClassProperty": false, 
                "name": "opacity", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the opacity from 0.0-1.0"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.paddingLeft-property", 
                "isClassProperty": false, 
                "name": "paddingLeft", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>the left padding of the text field</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.paddingRight-property", 
                "isClassProperty": false, 
                "name": "paddingRight", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>the right padding of the text field</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.right-property", 
                "isClassProperty": false, 
                "name": "right", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view right position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.rightButton-property", 
                "isClassProperty": false, 
                "name": "rightButton", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>the right button view</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.rightButtonMode-property", 
                "isClassProperty": false, 
                "name": "rightButtonMode", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>the mode of the right button view</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.rightButtonPadding-property", 
                "isClassProperty": false, 
                "name": "rightButtonPadding", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "<p>the right padding of the space between the button and the edge of the field</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.size-property", 
                "isClassProperty": false, 
                "name": "size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the size of the view as a dictionary of width and height properties"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.softKeyboardOnFocus-property", 
                "isClassProperty": false, 
                "name": "softKeyboardOnFocus", 
                "platforms": [
                    "android"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "One of Titanium.UI.Android.SOFT_KEYBOARD_DEFAULT_ON_FOCUS, Titanium.UI.Android.SOFT_KEYBOARD_HIDE_ON_FOCUS, or Titanium.UI.Android.SOFT_KEYBOARD_SHOW_ON_FOCUS. (Android only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.suppressReturn-property", 
                "isClassProperty": false, 
                "name": "suppressReturn", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean to indicate if the return key should be suppressed during entry</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.top-property", 
                "isClassProperty": false, 
                "name": "top", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view top position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.touchEnabled-property", 
                "isClassProperty": false, 
                "name": "touchEnabled", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean indicating if the view should receive touch events (true, default) or forward them to peers (false)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.transform-property", 
                "isClassProperty": false, 
                "name": "transform", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the transformation matrix to apply to the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.value-property", 
                "isClassProperty": false, 
                "name": "value", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>value of the field</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.verticalAlign-property", 
                "isClassProperty": false, 
                "name": "verticalAlign", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int,string", 
                "type_jsca": "int,string", 
                "value": "<p>the constant or string value for the fields vertical alignment.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.visible-property", 
                "isClassProperty": false, 
                "name": "visible", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean of the visibility of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.width-property", 
                "isClassProperty": false, 
                "name": "width", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view width. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.TextField.zIndex-property", 
                "isClassProperty": false, 
                "name": "zIndex", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "the z index position relative to other sibling views"
            }
        ], 
        "returns": null, 
        "since": "0.8", 
        "subtype": "view", 
        "type": "object"
    }, 
    "Titanium.UI.Toolbar": {
        "deprecated": null, 
        "description": "<p>A Toolbar is created by the method <a href=\"Titanium.UI.createToolbar.html\">Titanium.UI.createToolbar</a>.  A Toolbar can be placed at the bottom of a window and contain buttons.</p>", 
        "events": [
            {
                "filename": "Titanium.UI.Toolbar.click-event", 
                "name": "click", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a click (longer than touch) against the view"
            }, 
            {
                "filename": "Titanium.UI.Toolbar.dblclick-event", 
                "name": "dblclick", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double click against the view"
            }, 
            {
                "filename": "Titanium.UI.Toolbar.doubletap-event", 
                "name": "doubletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double tap against the view"
            }, 
            {
                "filename": "Titanium.UI.Toolbar.singletap-event", 
                "name": "singletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a single tap against the view"
            }, 
            {
                "filename": "Titanium.UI.Toolbar.swipe-event", 
                "name": "swipe", 
                "properties": {
                    "direction": "direction of the swipe - either left or right", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a swipe (left or right) against the view"
            }, 
            {
                "filename": "Titanium.UI.Toolbar.touchcancel-event", 
                "name": "touchcancel", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is interrupted by the device. this happens in circumenstances such as an incoming call to allow the UI to clean up state."
            }, 
            {
                "filename": "Titanium.UI.Toolbar.touchend-event", 
                "name": "touchend", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is completed"
            }, 
            {
                "filename": "Titanium.UI.Toolbar.touchmove-event", 
                "name": "touchmove", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects movement of a touch.  Event coordinates are always relative to the view in which the initial touch occurred"
            }, 
            {
                "filename": "Titanium.UI.Toolbar.touchstart-event", 
                "name": "touchstart", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects a gesture"
            }, 
            {
                "filename": "Titanium.UI.Toolbar.twofingertap-event", 
                "name": "twofingertap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a two-finger tap against the view"
            }
        ], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.UI.Toolbar.add-method", 
                "name": "add", 
                "parameters": [
                    {
                        "description": "the view to add to this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add a child to the view hierarchy"
            }, 
            {
                "filename": "Titanium.UI.Toolbar.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.Toolbar.animate-method", 
                "name": "animate", 
                "parameters": [
                    {
                        "description": "either a dictionary of animation properties or an Animation object", 
                        "name": "obj", 
                        "type": "object"
                    }, 
                    {
                        "description": "function to be invoked upon completion of the animation", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "animate the view"
            }, 
            {
                "filename": "Titanium.UI.Toolbar.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.Toolbar.hide-method", 
                "name": "hide", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "hide the view"
            }, 
            {
                "filename": "Titanium.UI.Toolbar.remove-method", 
                "name": "remove", 
                "parameters": [
                    {
                        "description": "the view to remove from this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously add view from the view hiearchy"
            }, 
            {
                "filename": "Titanium.UI.Toolbar.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously added event listener"
            }, 
            {
                "filename": "Titanium.UI.Toolbar.show-method", 
                "name": "show", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "make the view visible"
            }, 
            {
                "filename": "Titanium.UI.Toolbar.toImage-method", 
                "name": "toImage", 
                "parameters": [
                    {
                        "description": "function to be invoked upon completion. if non-null, this method will be performed asynchronously. if null, it will be performed immediately", 
                        "name": "f", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.8", 
                "value": "return a Blob image of the rendered view"
            }
        ], 
        "notes": "", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Toolbar.anchorPoint-property", 
                "isClassProperty": false, 
                "name": "anchorPoint", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the anchor point value. anchor specifies the position by which animation should occur. center is 0.5, 0.5"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Toolbar.animatedCenterPoint-property", 
                "isClassProperty": false, 
                "name": "animatedCenterPoint", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "read-only object with x and y properties of where the view is during animation"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Toolbar.backgroundColor-property", 
                "isClassProperty": false, 
                "name": "backgroundColor", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Toolbar.backgroundDisabledColor-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledColor", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background color of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Toolbar.backgroundDisabledImage-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledImage", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background image url of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Toolbar.backgroundFocusedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedColor", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Toolbar.backgroundFocusedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedImage", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Toolbar.backgroundGradient-property", 
                "isClassProperty": false, 
                "name": "backgroundGradient", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a background gradient for the view with the properties: type,startPoint,endPoint,startRadius,endRadius,backfillStart,backfillEnd,colors."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Toolbar.backgroundImage-property", 
                "isClassProperty": false, 
                "name": "backgroundImage", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background image url of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Toolbar.backgroundLeftCap-property", 
                "isClassProperty": false, 
                "name": "backgroundLeftCap", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the left end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The right end cap is therefore computed by adding the size of the left end cap and the middle portion together and then subtracting that value from the width of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Toolbar.backgroundSelectedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedColor", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Toolbar.backgroundSelectedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedImage", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Toolbar.backgroundTopCap-property", 
                "isClassProperty": false, 
                "name": "backgroundTopCap", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the top end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The bottom end cap is therefore computed by adding the size of the top end cap and the middle portion together and then subtracting that value from the height of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Toolbar.borderColor-property", 
                "isClassProperty": false, 
                "name": "borderColor", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the border color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Toolbar.borderRadius-property", 
                "isClassProperty": false, 
                "name": "borderRadius", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border radius of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Toolbar.borderWidth-property", 
                "isClassProperty": false, 
                "name": "borderWidth", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border width of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Toolbar.bottom-property", 
                "isClassProperty": false, 
                "name": "bottom", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view bottom position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Toolbar.center-property", 
                "isClassProperty": false, 
                "name": "center", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the center of the views position relative to the parent view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Toolbar.font-family-property", 
                "isClassProperty": false, 
                "name": "font-family", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font family"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Toolbar.font-size-property", 
                "isClassProperty": false, 
                "name": "font-size", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font size"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Toolbar.font-style-property", 
                "isClassProperty": false, 
                "name": "font-style", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font style, either normal or italics"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Toolbar.font-weight-property", 
                "isClassProperty": false, 
                "name": "font-weight", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font weight, either normal or bold"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Toolbar.height-property", 
                "isClassProperty": false, 
                "name": "height", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view height. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Toolbar.left-property", 
                "isClassProperty": false, 
                "name": "left", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view left position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Toolbar.opacity-property", 
                "isClassProperty": false, 
                "name": "opacity", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the opacity from 0.0-1.0"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Toolbar.right-property", 
                "isClassProperty": false, 
                "name": "right", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view right position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Toolbar.size-property", 
                "isClassProperty": false, 
                "name": "size", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the size of the view as a dictionary of width and height properties"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Toolbar.top-property", 
                "isClassProperty": false, 
                "name": "top", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view top position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Toolbar.touchEnabled-property", 
                "isClassProperty": false, 
                "name": "touchEnabled", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean indicating if the view should receive touch events (true, default) or forward them to peers (false)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Toolbar.transform-property", 
                "isClassProperty": false, 
                "name": "transform", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the transformation matrix to apply to the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Toolbar.visible-property", 
                "isClassProperty": false, 
                "name": "visible", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean of the visibility of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Toolbar.width-property", 
                "isClassProperty": false, 
                "name": "width", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view width. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Toolbar.zIndex-property", 
                "isClassProperty": false, 
                "name": "zIndex", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "the z index position relative to other sibling views"
            }
        ], 
        "returns": null, 
        "since": "0.8", 
        "subtype": "view", 
        "type": "object"
    }, 
    "Titanium.UI.View": {
        "deprecated": null, 
        "description": "<p>The View is an empty drawing surface or container. The View is created by the method <a href=\"Titanium.UI.createView.html\">Titanium.UI.createView</a>.</p>", 
        "events": [
            {
                "filename": "Titanium.UI.View.click-event", 
                "name": "click", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a click (longer than touch) against the view"
            }, 
            {
                "filename": "Titanium.UI.View.dblclick-event", 
                "name": "dblclick", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double click against the view"
            }, 
            {
                "filename": "Titanium.UI.View.doubletap-event", 
                "name": "doubletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double tap against the view"
            }, 
            {
                "filename": "Titanium.UI.View.singletap-event", 
                "name": "singletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a single tap against the view"
            }, 
            {
                "filename": "Titanium.UI.View.swipe-event", 
                "name": "swipe", 
                "properties": {
                    "direction": "direction of the swipe - either left or right", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a swipe (left or right) against the view"
            }, 
            {
                "filename": "Titanium.UI.View.touchcancel-event", 
                "name": "touchcancel", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is interrupted by the device. this happens in circumenstances such as an incoming call to allow the UI to clean up state."
            }, 
            {
                "filename": "Titanium.UI.View.touchend-event", 
                "name": "touchend", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is completed"
            }, 
            {
                "filename": "Titanium.UI.View.touchmove-event", 
                "name": "touchmove", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects movement of a touch.  Event coordinates are always relative to the view in which the initial touch occurred"
            }, 
            {
                "filename": "Titanium.UI.View.touchstart-event", 
                "name": "touchstart", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects a gesture"
            }, 
            {
                "filename": "Titanium.UI.View.twofingertap-event", 
                "name": "twofingertap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a two-finger tap against the view"
            }
        ], 
        "examples": [
            {
                "code": "<p>Create a rounded view.</p>\n<pre><code>var view = Titanium.UI.createView({\n   borderRadius:10,\n   backgroundColor:'red',\n   width:50,\n   height:50\n});\nwindow.add(view);\n</code></pre>", 
                "description": "Round View Example"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.UI.View.add-method", 
                "name": "add", 
                "parameters": [
                    {
                        "description": "the view to add to this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "add a child to the view hierarchy"
            }, 
            {
                "filename": "Titanium.UI.View.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.View.animate-method", 
                "name": "animate", 
                "parameters": [
                    {
                        "description": "either a dictionary of animation properties or an Animation object", 
                        "name": "obj", 
                        "type": "object"
                    }, 
                    {
                        "description": "function to be invoked upon completion of the animation", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "animate the view"
            }, 
            {
                "filename": "Titanium.UI.View.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.View.hide-method", 
                "name": "hide", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "hide the view"
            }, 
            {
                "filename": "Titanium.UI.View.remove-method", 
                "name": "remove", 
                "parameters": [
                    {
                        "description": "the view to remove from this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "remove a previously add view from the view hiearchy"
            }, 
            {
                "filename": "Titanium.UI.View.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "remove a previously added event listener"
            }, 
            {
                "filename": "Titanium.UI.View.show-method", 
                "name": "show", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "make the view visible"
            }, 
            {
                "filename": "Titanium.UI.View.toImage-method", 
                "name": "toImage", 
                "parameters": [
                    {
                        "description": "function to be invoked upon completion. if non-null, this method will be performed asynchronously. if null, it will be performed immediately", 
                        "name": "f", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.9", 
                "value": "return a Blob image of the rendered view"
            }
        ], 
        "notes": "", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.View.anchorPoint-property", 
                "isClassProperty": false, 
                "name": "anchorPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the anchor point value. anchor specifies the position by which animation should occur. center is 0.5, 0.5"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.View.animatedCenterPoint-property", 
                "isClassProperty": false, 
                "name": "animatedCenterPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "read-only object with x and y properties of where the view is during animation"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.View.backgroundColor-property", 
                "isClassProperty": false, 
                "name": "backgroundColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.View.backgroundDisabledColor-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background color of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.View.backgroundDisabledImage-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background image url of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.View.backgroundFocusedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.View.backgroundFocusedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.View.backgroundGradient-property", 
                "isClassProperty": false, 
                "name": "backgroundGradient", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a background gradient for the view with the properties: type,startPoint,endPoint,startRadius,endRadius,backfillStart,backfillEnd,colors."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.View.backgroundImage-property", 
                "isClassProperty": false, 
                "name": "backgroundImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background image url of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.View.backgroundLeftCap-property", 
                "isClassProperty": false, 
                "name": "backgroundLeftCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the left end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The right end cap is therefore computed by adding the size of the left end cap and the middle portion together and then subtracting that value from the width of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.View.backgroundSelectedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.View.backgroundSelectedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.View.backgroundTopCap-property", 
                "isClassProperty": false, 
                "name": "backgroundTopCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the top end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The bottom end cap is therefore computed by adding the size of the top end cap and the middle portion together and then subtracting that value from the height of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.View.borderColor-property", 
                "isClassProperty": false, 
                "name": "borderColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the border color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.View.borderRadius-property", 
                "isClassProperty": false, 
                "name": "borderRadius", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border radius of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.View.borderWidth-property", 
                "isClassProperty": false, 
                "name": "borderWidth", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border width of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.View.bottom-property", 
                "isClassProperty": false, 
                "name": "bottom", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view bottom position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.View.center-property", 
                "isClassProperty": false, 
                "name": "center", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the center of the views position relative to the parent view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.View.focusable-property", 
                "isClassProperty": false, 
                "name": "focusable", 
                "platforms": [
                    "android"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "Set true if you want a view to be focusable when navigating with the trackball or D-Pad. Default: false. (Android Only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.View.font-family-property", 
                "isClassProperty": false, 
                "name": "font-family", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font family"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.View.font-size-property", 
                "isClassProperty": false, 
                "name": "font-size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font size"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.View.font-style-property", 
                "isClassProperty": false, 
                "name": "font-style", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font style, either normal or italics"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.View.font-weight-property", 
                "isClassProperty": false, 
                "name": "font-weight", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font weight, either normal or bold"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.View.height-property", 
                "isClassProperty": false, 
                "name": "height", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view height. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.View.left-property", 
                "isClassProperty": false, 
                "name": "left", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view left position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.View.opacity-property", 
                "isClassProperty": false, 
                "name": "opacity", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the opacity from 0.0-1.0"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.View.right-property", 
                "isClassProperty": false, 
                "name": "right", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view right position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.View.size-property", 
                "isClassProperty": false, 
                "name": "size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the size of the view as a dictionary of width and height properties"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.View.softKeyboardOnFocus-property", 
                "isClassProperty": false, 
                "name": "softKeyboardOnFocus", 
                "platforms": [
                    "android"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "One of Titanium.UI.Android.SOFT_KEYBOARD_DEFAULT_ON_FOCUS, Titanium.UI.Android.SOFT_KEYBOARD_HIDE_ON_FOCUS, or Titanium.UI.Android.SOFT_KEYBOARD_SHOW_ON_FOCUS. (Android only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.View.top-property", 
                "isClassProperty": false, 
                "name": "top", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view top position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.View.touchEnabled-property", 
                "isClassProperty": false, 
                "name": "touchEnabled", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean indicating if the view should receive touch events (true, default) or forward them to peers (false)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.View.transform-property", 
                "isClassProperty": false, 
                "name": "transform", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the transformation matrix to apply to the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.View.visible-property", 
                "isClassProperty": false, 
                "name": "visible", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean of the visibility of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.View.width-property", 
                "isClassProperty": false, 
                "name": "width", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view width. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.View.zIndex-property", 
                "isClassProperty": false, 
                "name": "zIndex", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "the z index position relative to other sibling views"
            }
        ], 
        "returns": null, 
        "since": "0.9", 
        "subtype": "view", 
        "type": "object"
    }, 
    "Titanium.UI.WebView": {
        "deprecated": null, 
        "description": "<p>The Web View allows you to open an HTML5 based view which can load either local or remote content. The content can be any valid web content such as HTML, PDF, SVG or other WebKit supported content types. The Web View is created by the method <a href=\"Titanium.UI.createWebView.html\">Titanium.UI.createWebView</a>.</p>", 
        "events": [
            {
                "filename": "Titanium.UI.WebView.beforeload-event", 
                "name": "beforeload", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "url": "<p>the url of the web document</p>", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired before the webview starts loading its content</p>"
            }, 
            {
                "filename": "Titanium.UI.WebView.click-event", 
                "name": "click", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a click (longer than touch) against the view"
            }, 
            {
                "filename": "Titanium.UI.WebView.dblclick-event", 
                "name": "dblclick", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double click against the view"
            }, 
            {
                "filename": "Titanium.UI.WebView.doubletap-event", 
                "name": "doubletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double tap against the view"
            }, 
            {
                "filename": "Titanium.UI.WebView.error-event", 
                "name": "error", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "message": "<p>the error message</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "url": "<p>the url of the web document</p>", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the webview cannot load the content</p>"
            }, 
            {
                "filename": "Titanium.UI.WebView.load-event", 
                "name": "load", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "url": "<p>the url of the web document</p>", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the webview is loaded</p>"
            }, 
            {
                "filename": "Titanium.UI.WebView.singletap-event", 
                "name": "singletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a single tap against the view"
            }, 
            {
                "filename": "Titanium.UI.WebView.swipe-event", 
                "name": "swipe", 
                "properties": {
                    "direction": "direction of the swipe - either left or right", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a swipe (left or right) against the view"
            }, 
            {
                "filename": "Titanium.UI.WebView.touchcancel-event", 
                "name": "touchcancel", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is interrupted by the device. this happens in circumenstances such as an incoming call to allow the UI to clean up state."
            }, 
            {
                "filename": "Titanium.UI.WebView.touchend-event", 
                "name": "touchend", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is completed"
            }, 
            {
                "filename": "Titanium.UI.WebView.touchmove-event", 
                "name": "touchmove", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects movement of a touch.  Event coordinates are always relative to the view in which the initial touch occurred"
            }, 
            {
                "filename": "Titanium.UI.WebView.touchstart-event", 
                "name": "touchstart", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects a gesture"
            }, 
            {
                "filename": "Titanium.UI.WebView.twofingertap-event", 
                "name": "twofingertap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a two-finger tap against the view"
            }
        ], 
        "examples": [
            {
                "code": "<p>Create a web view to a remote URL and open the window as modal.</p>\n<pre><code>    var webview = Titanium.UI.createWebView({url:'http://www.appcelerator.com'});\n    var window = Titanium.UI.createWindow();\n    window.add(webview);\n    window.open({modal:true});\n</code></pre>", 
                "description": "Basic Web View to external URL example"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.UI.WebView.add-method", 
                "name": "add", 
                "parameters": [
                    {
                        "description": "the view to add to this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add a child to the view hierarchy"
            }, 
            {
                "filename": "Titanium.UI.WebView.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.WebView.animate-method", 
                "name": "animate", 
                "parameters": [
                    {
                        "description": "either a dictionary of animation properties or an Animation object", 
                        "name": "obj", 
                        "type": "object"
                    }, 
                    {
                        "description": "function to be invoked upon completion of the animation", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "animate the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.canGoBack-method", 
                "name": "canGoBack", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "boolean", 
                "since": "0.8", 
                "value": "<p>returns true if the webview can go back in history</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.canGoForward-method", 
                "name": "canGoForward", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "boolean", 
                "since": "0.8", 
                "value": "<p>returns true if the webview can go forward in history</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.evalJS-method", 
                "name": "evalJS", 
                "parameters": [
                    {
                        "description": "JavaScript code as a string. The code will be evaluated inside the webview context.", 
                        "name": "content", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "string", 
                "since": "0.8", 
                "value": "<p>invoke JavaScript inside the context of the webview and optionally, return a result</p>"
            }, 
            {
                "filename": "Titanium.UI.WebView.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.WebView.goBack-method", 
                "name": "goBack", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>go back one entry in history to the previous page</p>"
            }, 
            {
                "filename": "Titanium.UI.WebView.goForward-method", 
                "name": "goForward", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>go forward one entry in history to the page before the current page</p>"
            }, 
            {
                "filename": "Titanium.UI.WebView.hide-method", 
                "name": "hide", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "hide the view"
            }, 
            {
                "filename": "Titanium.UI.WebView.reload-method", 
                "name": "reload", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>reload the current webpage</p>"
            }, 
            {
                "filename": "Titanium.UI.WebView.remove-method", 
                "name": "remove", 
                "parameters": [
                    {
                        "description": "the view to remove from this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously add view from the view hiearchy"
            }, 
            {
                "filename": "Titanium.UI.WebView.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously added event listener"
            }, 
            {
                "filename": "Titanium.UI.WebView.repaint-method", 
                "name": "repaint", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>force the webview to repaint its contents</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.setBasicAuthentication-method", 
                "name": "setBasicAuthentication", 
                "parameters": [
                    {
                        "description": "the username", 
                        "name": "username", 
                        "type": "string"
                    }, 
                    {
                        "description": "the password", 
                        "name": "password", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>set the basic authentication for the webview instance to be used on subsequent url requests</p>"
            }, 
            {
                "filename": "Titanium.UI.WebView.show-method", 
                "name": "show", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "make the view visible"
            }, 
            {
                "filename": "Titanium.UI.WebView.stopLoading-method", 
                "name": "stopLoading", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>stop loading a currently loading page</p>"
            }, 
            {
                "filename": "Titanium.UI.WebView.toImage-method", 
                "name": "toImage", 
                "parameters": [
                    {
                        "description": "function to be invoked upon completion. if non-null, this method will be performed asynchronously. if null, it will be performed immediately", 
                        "name": "f", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.8", 
                "value": "return a Blob image of the rendered view"
            }
        ], 
        "notes": "<p>Creating webviews are more expensive than creating pure native views because of the requirement toload the HTML browser into memory.</p>\n<p>Since a webview internally wants to handle its own events, scrolling and other related touch events against it's own view surface, you cannot have both Titanium style events against the webview instance and internal Javascript events in the DOM.  You must choose between one or the other.</p>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.anchorPoint-property", 
                "isClassProperty": false, 
                "name": "anchorPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the anchor point value. anchor specifies the position by which animation should occur. center is 0.5, 0.5"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.animatedCenterPoint-property", 
                "isClassProperty": false, 
                "name": "animatedCenterPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "read-only object with x and y properties of where the view is during animation"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.backgroundColor-property", 
                "isClassProperty": false, 
                "name": "backgroundColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.backgroundDisabledColor-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background color of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.backgroundDisabledImage-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background image url of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.backgroundFocusedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.backgroundFocusedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.backgroundGradient-property", 
                "isClassProperty": false, 
                "name": "backgroundGradient", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a background gradient for the view with the properties: type,startPoint,endPoint,startRadius,endRadius,backfillStart,backfillEnd,colors."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.backgroundImage-property", 
                "isClassProperty": false, 
                "name": "backgroundImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background image url of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.backgroundLeftCap-property", 
                "isClassProperty": false, 
                "name": "backgroundLeftCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the left end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The right end cap is therefore computed by adding the size of the left end cap and the middle portion together and then subtracting that value from the width of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.backgroundSelectedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.backgroundSelectedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.backgroundTopCap-property", 
                "isClassProperty": false, 
                "name": "backgroundTopCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the top end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The bottom end cap is therefore computed by adding the size of the top end cap and the middle portion together and then subtracting that value from the height of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.borderColor-property", 
                "isClassProperty": false, 
                "name": "borderColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the border color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.borderRadius-property", 
                "isClassProperty": false, 
                "name": "borderRadius", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border radius of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.borderWidth-property", 
                "isClassProperty": false, 
                "name": "borderWidth", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border width of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.bottom-property", 
                "isClassProperty": false, 
                "name": "bottom", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view bottom position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.center-property", 
                "isClassProperty": false, 
                "name": "center", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the center of the views position relative to the parent view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.data-property", 
                "isClassProperty": false, 
                "name": "data", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>a data blob or file that is used to load the web document</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.focusable-property", 
                "isClassProperty": false, 
                "name": "focusable", 
                "platforms": [
                    "android"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "Set true if you want a view to be focusable when navigating with the trackball or D-Pad. Default: false. (Android Only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.font-family-property", 
                "isClassProperty": false, 
                "name": "font-family", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font family"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.font-size-property", 
                "isClassProperty": false, 
                "name": "font-size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font size"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.font-style-property", 
                "isClassProperty": false, 
                "name": "font-style", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font style, either normal or italics"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.font-weight-property", 
                "isClassProperty": false, 
                "name": "font-weight", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font weight, either normal or bold"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.height-property", 
                "isClassProperty": false, 
                "name": "height", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view height. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.html-property", 
                "isClassProperty": false, 
                "name": "html", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the html content of the web document</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.left-property", 
                "isClassProperty": false, 
                "name": "left", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view left position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.loading-property", 
                "isClassProperty": false, 
                "name": "loading", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean indicating if the webview is loading content</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.opacity-property", 
                "isClassProperty": false, 
                "name": "opacity", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the opacity from 0.0-1.0"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.right-property", 
                "isClassProperty": false, 
                "name": "right", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view right position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.scalesPageToFit-property", 
                "isClassProperty": false, 
                "name": "scalesPageToFit", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>whether the webview should scale it's contents or not</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.size-property", 
                "isClassProperty": false, 
                "name": "size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the size of the view as a dictionary of width and height properties"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.softKeyboardOnFocus-property", 
                "isClassProperty": false, 
                "name": "softKeyboardOnFocus", 
                "platforms": [
                    "android"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "One of Titanium.UI.Android.SOFT_KEYBOARD_DEFAULT_ON_FOCUS, Titanium.UI.Android.SOFT_KEYBOARD_HIDE_ON_FOCUS, or Titanium.UI.Android.SOFT_KEYBOARD_SHOW_ON_FOCUS. (Android only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.top-property", 
                "isClassProperty": false, 
                "name": "top", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view top position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.touchEnabled-property", 
                "isClassProperty": false, 
                "name": "touchEnabled", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean indicating if the view should receive touch events (true, default) or forward them to peers (false)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.transform-property", 
                "isClassProperty": false, 
                "name": "transform", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the transformation matrix to apply to the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.url-property", 
                "isClassProperty": false, 
                "name": "url", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the url to the web document. this property will change as the content of the webview changes (such as from internal hyperlinks, etc)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.visible-property", 
                "isClassProperty": false, 
                "name": "visible", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean of the visibility of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.width-property", 
                "isClassProperty": false, 
                "name": "width", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view width. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.WebView.zIndex-property", 
                "isClassProperty": false, 
                "name": "zIndex", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "the z index position relative to other sibling views"
            }
        ], 
        "returns": null, 
        "since": "0.8", 
        "subtype": "view", 
        "type": "object"
    }, 
    "Titanium.UI.Window": {
        "deprecated": null, 
        "description": "<p>The Window is an empty drawing surface or container. The Window is created by the method <a href=\"Titanium.UI.createWindow.html\">Titanium.UI.createWindow</a>. Unlike <a href=\"Titanium.UI.View-object\">Views</a>, Windows can be opened and closed and can have special display properties such as <tt>fullscreen</tt> or <tt>modal</tt>.</p>", 
        "events": [
            {
                "filename": "Titanium.UI.Window.android:back-event", 
                "name": "android:back", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the back button is released. Setting a listener is interpreted as the handler for that button. To restore default behavior, remove the listener. It is recommended that you only have one handler per heavyweight window (Android Only)</p>"
            }, 
            {
                "filename": "Titanium.UI.Window.android:camera-event", 
                "name": "android:camera", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the camera button is released. Setting a listener is interpreted as the handler for that button. To restore default behavior, remove the listener. It is recommended that you only have one handler per heavyweight window (Android Only)</p>"
            }, 
            {
                "filename": "Titanium.UI.Window.android:focus-event", 
                "name": "android:focus", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the camera button is half-pressed then released. Setting a listener is interpreted as the handler for that button. To restore default behavior, remove the listener. It is recommended that you only have one handler per heavyweight window (Android Only)</p>"
            }, 
            {
                "filename": "Titanium.UI.Window.android:search-event", 
                "name": "android:search", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the search button is released. Setting a listener is interpreted as the handler for that button. To restore default behavior, remove the listener. It is recommended that you only have one handler per heavyweight window (Android Only)</p>"
            }, 
            {
                "filename": "Titanium.UI.Window.android:voldown-event", 
                "name": "android:voldown", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the volume down button is released. Setting a listener is interpreted as the handler for that button. To restore default behavior, remove the listener. It is recommended that you only have one handler per heavyweight window (Android Only)</p>"
            }, 
            {
                "filename": "Titanium.UI.Window.android:volup-event", 
                "name": "android:volup", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the volume up button is released. Setting a listener is interpreted as the handler for that button. To restore default behavior, remove the listener. It is recommended that you only have one handler per heavyweight window (Android Only)</p>"
            }, 
            {
                "filename": "Titanium.UI.Window.blur-event", 
                "name": "blur", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the window loses focus</p>"
            }, 
            {
                "filename": "Titanium.UI.Window.click-event", 
                "name": "click", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a click (longer than touch) against the view"
            }, 
            {
                "filename": "Titanium.UI.Window.close-event", 
                "name": "close", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the window is closed</p>"
            }, 
            {
                "filename": "Titanium.UI.Window.dblclick-event", 
                "name": "dblclick", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double click against the view"
            }, 
            {
                "filename": "Titanium.UI.Window.doubletap-event", 
                "name": "doubletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double tap against the view"
            }, 
            {
                "filename": "Titanium.UI.Window.focus-event", 
                "name": "focus", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the window gains focus</p>"
            }, 
            {
                "filename": "Titanium.UI.Window.open-event", 
                "name": "open", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the window is opened</p>"
            }, 
            {
                "filename": "Titanium.UI.Window.singletap-event", 
                "name": "singletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a single tap against the view"
            }, 
            {
                "filename": "Titanium.UI.Window.swipe-event", 
                "name": "swipe", 
                "properties": {
                    "direction": "direction of the swipe - either left or right", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a swipe (left or right) against the view"
            }, 
            {
                "filename": "Titanium.UI.Window.touchcancel-event", 
                "name": "touchcancel", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is interrupted by the device. this happens in circumenstances such as an incoming call to allow the UI to clean up state."
            }, 
            {
                "filename": "Titanium.UI.Window.touchend-event", 
                "name": "touchend", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is completed"
            }, 
            {
                "filename": "Titanium.UI.Window.touchmove-event", 
                "name": "touchmove", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects movement of a touch.  Event coordinates are always relative to the view in which the initial touch occurred"
            }, 
            {
                "filename": "Titanium.UI.Window.touchstart-event", 
                "name": "touchstart", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects a gesture"
            }, 
            {
                "filename": "Titanium.UI.Window.twofingertap-event", 
                "name": "twofingertap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a two-finger tap against the view"
            }
        ], 
        "examples": [
            {
                "code": "<p>Create a fullscreen window with a red background.</p>\n<pre><code>var window = Titanium.UI.createWindow({\n   backgroundColor:'red'\n});\nwindow.open({fullscreen:true});\n</code></pre>", 
                "description": "Full Screen Window example"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.UI.Window.add-method", 
                "name": "add", 
                "parameters": [
                    {
                        "description": "the view to add to this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "add a child to the view hierarchy"
            }, 
            {
                "filename": "Titanium.UI.Window.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.Window.animate-method", 
                "name": "animate", 
                "parameters": [
                    {
                        "description": "either a dictionary of animation properties or an Animation object", 
                        "name": "obj", 
                        "type": "object"
                    }, 
                    {
                        "description": "function to be invoked upon completion of the animation", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "animate the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.close-method", 
                "name": "close", 
                "parameters": [
                    {
                        "description": "close the window with optional animation or display properties", 
                        "name": "options", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "<p>close the window</p>"
            }, 
            {
                "filename": "Titanium.UI.Window.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.Window.hide-method", 
                "name": "hide", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "hide the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.open-method", 
                "name": "open", 
                "parameters": [
                    {
                        "description": "open the window with optional animation or display properties", 
                        "name": "options", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "<p>open the window</p>"
            }, 
            {
                "filename": "Titanium.UI.Window.remove-method", 
                "name": "remove", 
                "parameters": [
                    {
                        "description": "the view to remove from this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "remove a previously add view from the view hiearchy"
            }, 
            {
                "filename": "Titanium.UI.Window.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "remove a previously added event listener"
            }, 
            {
                "filename": "Titanium.UI.Window.show-method", 
                "name": "show", 
                "parameters": [], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "make the view visible"
            }, 
            {
                "filename": "Titanium.UI.Window.toImage-method", 
                "name": "toImage", 
                "parameters": [
                    {
                        "description": "function to be invoked upon completion. if non-null, this method will be performed asynchronously. if null, it will be performed immediately", 
                        "name": "f", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.9", 
                "value": "return a Blob image of the rendered view"
            }
        ], 
        "notes": "<h3 id=\"sub-contexts\">Sub-contexts</h3>\n<p>Windows can be loaded from another Javascript file by specifying the property <tt>url</tt> and reference a file relative to your application <tt>Resources</tt> folder.  It's important to note that Titanium will refuse to load Javascript files from a remote URL. Loading remote Javascript from a URL and providing it with the full capabilities of the Titanium API would be very dangerous. </p>\n<p>When you Window is loaded from a separate Javascript file, the code will be executed in a separate Javascript context (called a \"sub-context\") than your <tt>app.js</tt> global context.  It will also execute in its own separate thread.<br>\n</p>\n<p>The special property <a href=\"Titanium.UI.currentWindow-property.html\">Titanium.UI.currentWindow</a> is available inside a sub-context that points to the Javascript instance by reference in the global context.<br>\n</p>\n<h3 id=\"passing_data\">Passing Data</h3>\n<p>By default, sub-context variables cannot access Javascript references in the global context.  However, the global context can allow its sub-contexts the ability to have access to properties and functions in the global context by reference assignment.  An example best illustrates how to do this.</p>\n<p>In <tt>app.js</tt>, you could define a function and a property.</p>\n<pre><code>var a = 1;\nfunction b()\n{\n    return \"hello\";\n}\n</code></pre>\n\n<p>Now, you can create a new Window - let's call it <tt>foo.js</tt> - in your <tt>app.js</tt>.</p>\n<pre><code>var w = Titanium.UI.createWindow({\n    url:'foo.js'\n});\n</code></pre>\n\n<p>To <em>give</em> your new window access to both <tt>a</tt> and <tt>b</tt>, you would need to assign them to the new window reference <tt>w</tt>.</p>\n<pre><code>w.a = a;\nw.b = b;\n</code></pre>\n\n<p>Of course, you could give them a different name than their original names.  However, what name you give them in your <tt>app.js</tt> is how you will reference them in <tt>foo.js</tt>.  Now, let's look at the code for <tt>foo.js</tt>.</p>\n<pre><code>alert(\"b() = \"+Titanium.UI.currentWindow.b());\n</code></pre>\n\n<p>In the above code, the <tt>foo.js</tt> will execute the function <tt>b</tt> in the global context and return the result.  Since <tt>b</tt> is a reference (vs. a copy by value), any changes made to these Javascript references will be immediately available in all sub-contexts.</p>\n<h3 id=\"events\">Events</h3>\n<p>If you'd like to send events to a window from the global context and vice versa, you could use the built-in event mechanism.  For example, you could define a custom event called <tt>foo</tt>. The window could listen for this event and then respond with some action.  For example, in your sub-context you might define:</p>\n<pre><code>Titanium.UI.currentWindow.addEventListener('foo',function(e)\n{\n    Titanium.API.info(\"foo event received = \"+JSON.stringify(e));\n});\n</code></pre>\n\n<p>You could now fire the event from <tt>app.js</tt> like this:</p>\n<pre><code>var window = Titanium.UI.createWindow({\n    url:'bar.js'\n});\nwindow.open();\nwindow.fireEvent('foo',{a:'b'});\n</code></pre>\n\n<p>It's worth noting two important limitations of the example above:</p>\n<ul>\n<li>You must open the window before you can send events to it. You also may have to fire the event after a specified amount of time if you intend to immediately send data to the window.  This is because windows are opened asynchronously and on a separate thread than the caller thread.</li>\n<li>You can only send JSON-serializable data in a fireEvent.  If you attempt to send objects that have function references, they will be null.</li>\n</ul>\n<h3 id=\"animations\">Animations</h3>\n<p>Windows can be animated like any normal <a href=\"Titanium.UI.View\">View</a>.  To transition between 2 windows, you can use the <tt>transition</tt> property on an animation.  For example, to flip right-to-left between two windows, you could do the following:</p>\n<pre><code>var window2 = Titanium.UI.createWindow({url:'foo.js'});\nvar t = Ti.UI.iPhone.AnimationStyle.FLIP_FROM_LEFT;\nwindow1.animate({view:window2,transition:t});\n</code></pre>\n\n<p>In the above example, the <tt>window2</tt> view will be animated from the right-to-left over <tt>window1</tt>.</p>\n<p>Windows can be opened or closed with animation.  In the example below, we create a window that will open from small to large with a bounce effect.  This is done by applying a transformation at initialization time that scales the original size of the window to 0.  When the window is opened, a new 2D transformation is applied that will scale the window size from 0 to 110% of it's original size and then, after 1/20th of a second, will scale it back to it's original size at 100%. This gives the bounce effect during animation. </p>\n<pre><code>var t = Titanium.UI.create2DMatrix().scale(0);\n\n// create a window with the initial transform scaled to 0\nvar w = Titanium.UI.createWindow({\n    backgroundColor:'#336699',\n    borderWidth:8,\n    borderColor:'#999',\n    height:400,\n    width:300,\n    borderRadius:10,\n    opacity:0.92,\n    transform:t\n});\n\n// create first transform to go beyond normal size\nvar t1 = Titanium.UI.create2DMatrix().scale(1.1);\n\nvar a = Titanium.UI.createAnimation();\na.transform = t1;\na.duration = 200;\n\n// when this animation completes, scale to normal size\na.addEventListener('complete', function()\n{\n    // we can use the identity transform to take it back to it's real size\n    var t2 = Titanium.UI.create2DMatrix();\n    w.animate({transform:t2, duration:200});\n});\n</code></pre>\n\n<h3 id=\"ipad_modal_windows\">iPad Modal Windows</h3>\n<p>For iPad, iPhone SDK 3.2 and Titanium 1.2 introduced several new ways of presenting modal windows.<br>\n</p>\n<p>The example below is a modal window.</p>\n<p><img alt=\"modal\" src=\"http://img.skitch.com/20100406-bqb3f8pb6e4ger7wkcdcw5mbar.png\"></p>\n<p>You can create this type of modal window on iPad with the following code snippet:</p>\n<pre><code>var window = Titanium.UI.createWindow();\nwindow.open({\n    modal:true,\n    modalTransitionStyle: Ti.UI.iPhone.MODAL_TRANSITION_STYLE_FLIP_HORIZONTAL,\n    modalStyle: Ti.UI.iPhone.MODAL_PRESENTATION_FORMSHEET\n})\n</code></pre>\n\n<h3 id=\"android_root_windows\">Android \"root\" Windows</h3>\n<p>In Android, you may wish to specify that a window which you create (such as the first window) should be considered the root window and that the application should exit when the back button is pressed from that window.  This is particularly useful if your application is not using a Tab Group and therefore the splash screen window is appearing whenever you press the back button from your lowest window on the stack.</p>\n<p>To indicate that a particular window should cause an application to exit when the back button is pressed, pass <tt>exitOnClose: true</tt> as one of the creation arguments, as shown here:</p>\n<pre><code>var win = Titanium.UI.createWindow({\n    title: 'My Root Window',\n    exitOnClose: true\n});\n</code></pre>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.anchorPoint-property", 
                "isClassProperty": false, 
                "name": "anchorPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the anchor point value. anchor specifies the position by which animation should occur. center is 0.5, 0.5"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.animatedCenterPoint-property", 
                "isClassProperty": false, 
                "name": "animatedCenterPoint", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "read-only object with x and y properties of where the view is during animation"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.backButtonTitle-property", 
                "isClassProperty": false, 
                "name": "backButtonTitle", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>title for the back button. only available in iPhone. this is only valid when the window is a child of a tab.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.backButtonTitleImage-property", 
                "isClassProperty": false, 
                "name": "backButtonTitleImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>url to an image to show as the back button.  only available in iPhone. this is only valid when the window is a child of a tab.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.backgroundColor-property", 
                "isClassProperty": false, 
                "name": "backgroundColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.backgroundDisabledColor-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background color of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.backgroundDisabledImage-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background image url of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.backgroundFocusedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.backgroundFocusedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.backgroundGradient-property", 
                "isClassProperty": false, 
                "name": "backgroundGradient", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a background gradient for the view with the properties: type,startPoint,endPoint,startRadius,endRadius,backfillStart,backfillEnd,colors."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.backgroundImage-property", 
                "isClassProperty": false, 
                "name": "backgroundImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background image url of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.backgroundLeftCap-property", 
                "isClassProperty": false, 
                "name": "backgroundLeftCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the left end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The right end cap is therefore computed by adding the size of the left end cap and the middle portion together and then subtracting that value from the width of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.backgroundSelectedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.backgroundSelectedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.backgroundTopCap-property", 
                "isClassProperty": false, 
                "name": "backgroundTopCap", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the top end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The bottom end cap is therefore computed by adding the size of the top end cap and the middle portion together and then subtracting that value from the height of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.barColor-property", 
                "isClassProperty": false, 
                "name": "barColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>web named color or hex value for the color of the nav bar. only available in iPhone.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.barImage-property", 
                "isClassProperty": false, 
                "name": "barImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>url to a local image to place as the background of the nav bar. only available in iPhone.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.borderColor-property", 
                "isClassProperty": false, 
                "name": "borderColor", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the border color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.borderRadius-property", 
                "isClassProperty": false, 
                "name": "borderRadius", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border radius of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.borderWidth-property", 
                "isClassProperty": false, 
                "name": "borderWidth", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border width of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.bottom-property", 
                "isClassProperty": false, 
                "name": "bottom", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view bottom position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.center-property", 
                "isClassProperty": false, 
                "name": "center", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the center of the views position relative to the parent view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.exitOnClose-property", 
                "isClassProperty": false, 
                "name": "exitOnClose", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>(Android only.) Boolean indicates if the application should exit when the Android back button is pressed while the window is being shown.  You can only set this as a createWindow({...}) option.  Setting it after window creation will no effect.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.focusable-property", 
                "isClassProperty": false, 
                "name": "focusable", 
                "platforms": [
                    "android"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "Set true if you want a view to be focusable when navigating with the trackball or D-Pad. Default: false. (Android Only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.font-family-property", 
                "isClassProperty": false, 
                "name": "font-family", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font family"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.font-size-property", 
                "isClassProperty": false, 
                "name": "font-size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font size"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.font-style-property", 
                "isClassProperty": false, 
                "name": "font-style", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font style, either normal or italics"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.font-weight-property", 
                "isClassProperty": false, 
                "name": "font-weight", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font weight, either normal or bold"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.fullscreen-property", 
                "isClassProperty": false, 
                "name": "fullscreen", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean indicates if the window is fullscreen (no device chrome)</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.height-property", 
                "isClassProperty": false, 
                "name": "height", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view height. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.left-property", 
                "isClassProperty": false, 
                "name": "left", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view left position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.leftNavButton-property", 
                "isClassProperty": false, 
                "name": "leftNavButton", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>view to show in the left nav bar area. only available in iPhone.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.modal-property", 
                "isClassProperty": false, 
                "name": "modal", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean to indicate if the window should be opened modal in front of other windows</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.navBarHidden-property", 
                "isClassProperty": false, 
                "name": "navBarHidden", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>for modal windows, hide the nav bar (true) or show the nav bar (false, default).</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.opacity-property", 
                "isClassProperty": false, 
                "name": "opacity", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the opacity from 0.0-1.0"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.orientationModes-property", 
                "isClassProperty": false, 
                "name": "orientationModes", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Array of orientation mode constants defined in <a href=\"Titanium.UI-module.html\">Titanium.UI</a>.  On Android, orientation modes that can be set are dependant on the Android SDK level of the device itself.  It should be noted that, the definition of portrait or landscape mode can vary based on the physical orientation of the device.  For example, on some devices <a href=\"Titanium.UI.LANDSCAPE_LEFT-property.html\">Titanium.UI.LANDSCAPE_LEFT</a> represents the top of the device being at the 270 degree position but other devices may (based on camera position for example) treat this position as <a href=\"Titanium.UI.LANDSCAPE_RIGHT-property.html\">Titanium.UI.LANDSCAPE_RIGHT</a>.  In general, applications for Android that need to be aware of orientation should try and limit their orientation logic to handling either portrait or landscape rather than worrying about the reverse modes.  This approach will allow the orientation modes to adopt a more natural feel for the specific device.  The following list breaks down the orientation behavior on Android:  1) (<a href=\"Titanium.UI.PORTRAIT-property.html\">Titanium.UI.PORTRAIT</a> OR <a href=\"Titanium.UI.UPSIDE_PORTRAIT-property.html\">Titanium.UI.UPSIDE_PORTRAIT</a>) AND (<a href=\"Titanium.UI.LANDSCAPE_LEFT-property.html\">Titanium.UI.LANDSCAPE_LEFT</a> OR <a href=\"Titanium.UI.LANDSCAPE_RIGHT-property.html\">Titanium.UI.LANDSCAPE_RIGHT</a>) - Enables full sensor which lets the operating system control the orientation of the screen based on the sensor inside the device.  2) <a href=\"Titanium.UI.PORTRAIT-property.html\">Titanium.UI.PORTRAIT</a> OR <a href=\"Titanium.UI.UPSIDE_PORTRAIT-property.html\">Titanium.UI.UPSIDE_PORTRAIT</a> - Enables sensor portrait mode on Android 2.3 and above.  Sensor portrait mode on Android means the screen will shift between both portrait modes according to the sensor inside the device.  If the Android version is less than 2.3, then normal portrait mode is locked.  3) <a href=\"Titanium.UI.LANDSCAPE_LEFT-property.html\">Titanium.UI.LANDSCAPE_LEFT</a> OR <a href=\"Titanium.UI.LANDSCAPE_RIGHT-property.html\">Titanium.UI.LANDSCAPE_RIGHT</a> - Enables sensor landscape mode on Android 2.3 and above.  Sensor landscape mode on Android means the screen will shift between both landscape modes according to the sensor inside the device.  If the Android version is less than 2.3, then normal landscape mode is locked.  4) <a href=\"Titanium.UI.PORTRAIT-property.html\">Titanium.UI.PORTRAIT</a> - Locks screen orientation to portrait mode  5) <a href=\"Titanium.UI.LANDSCAPE.html\">Titanium.UI.LANDSCAPE</a> - Locks screen orientation to landscape mode  6) empty array - resets the orientation to default sensor control</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.right-property", 
                "isClassProperty": false, 
                "name": "right", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view right position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.rightNavButton-property", 
                "isClassProperty": false, 
                "name": "rightNavButton", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>view to show in the right nav bar area. only available in iPhone.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.size-property", 
                "isClassProperty": false, 
                "name": "size", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the size of the view as a dictionary of width and height properties"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.softKeyboardOnFocus-property", 
                "isClassProperty": false, 
                "name": "softKeyboardOnFocus", 
                "platforms": [
                    "android"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "One of Titanium.UI.Android.SOFT_KEYBOARD_DEFAULT_ON_FOCUS, Titanium.UI.Android.SOFT_KEYBOARD_HIDE_ON_FOCUS, or Titanium.UI.Android.SOFT_KEYBOARD_SHOW_ON_FOCUS. (Android only)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.tabBarHidden-property", 
                "isClassProperty": false, 
                "name": "tabBarHidden", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean to indicate if the tab bar should be hidden. this is only valid when the window is a child of a tab.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.title-property", 
                "isClassProperty": false, 
                "name": "title", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>title of the window.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.titleControl-property", 
                "isClassProperty": false, 
                "name": "titleControl", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>view to show in the title area. only available in iPhone.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.titleImage-property", 
                "isClassProperty": false, 
                "name": "titleImage", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>url to a image that show in the title area. only available in iPhone.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.titlePrompt-property", 
                "isClassProperty": false, 
                "name": "titlePrompt", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>title prompt for the window. only available in iPhone.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.titleid-property", 
                "isClassProperty": false, 
                "name": "titleid", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the key in the locale file to use for the title property</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.titlepromptid-property", 
                "isClassProperty": false, 
                "name": "titlepromptid", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the key in the locale file to use for the titlePrompt property</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.toolbar-property", 
                "isClassProperty": false, 
                "name": "toolbar", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "array", 
                "type_jsca": "array", 
                "value": "<p>array of button objects to show in the toolbar of the window. only available in iPhone. this is only valid when the window is a child of a tab.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.top-property", 
                "isClassProperty": false, 
                "name": "top", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view top position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.touchEnabled-property", 
                "isClassProperty": false, 
                "name": "touchEnabled", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean indicating if the view should receive touch events (true, default) or forward them to peers (false)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.transform-property", 
                "isClassProperty": false, 
                "name": "transform", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the transformation matrix to apply to the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.translucent-property", 
                "isClassProperty": false, 
                "name": "translucent", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>boolean to indicate if the nav bar is translucent. only available in iPhone.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.url-property", 
                "isClassProperty": false, 
                "name": "url", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>url to a JavaScript file with the windows instructions. this window will create a new JavaScript sub-context that will run in its own thread and global variable space.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.visible-property", 
                "isClassProperty": false, 
                "name": "visible", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean of the visibility of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.width-property", 
                "isClassProperty": false, 
                "name": "width", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view width. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.windowSoftInputMode-property", 
                "isClassProperty": false, 
                "name": "windowSoftInputMode", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>One of Ti.UI.Android.SOFT_INPUT_ADJUST_PAN, Ti.UI.Android.SOFT_INPUT_ADJUST_RESIZE, or Ti.UI.Android.SOFT_INPUT_ADJUST_UNSPECIFIED. Note: MUST be passed in the creation options. (Android Only) <a href=\"http://developer.android.com/reference/android/view/Window.html#setSoftInputMode(int)\">Android Doc: Window.setSoftInputMode</a></p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.Window.zIndex-property", 
                "isClassProperty": false, 
                "name": "zIndex", 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "the z index position relative to other sibling views"
            }
        ], 
        "returns": null, 
        "since": "0.9", 
        "subtype": "view", 
        "type": "object"
    }, 
    "Titanium.UI.iOS": {
        "deprecated": null, 
        "description": "<p>The Apple iOS specific UI capabilities.  All properties, methods and events in this namespace will only work on the Apple iOS related devices.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.UI.iOS.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.4", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.iOS.createAdView-method", 
                "name": "createAdView", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.iOS.AdView.html\">Titanium.UI.iOS.AdView</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "1.4", 
                "value": "create and return an instance of <a href=\"Titanium.UI.iOS.AdView.html\">Titanium.UI.iOS.AdView</a>"
            }, 
            {
                "filename": "Titanium.UI.iOS.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.4", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.iOS.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.4", 
                "value": "remove a previously added event listener"
            }
        ], 
        "notes": null, 
        "objects": [
            "Titanium.UI.iOS.AdView"
        ], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "ipad"
        ], 
        "properties": [], 
        "returns": "object", 
        "since": "1.4", 
        "subtype": null, 
        "type": "module"
    }, 
    "Titanium.UI.iOS.AdView": {
        "deprecated": null, 
        "description": "<p>The AdView is a view for display Apple iAds. The View is created by the method <a href=\"Titanium.UI.iOS.createAdView.html\">Titanium.UI.iOS.createAdView</a>.</p>", 
        "events": [
            {
                "filename": "Titanium.UI.iOS.AdView.action-event", 
                "name": "action", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>called when a banner action is performed</p>"
            }, 
            {
                "filename": "Titanium.UI.iOS.AdView.click-event", 
                "name": "click", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a click (longer than touch) against the view"
            }, 
            {
                "filename": "Titanium.UI.iOS.AdView.dblclick-event", 
                "name": "dblclick", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double click against the view"
            }, 
            {
                "filename": "Titanium.UI.iOS.AdView.doubletap-event", 
                "name": "doubletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double tap against the view"
            }, 
            {
                "filename": "Titanium.UI.iOS.AdView.error-event", 
                "name": "error", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "message": "<p>the error message</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>called when a banner could not be loaded</p>"
            }, 
            {
                "filename": "Titanium.UI.iOS.AdView.load-event", 
                "name": "load", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>called when a banner is loaded and displayed</p>"
            }, 
            {
                "filename": "Titanium.UI.iOS.AdView.singletap-event", 
                "name": "singletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a single tap against the view"
            }, 
            {
                "filename": "Titanium.UI.iOS.AdView.swipe-event", 
                "name": "swipe", 
                "properties": {
                    "direction": "direction of the swipe - either left or right", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a swipe (left or right) against the view"
            }, 
            {
                "filename": "Titanium.UI.iOS.AdView.touchcancel-event", 
                "name": "touchcancel", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is interrupted by the device. this happens in circumenstances such as an incoming call to allow the UI to clean up state."
            }, 
            {
                "filename": "Titanium.UI.iOS.AdView.touchend-event", 
                "name": "touchend", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is completed"
            }, 
            {
                "filename": "Titanium.UI.iOS.AdView.touchmove-event", 
                "name": "touchmove", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects movement of a touch.  Event coordinates are always relative to the view in which the initial touch occurred"
            }, 
            {
                "filename": "Titanium.UI.iOS.AdView.touchstart-event", 
                "name": "touchstart", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects a gesture"
            }, 
            {
                "filename": "Titanium.UI.iOS.AdView.twofingertap-event", 
                "name": "twofingertap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a two-finger tap against the view"
            }
        ], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.UI.iOS.AdView.add-method", 
                "name": "add", 
                "parameters": [
                    {
                        "description": "the view to add to this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.4", 
                "value": "add a child to the view hierarchy"
            }, 
            {
                "filename": "Titanium.UI.iOS.AdView.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.4", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.iOS.AdView.animate-method", 
                "name": "animate", 
                "parameters": [
                    {
                        "description": "either a dictionary of animation properties or an Animation object", 
                        "name": "obj", 
                        "type": "object"
                    }, 
                    {
                        "description": "function to be invoked upon completion of the animation", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.4", 
                "value": "animate the view"
            }, 
            {
                "filename": "Titanium.UI.iOS.AdView.cancelAction-method", 
                "name": "cancelAction", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.4", 
                "value": "<p>A banner view action can cover your application's user interface. However, your application continues to run, and receives events normally. If your application receives an event that requires the user's attention, it can programmatically cancel the action and uncover its interface by calling cancelAction. Canceling actions frequently can cause a loss of revenue for your application.</p>"
            }, 
            {
                "filename": "Titanium.UI.iOS.AdView.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.4", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.iOS.AdView.hide-method", 
                "name": "hide", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.4", 
                "value": "hide the view"
            }, 
            {
                "filename": "Titanium.UI.iOS.AdView.remove-method", 
                "name": "remove", 
                "parameters": [
                    {
                        "description": "the view to remove from this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.4", 
                "value": "remove a previously add view from the view hiearchy"
            }, 
            {
                "filename": "Titanium.UI.iOS.AdView.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.4", 
                "value": "remove a previously added event listener"
            }, 
            {
                "filename": "Titanium.UI.iOS.AdView.show-method", 
                "name": "show", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.4", 
                "value": "make the view visible"
            }, 
            {
                "filename": "Titanium.UI.iOS.AdView.toImage-method", 
                "name": "toImage", 
                "parameters": [
                    {
                        "description": "function to be invoked upon completion. if non-null, this method will be performed asynchronously. if null, it will be performed immediately", 
                        "name": "f", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "1.4", 
                "value": "return a Blob image of the rendered view"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iOS.AdView.SIZE_320x50-property", 
                "isClassProperty": false, 
                "name": "SIZE_320x50", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>constant for 320x50 ad sizes</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iOS.AdView.SIZE_480x32-property", 
                "isClassProperty": false, 
                "name": "SIZE_480x32", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>constant for 480x32 ad sizes</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iOS.AdView.anchorPoint-property", 
                "isClassProperty": false, 
                "name": "anchorPoint", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the anchor point value. anchor specifies the position by which animation should occur. center is 0.5, 0.5"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iOS.AdView.animatedCenterPoint-property", 
                "isClassProperty": false, 
                "name": "animatedCenterPoint", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "read-only object with x and y properties of where the view is during animation"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iOS.AdView.backgroundColor-property", 
                "isClassProperty": false, 
                "name": "backgroundColor", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iOS.AdView.backgroundDisabledColor-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledColor", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background color of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iOS.AdView.backgroundDisabledImage-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledImage", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background image url of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iOS.AdView.backgroundFocusedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedColor", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iOS.AdView.backgroundFocusedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedImage", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iOS.AdView.backgroundGradient-property", 
                "isClassProperty": false, 
                "name": "backgroundGradient", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a background gradient for the view with the properties: type,startPoint,endPoint,startRadius,endRadius,backfillStart,backfillEnd,colors."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iOS.AdView.backgroundImage-property", 
                "isClassProperty": false, 
                "name": "backgroundImage", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background image url of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iOS.AdView.backgroundLeftCap-property", 
                "isClassProperty": false, 
                "name": "backgroundLeftCap", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the left end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The right end cap is therefore computed by adding the size of the left end cap and the middle portion together and then subtracting that value from the width of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iOS.AdView.backgroundSelectedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedColor", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iOS.AdView.backgroundSelectedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedImage", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iOS.AdView.backgroundTopCap-property", 
                "isClassProperty": false, 
                "name": "backgroundTopCap", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the top end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The bottom end cap is therefore computed by adding the size of the top end cap and the middle portion together and then subtracting that value from the height of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iOS.AdView.borderColor-property", 
                "isClassProperty": false, 
                "name": "borderColor", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the border color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iOS.AdView.borderRadius-property", 
                "isClassProperty": false, 
                "name": "borderRadius", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border radius of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iOS.AdView.borderWidth-property", 
                "isClassProperty": false, 
                "name": "borderWidth", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border width of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iOS.AdView.bottom-property", 
                "isClassProperty": false, 
                "name": "bottom", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view bottom position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iOS.AdView.center-property", 
                "isClassProperty": false, 
                "name": "center", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the center of the views position relative to the parent view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iOS.AdView.font-family-property", 
                "isClassProperty": false, 
                "name": "font-family", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font family"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iOS.AdView.font-size-property", 
                "isClassProperty": false, 
                "name": "font-size", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font size"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iOS.AdView.font-style-property", 
                "isClassProperty": false, 
                "name": "font-style", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font style, either normal or italics"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iOS.AdView.font-weight-property", 
                "isClassProperty": false, 
                "name": "font-weight", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font weight, either normal or bold"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iOS.AdView.height-property", 
                "isClassProperty": false, 
                "name": "height", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view height. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iOS.AdView.left-property", 
                "isClassProperty": false, 
                "name": "left", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view left position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iOS.AdView.opacity-property", 
                "isClassProperty": false, 
                "name": "opacity", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the opacity from 0.0-1.0"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iOS.AdView.right-property", 
                "isClassProperty": false, 
                "name": "right", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view right position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iOS.AdView.size-property", 
                "isClassProperty": false, 
                "name": "size", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the size of the view as a dictionary of width and height properties"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iOS.AdView.top-property", 
                "isClassProperty": false, 
                "name": "top", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view top position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iOS.AdView.touchEnabled-property", 
                "isClassProperty": false, 
                "name": "touchEnabled", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean indicating if the view should receive touch events (true, default) or forward them to peers (false)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iOS.AdView.transform-property", 
                "isClassProperty": false, 
                "name": "transform", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the transformation matrix to apply to the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iOS.AdView.visible-property", 
                "isClassProperty": false, 
                "name": "visible", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean of the visibility of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iOS.AdView.width-property", 
                "isClassProperty": false, 
                "name": "width", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view width. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iOS.AdView.zIndex-property", 
                "isClassProperty": false, 
                "name": "zIndex", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.4", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "the z index position relative to other sibling views"
            }
        ], 
        "returns": null, 
        "since": "1.4", 
        "subtype": "view", 
        "type": "object"
    }, 
    "Titanium.UI.iPad": {
        "deprecated": null, 
        "description": "<p>The iPad specific UI capabilities.  All properties, methods and events in this namespace will only work on the Apple iPad related devices.  To develop for iPad, you will need the Apple iPhone SDK 3.2 or later and Titanium Mobile SDK 1.2 or later. </p>\n<p>For iPad UI programming guidelines, please review the <a href=\"http://developer.apple.com/iphone/library/documentation/General/Conceptual/iPadHIG/Introduction/Introduction.html\">iPad Human Interface Guidelines</a>. </p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.UI.iPad.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.createPopover-method", 
                "name": "createPopover", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.iPad.Popover.html\">Titanium.UI.iPad.Popover</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "1.2", 
                "value": "create and return an instance of <a href=\"Titanium.UI.iPad.Popover.html\">Titanium.UI.iPad.Popover</a>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.createSplitWindow-method", 
                "name": "createSplitWindow", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.iPad.SplitWindow.html\">Titanium.UI.iPad.SplitWindow</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "1.2", 
                "value": "create and return an instance of <a href=\"Titanium.UI.iPad.SplitWindow.html\">Titanium.UI.iPad.SplitWindow</a>"
            }, 
            {
                "filename": "Titanium.UI.iPad.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.iPad.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "remove a previously added event listener"
            }
        ], 
        "notes": "<h3 id=\"custom_fonts\">Custom Fonts</h3>\n<p>The iPad supports the ability to embed your own fonts in your iPad application. To add your own fonts, you should add the </p>", 
        "objects": [
            "Titanium.UI.iPad.Popover", 
            "Titanium.UI.iPad.SplitWindow"
        ], 
        "parameters": [], 
        "platforms": [
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.POPOVER_ARROW_DIRECTION_ANY-property", 
                "isClassProperty": true, 
                "name": "POPOVER_ARROW_DIRECTION_ANY", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>An arrow that points in any direction.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.POPOVER_ARROW_DIRECTION_DOWN-property", 
                "isClassProperty": true, 
                "name": "POPOVER_ARROW_DIRECTION_DOWN", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>An arrow that points downward.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.POPOVER_ARROW_DIRECTION_LEFT-property", 
                "isClassProperty": true, 
                "name": "POPOVER_ARROW_DIRECTION_LEFT", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>An arrow that points toward the left.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.POPOVER_ARROW_DIRECTION_RIGHT-property", 
                "isClassProperty": true, 
                "name": "POPOVER_ARROW_DIRECTION_RIGHT", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>An arrow that points toward the right.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.POPOVER_ARROW_DIRECTION_UNKNOWN-property", 
                "isClassProperty": true, 
                "name": "POPOVER_ARROW_DIRECTION_UNKNOWN", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The status of the arrow is currently unknown.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.POPOVER_ARROW_DIRECTION_UP-property", 
                "isClassProperty": true, 
                "name": "POPOVER_ARROW_DIRECTION_UP", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>An arrow that points upward.</p>"
            }
        ], 
        "returns": "object", 
        "since": "1.2", 
        "subtype": null, 
        "type": "module"
    }, 
    "Titanium.UI.iPad.Popover": {
        "deprecated": null, 
        "description": "<p>A Popover is used to manage the presentation of content in a popover. You use popovers to present information temporarily but in a way that does not take over the entire screen like a modal view does. The popover content is layered on top of your existing content in a special type of window. The popover remains visible until the user taps outside of the popover window or you explicitly dismiss it. The Popover is created by the method <a href=\"Titanium.UI.iPad.createPopover-method.html\">Titanium.UI.iPad.createPopover</a>.</p>\n<p><img alt=\"popover\" src=\"http://img.skitch.com/20100406-pmssjk1a3a65s6ui8qnbqi59c4.png\"></p>", 
        "events": [
            {
                "filename": "Titanium.UI.iPad.Popover.click-event", 
                "name": "click", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a click (longer than touch) against the view"
            }, 
            {
                "filename": "Titanium.UI.iPad.Popover.dblclick-event", 
                "name": "dblclick", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double click against the view"
            }, 
            {
                "filename": "Titanium.UI.iPad.Popover.doubletap-event", 
                "name": "doubletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double tap against the view"
            }, 
            {
                "filename": "Titanium.UI.iPad.Popover.hide-event", 
                "name": "hide", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the popover is hidden</p>"
            }, 
            {
                "filename": "Titanium.UI.iPad.Popover.singletap-event", 
                "name": "singletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a single tap against the view"
            }, 
            {
                "filename": "Titanium.UI.iPad.Popover.swipe-event", 
                "name": "swipe", 
                "properties": {
                    "direction": "direction of the swipe - either left or right", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a swipe (left or right) against the view"
            }, 
            {
                "filename": "Titanium.UI.iPad.Popover.touchcancel-event", 
                "name": "touchcancel", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is interrupted by the device. this happens in circumenstances such as an incoming call to allow the UI to clean up state."
            }, 
            {
                "filename": "Titanium.UI.iPad.Popover.touchend-event", 
                "name": "touchend", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is completed"
            }, 
            {
                "filename": "Titanium.UI.iPad.Popover.touchmove-event", 
                "name": "touchmove", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects movement of a touch.  Event coordinates are always relative to the view in which the initial touch occurred"
            }, 
            {
                "filename": "Titanium.UI.iPad.Popover.touchstart-event", 
                "name": "touchstart", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects a gesture"
            }, 
            {
                "filename": "Titanium.UI.iPad.Popover.twofingertap-event", 
                "name": "twofingertap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a two-finger tap against the view"
            }
        ], 
        "examples": [
            {
                "code": "<p>In this example, we create a simple popover and position it near the button</p>\n<pre><code>var popover = Ti.UI.iPad.createPopover({height:100,width:100});\npopover.add(view);\npopover.show({view:button});\n</code></pre>", 
                "description": "Simple Popover"
            }, 
            {
                "code": "<p>In this example, we create a popover with a title and right navigation button.</p>\n<pre><code>var popover = Ti.UI.iPad.createPopover({ \n    width:250, \n    height:100,\n    title: \"Yo Yo\",\n    rightNavButton:button\n});\n</code></pre>", 
                "description": "Popover with title and nav button"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.UI.iPad.Popover.add-method", 
                "name": "add", 
                "parameters": [
                    {
                        "description": "the view to add to this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "add a child to the view hierarchy"
            }, 
            {
                "filename": "Titanium.UI.iPad.Popover.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.iPad.Popover.animate-method", 
                "name": "animate", 
                "parameters": [
                    {
                        "description": "either a dictionary of animation properties or an Animation object", 
                        "name": "obj", 
                        "type": "object"
                    }, 
                    {
                        "description": "function to be invoked upon completion of the animation", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "animate the view"
            }, 
            {
                "filename": "Titanium.UI.iPad.Popover.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.hide-method", 
                "name": "hide", 
                "parameters": [
                    {
                        "description": "dictionary with optional boolean property <tt>animated</tt> which indicates if the popover should be hidden with animation (defaults to true) or not", 
                        "name": "options", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "hide the view"
            }, 
            {
                "filename": "Titanium.UI.iPad.Popover.remove-method", 
                "name": "remove", 
                "parameters": [
                    {
                        "description": "the view to remove from this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "remove a previously add view from the view hiearchy"
            }, 
            {
                "filename": "Titanium.UI.iPad.Popover.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "remove a previously added event listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.setHeight-method", 
                "name": "setHeight", 
                "parameters": [
                    {
                        "description": "height of the popover", 
                        "name": "height", 
                        "type": "int,string"
                    }
                ], 
                "platforms": [
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "<p>change the height of the popover</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.setPassthroughViews-method", 
                "name": "setPassthroughViews", 
                "parameters": [
                    {
                        "description": "array of views which the user can interact with while the popover is open (i.e. clicking on these views will interact with these views, and not dismiss the popover).", 
                        "name": "passthroughViews", 
                        "type": "array"
                    }
                ], 
                "platforms": [
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "<p>set the passthrough views for the popover</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.setWidth-method", 
                "name": "setWidth", 
                "parameters": [
                    {
                        "description": "width of the popover", 
                        "name": "width", 
                        "type": "int,string"
                    }
                ], 
                "platforms": [
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "<p>change the width of the popover</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.show-method", 
                "name": "show", 
                "parameters": [
                    {
                        "description": "dictionary of the following properties: <tt>rect</tt>, <tt>animated</tt> and <tt>view</tt>. The <tt>view</tt> property should specify the view relative to where the popover should display.  <tt>animated</tt> is a boolean indicating if the showing of the popover should be animated, defaults to true. The property <tt>rect</tt> is a dictionary with the following properties: <tt>x</tt>, <tt>y</tt>, <tt>width</tt> and <tt>height</tt>, where the rectangle in <tt>view</tt> at which to anchor the popover.", 
                        "name": "options", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "make the view visible"
            }, 
            {
                "filename": "Titanium.UI.iPad.Popover.toImage-method", 
                "name": "toImage", 
                "parameters": [
                    {
                        "description": "function to be invoked upon completion. if non-null, this method will be performed asynchronously. if null, it will be performed immediately", 
                        "name": "f", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "1.2", 
                "value": "return a Blob image of the rendered view"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.anchorPoint-property", 
                "isClassProperty": false, 
                "name": "anchorPoint", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the anchor point value. anchor specifies the position by which animation should occur. center is 0.5, 0.5"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.animatedCenterPoint-property", 
                "isClassProperty": false, 
                "name": "animatedCenterPoint", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "read-only object with x and y properties of where the view is during animation"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.arrowDirection-property", 
                "isClassProperty": false, 
                "name": "arrowDirection", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>return the arrow direction of the popover</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.backgroundColor-property", 
                "isClassProperty": false, 
                "name": "backgroundColor", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.backgroundDisabledColor-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledColor", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background color of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.backgroundDisabledImage-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledImage", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background image url of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.backgroundFocusedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedColor", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.backgroundFocusedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedImage", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.backgroundGradient-property", 
                "isClassProperty": false, 
                "name": "backgroundGradient", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a background gradient for the view with the properties: type,startPoint,endPoint,startRadius,endRadius,backfillStart,backfillEnd,colors."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.backgroundImage-property", 
                "isClassProperty": false, 
                "name": "backgroundImage", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background image url of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.backgroundLeftCap-property", 
                "isClassProperty": false, 
                "name": "backgroundLeftCap", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the left end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The right end cap is therefore computed by adding the size of the left end cap and the middle portion together and then subtracting that value from the width of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.backgroundSelectedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedColor", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.backgroundSelectedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedImage", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.backgroundTopCap-property", 
                "isClassProperty": false, 
                "name": "backgroundTopCap", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the top end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The bottom end cap is therefore computed by adding the size of the top end cap and the middle portion together and then subtracting that value from the height of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.borderColor-property", 
                "isClassProperty": false, 
                "name": "borderColor", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the border color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.borderRadius-property", 
                "isClassProperty": false, 
                "name": "borderRadius", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border radius of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.borderWidth-property", 
                "isClassProperty": false, 
                "name": "borderWidth", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border width of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.bottom-property", 
                "isClassProperty": false, 
                "name": "bottom", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view bottom position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.center-property", 
                "isClassProperty": false, 
                "name": "center", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the center of the views position relative to the parent view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.font-family-property", 
                "isClassProperty": false, 
                "name": "font-family", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font family"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.font-size-property", 
                "isClassProperty": false, 
                "name": "font-size", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font size"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.font-style-property", 
                "isClassProperty": false, 
                "name": "font-style", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font style, either normal or italics"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.font-weight-property", 
                "isClassProperty": false, 
                "name": "font-weight", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font weight, either normal or bold"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.height-property", 
                "isClassProperty": false, 
                "name": "height", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view height. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.left-property", 
                "isClassProperty": false, 
                "name": "left", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view left position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.leftNavButton-property", 
                "isClassProperty": false, 
                "name": "leftNavButton", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>the left button in the nav area of the popover</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.opacity-property", 
                "isClassProperty": false, 
                "name": "opacity", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the opacity from 0.0-1.0"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.right-property", 
                "isClassProperty": false, 
                "name": "right", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view right position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.size-property", 
                "isClassProperty": false, 
                "name": "size", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the size of the view as a dictionary of width and height properties"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.title-property", 
                "isClassProperty": false, 
                "name": "title", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>the title of the nav area of the popover</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.top-property", 
                "isClassProperty": false, 
                "name": "top", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view top position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.touchEnabled-property", 
                "isClassProperty": false, 
                "name": "touchEnabled", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean indicating if the view should receive touch events (true, default) or forward them to peers (false)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.transform-property", 
                "isClassProperty": false, 
                "name": "transform", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the transformation matrix to apply to the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.visible-property", 
                "isClassProperty": false, 
                "name": "visible", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean of the visibility of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.width-property", 
                "isClassProperty": false, 
                "name": "width", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view width. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.Popover.zIndex-property", 
                "isClassProperty": false, 
                "name": "zIndex", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "the z index position relative to other sibling views"
            }
        ], 
        "returns": null, 
        "since": "1.2", 
        "subtype": "view", 
        "type": "object"
    }, 
    "Titanium.UI.iPad.SplitWindow": {
        "deprecated": null, 
        "description": "<p>A SplitWindow is a window that manages the presentation of two side-by-side view controllers. You use this class to implement a master-detail interface, in which the left-side view presents a list of items and the right-side presents details of the selected item. The SplitView is for use exclusively on iPad devices. The SplitWindow is created by the method <a href=\"Titanium.UI.iPad.createSplitWindow-method.html\">Titanium.UI.iPad.createSplitWindow</a>.</p>\n<p><img alt=\"splitview\" src=\"http://img.skitch.com/20100406-1f85bm9cx8t768xgsjqax1ng6y.png\"></p>", 
        "events": [
            {
                "filename": "Titanium.UI.iPad.SplitWindow.click-event", 
                "name": "click", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a click (longer than touch) against the view"
            }, 
            {
                "filename": "Titanium.UI.iPad.SplitWindow.dblclick-event", 
                "name": "dblclick", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double click against the view"
            }, 
            {
                "filename": "Titanium.UI.iPad.SplitWindow.doubletap-event", 
                "name": "doubletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double tap against the view"
            }, 
            {
                "filename": "Titanium.UI.iPad.SplitWindow.singletap-event", 
                "name": "singletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a single tap against the view"
            }, 
            {
                "filename": "Titanium.UI.iPad.SplitWindow.swipe-event", 
                "name": "swipe", 
                "properties": {
                    "direction": "direction of the swipe - either left or right", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a swipe (left or right) against the view"
            }, 
            {
                "filename": "Titanium.UI.iPad.SplitWindow.touchcancel-event", 
                "name": "touchcancel", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is interrupted by the device. this happens in circumenstances such as an incoming call to allow the UI to clean up state."
            }, 
            {
                "filename": "Titanium.UI.iPad.SplitWindow.touchend-event", 
                "name": "touchend", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is completed"
            }, 
            {
                "filename": "Titanium.UI.iPad.SplitWindow.touchmove-event", 
                "name": "touchmove", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects movement of a touch.  Event coordinates are always relative to the view in which the initial touch occurred"
            }, 
            {
                "filename": "Titanium.UI.iPad.SplitWindow.touchstart-event", 
                "name": "touchstart", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects a gesture"
            }, 
            {
                "filename": "Titanium.UI.iPad.SplitWindow.twofingertap-event", 
                "name": "twofingertap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a two-finger tap against the view"
            }, 
            {
                "filename": "Titanium.UI.iPad.SplitWindow.visible-event", 
                "name": "visible", 
                "properties": {
                    "button": "<p>for <tt>view</tt> view type, the button that is automatically wired to control the master view popover</p>", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "popover": "<p>for either <tt>popover</tt> or <tt>detail</tt> view types, the popover instance</p>", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "view": "<p>the type of view becoming visible. either <tt>master</tt>, <tt>popover</tt> or <tt>detail</tt>.</p>", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "<p>fired when the masterView or detailView becomes visible.</p>"
            }
        ], 
        "examples": [
            {
                "code": "<p>This is an example of a Split Window.</p>\n<pre><code>var win = Ti.UI.createWindow();\n\nvar nav = Ti.UI.iPhone.createNavigationGroup({\n   window: win\n});\n\nvar splitwin = Ti.UI.iPad.createSplitWindow({\n    detailView:nav,\n    masterView:masterView\n});\n\nsplitwin.addEventListener('visible',function(e)\n{\n    if (e.view == 'detail')\n    {\n        e.button.title = \"Master\";\n        win.leftNavButton = e.button;\n    }\n    else if (e.view == 'master')\n    {\n        win.leftNavButton = null;\n    }\n});\n\nsplitwin.open();\n</code></pre>", 
                "description": "Split Window Example"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.UI.iPad.SplitWindow.add-method", 
                "name": "add", 
                "parameters": [
                    {
                        "description": "the view to add to this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "add a child to the view hierarchy"
            }, 
            {
                "filename": "Titanium.UI.iPad.SplitWindow.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.iPad.SplitWindow.animate-method", 
                "name": "animate", 
                "parameters": [
                    {
                        "description": "either a dictionary of animation properties or an Animation object", 
                        "name": "obj", 
                        "type": "object"
                    }, 
                    {
                        "description": "function to be invoked upon completion of the animation", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "animate the view"
            }, 
            {
                "filename": "Titanium.UI.iPad.SplitWindow.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.iPad.SplitWindow.hide-method", 
                "name": "hide", 
                "parameters": [], 
                "platforms": [
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "hide the view"
            }, 
            {
                "filename": "Titanium.UI.iPad.SplitWindow.remove-method", 
                "name": "remove", 
                "parameters": [
                    {
                        "description": "the view to remove from this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "remove a previously add view from the view hiearchy"
            }, 
            {
                "filename": "Titanium.UI.iPad.SplitWindow.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "remove a previously added event listener"
            }, 
            {
                "filename": "Titanium.UI.iPad.SplitWindow.show-method", 
                "name": "show", 
                "parameters": [], 
                "platforms": [
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "make the view visible"
            }, 
            {
                "filename": "Titanium.UI.iPad.SplitWindow.toImage-method", 
                "name": "toImage", 
                "parameters": [
                    {
                        "description": "function to be invoked upon completion. if non-null, this method will be performed asynchronously. if null, it will be performed immediately", 
                        "name": "f", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "1.2", 
                "value": "return a Blob image of the rendered view"
            }
        ], 
        "notes": "<p>The SplitWindow inherits its methods and properties from <a href=\"Titanium.UI.Window-object.html\">Titanium.UI.Window</a>.</p>\n<p>The <tt>masterView</tt> and <tt>detailView</tt> properties are required in the constructor of the SplitWindow and cannot be changed once set.</p>\n<p>The SplitWindow is a top-level window and cannot be contained within another window or view.<br>\n</p>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.anchorPoint-property", 
                "isClassProperty": false, 
                "name": "anchorPoint", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the anchor point value. anchor specifies the position by which animation should occur. center is 0.5, 0.5"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.animatedCenterPoint-property", 
                "isClassProperty": false, 
                "name": "animatedCenterPoint", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "read-only object with x and y properties of where the view is during animation"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.backgroundColor-property", 
                "isClassProperty": false, 
                "name": "backgroundColor", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.backgroundDisabledColor-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledColor", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background color of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.backgroundDisabledImage-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledImage", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background image url of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.backgroundFocusedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedColor", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.backgroundFocusedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedImage", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.backgroundGradient-property", 
                "isClassProperty": false, 
                "name": "backgroundGradient", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a background gradient for the view with the properties: type,startPoint,endPoint,startRadius,endRadius,backfillStart,backfillEnd,colors."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.backgroundImage-property", 
                "isClassProperty": false, 
                "name": "backgroundImage", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background image url of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.backgroundLeftCap-property", 
                "isClassProperty": false, 
                "name": "backgroundLeftCap", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the left end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The right end cap is therefore computed by adding the size of the left end cap and the middle portion together and then subtracting that value from the width of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.backgroundSelectedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedColor", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.backgroundSelectedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedImage", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.backgroundTopCap-property", 
                "isClassProperty": false, 
                "name": "backgroundTopCap", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the top end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The bottom end cap is therefore computed by adding the size of the top end cap and the middle portion together and then subtracting that value from the height of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.borderColor-property", 
                "isClassProperty": false, 
                "name": "borderColor", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the border color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.borderRadius-property", 
                "isClassProperty": false, 
                "name": "borderRadius", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border radius of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.borderWidth-property", 
                "isClassProperty": false, 
                "name": "borderWidth", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border width of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.bottom-property", 
                "isClassProperty": false, 
                "name": "bottom", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view bottom position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.center-property", 
                "isClassProperty": false, 
                "name": "center", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the center of the views position relative to the parent view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.detailView-property", 
                "isClassProperty": false, 
                "name": "detailView", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>view for the detail view section of the SplitWindow</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.font-family-property", 
                "isClassProperty": false, 
                "name": "font-family", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font family"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.font-size-property", 
                "isClassProperty": false, 
                "name": "font-size", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font size"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.font-style-property", 
                "isClassProperty": false, 
                "name": "font-style", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font style, either normal or italics"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.font-weight-property", 
                "isClassProperty": false, 
                "name": "font-weight", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font weight, either normal or bold"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.height-property", 
                "isClassProperty": false, 
                "name": "height", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view height. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.left-property", 
                "isClassProperty": false, 
                "name": "left", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view left position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.masterView-property", 
                "isClassProperty": false, 
                "name": "masterView", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "<p>view for the master view section of the SplitWindow</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.opacity-property", 
                "isClassProperty": false, 
                "name": "opacity", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the opacity from 0.0-1.0"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.right-property", 
                "isClassProperty": false, 
                "name": "right", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view right position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.showMasterInPortrait-property", 
                "isClassProperty": false, 
                "name": "showMasterInPortrait", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>whether or not to show the master view in portrait. Default is 'false'</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.size-property", 
                "isClassProperty": false, 
                "name": "size", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the size of the view as a dictionary of width and height properties"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.top-property", 
                "isClassProperty": false, 
                "name": "top", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view top position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.touchEnabled-property", 
                "isClassProperty": false, 
                "name": "touchEnabled", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean indicating if the view should receive touch events (true, default) or forward them to peers (false)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.transform-property", 
                "isClassProperty": false, 
                "name": "transform", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the transformation matrix to apply to the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.visible-property", 
                "isClassProperty": false, 
                "name": "visible", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean of the visibility of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.width-property", 
                "isClassProperty": false, 
                "name": "width", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view width. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPad.SplitWindow.zIndex-property", 
                "isClassProperty": false, 
                "name": "zIndex", 
                "platforms": [
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "the z index position relative to other sibling views"
            }
        ], 
        "returns": null, 
        "since": "1.2", 
        "subtype": "view", 
        "type": "object"
    }, 
    "Titanium.UI.iPhone": {
        "deprecated": null, 
        "description": "<p>The iPhone/iPad specific UI capabilities.  All properties, methods and events in this namespace will only work on the Apple iPhone or iPad related devices.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.UI.iPhone.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.5", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.iPhone.createNavigationGroup-method", 
                "name": "createNavigationGroup", 
                "parameters": [
                    {
                        "description": "(optional) a dictionary object properties defined in <a href=\"Titanium.UI.iPhone.NavigationGroup.html\">Titanium.UI.iPhone.NavigationGroup</a>", 
                        "name": "parameters", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.5", 
                "value": "create and return an instance of <a href=\"Titanium.UI.iPhone.NavigationGroup.html\">Titanium.UI.iPhone.NavigationGroup</a>"
            }, 
            {
                "filename": "Titanium.UI.iPhone.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.5", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.hideStatusBar-method", 
                "name": "hideStatusBar", 
                "parameters": [
                    {
                        "description": "boolean to indicate if the action should be animated", 
                        "name": "animated", 
                        "type": "boolean"
                    }, 
                    {
                        "description": "the animation style", 
                        "name": "animationStyle", 
                        "type": "int"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.5", 
                "value": "<p>convenience method to hide the status bar</p>"
            }, 
            {
                "filename": "Titanium.UI.iPhone.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.5", 
                "value": "remove a previously added event listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.showStatusBar-method", 
                "name": "showStatusBar", 
                "parameters": [
                    {
                        "description": "boolean to indicate if the action should be animated", 
                        "name": "animated", 
                        "type": "boolean"
                    }, 
                    {
                        "description": "the animation style", 
                        "name": "animationStyle", 
                        "type": "int"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.5", 
                "value": "<p>convenience method to show the status bar</p>"
            }
        ], 
        "notes": null, 
        "objects": [
            "Titanium.UI.iPhone.ActivityIndicatorStyle", 
            "Titanium.UI.iPhone.AnimationStyle", 
            "Titanium.UI.iPhone.NavigationGroup", 
            "Titanium.UI.iPhone.ProgressBarStyle", 
            "Titanium.UI.iPhone.RowAnimationStyle", 
            "Titanium.UI.iPhone.ScrollIndicatorStyle", 
            "Titanium.UI.iPhone.StatusBar", 
            "Titanium.UI.iPhone.SystemButton", 
            "Titanium.UI.iPhone.SystemButtonStyle", 
            "Titanium.UI.iPhone.SystemIcon", 
            "Titanium.UI.iPhone.TableViewCellSelectionStyle", 
            "Titanium.UI.iPhone.TableViewScrollPosition", 
            "Titanium.UI.iPhone.TableViewSeparatorStyle", 
            "Titanium.UI.iPhone.TableViewStyle"
        ], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.MODAL_PRESENTATION_CURRENT_CONTEXT-property", 
                "isClassProperty": true, 
                "name": "MODAL_PRESENTATION_CURRENT_CONTEXT", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The view is presented using the same style as its parent window. This is currently only available currently on iPhone/iPad and SDK 3.2+.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.MODAL_PRESENTATION_FORMSHEET-property", 
                "isClassProperty": true, 
                "name": "MODAL_PRESENTATION_FORMSHEET", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The width and height of the presented window are smaller than those of the screen and the view is centered on the screen. If the device is in a landscape orientation and the keyboard is visible, the position of the view is adjusted upward so that the view remains visible. All uncovered areas are dimmed to prevent the user from interacting with them. This is currently only available currently on iPhone/iPad and SDK 3.2+.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.MODAL_PRESENTATION_FULLSCREEN-property", 
                "isClassProperty": true, 
                "name": "MODAL_PRESENTATION_FULLSCREEN", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The presented window covers the screen. This is currently only available currently on iPhone/iPad and SDK 3.2+.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.MODAL_PRESENTATION_PAGESHEET-property", 
                "isClassProperty": true, 
                "name": "MODAL_PRESENTATION_PAGESHEET", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The height of the presented window is set to the height of the screen and the view's width is set to the width of the screen in a portrait orientation. Any uncovered areas are dimmed to prevent the user from interacting with them. (In portrait orientations, this option is essentially the same as <a href=\"Titanium.UI.iPhone.MODAL_PRESENTATION_FULLSCREEN-property.html\">Titanium.UI.iPhone.MODAL_PRESENTATION_FULLSCREEN</a>). This is currently only available currently on iPhone/iPad and SDK 3.2+.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.MODAL_TRANSITION_STYLE_COVER_VERTICAL-property", 
                "isClassProperty": true, 
                "name": "MODAL_TRANSITION_STYLE_COVER_VERTICAL", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>When the window is presented, its view slides up from the bottom of the screen. On dismissal, the view slides back down. This is the default transition style. This is currently only available currently on iPhone/iPad.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.MODAL_TRANSITION_STYLE_CROSS_DISSOLVE-property", 
                "isClassProperty": true, 
                "name": "MODAL_TRANSITION_STYLE_CROSS_DISSOLVE", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>When the window is presented, the current view fades out while the new view fades in at the same time. On dismissal, a similar type of cross-fade is used to return to the original view. This is currently only available currently on iPhone/iPad.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.MODAL_TRANSITION_STYLE_FLIP_HORIZONTAL-property", 
                "isClassProperty": true, 
                "name": "MODAL_TRANSITION_STYLE_FLIP_HORIZONTAL", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>When the window is presented, the current view initiates a horizontal 3D flip from right-to-left, resulting in the revealing of the new view as if it were on the back of the previous view. On dismissal, the flip occurs from left-to-right, returning to the original view. This is currently only available currently on iPhone/iPad.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.MODAL_TRANSITION_STYLE_PARTIAL_CURL-property", 
                "isClassProperty": true, 
                "name": "MODAL_TRANSITION_STYLE_PARTIAL_CURL", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>When the window is presented, one corner of the current view curls up to reveal the modal view underneath. On dismissal, the curled up page unfurls itself back on top of the modal view. A modal view presented using this transition is itself prevented from presenting any additional modal views. This transition style is supported only if the window is presenting a <a href=\"Titanium.UI.iPhone.MODAL_PRESENTATION_FULLSCREEN.html\">Titanium.UI.iPhone.MODAL_PRESENTATION_FULLSCREEN</a> modal presentation style.  This is currently only available currently on iPhone/iPad and SDK 3.2+.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.appBadge-property", 
                "isClassProperty": false, 
                "name": "appBadge", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.5", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "<p>set the application badge for the application's icon in the springboard</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.appSupportsShakeToEdit-property", 
                "isClassProperty": false, 
                "name": "appSupportsShakeToEdit", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.5", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>control whether the shake to edit system wide capability is enabled</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.statusBarHidden-property", 
                "isClassProperty": false, 
                "name": "statusBarHidden", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.5", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "<p>control the status bar visibility</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.statusBarStyle-property", 
                "isClassProperty": false, 
                "name": "statusBarStyle", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.5", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>constant that controls the status bar color style</p>"
            }
        ], 
        "returns": "object", 
        "since": "0.5", 
        "subtype": null, 
        "type": "module"
    }, 
    "Titanium.UI.iPhone.ActivityIndicatorStyle": {
        "deprecated": null, 
        "description": "<p>A set of constants for the styles available for <a href=\"Titanium.UI.ActivityIndicator-object.html\">Titanium.UI.ActivityIndicator</a> objects.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.ActivityIndicatorStyle.BIG-property", 
                "isClassProperty": true, 
                "name": "BIG", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The large white style of indicator.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.ActivityIndicatorStyle.DARK-property", 
                "isClassProperty": true, 
                "name": "DARK", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The standard gray style of indicator.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.ActivityIndicatorStyle.PLAIN-property", 
                "isClassProperty": true, 
                "name": "PLAIN", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The standard white style of indicator (the default).</p>"
            }
        ], 
        "returns": null, 
        "since": "0.9", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.UI.iPhone.AnimationStyle": {
        "deprecated": null, 
        "description": "<p>A set of constants for the Animation Styles used for transitions.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.AnimationStyle.CURL_DOWN-property", 
                "isClassProperty": true, 
                "name": "CURL_DOWN", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Curl downwards during a transition animation</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.AnimationStyle.CURL_UP-property", 
                "isClassProperty": true, 
                "name": "CURL_UP", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Curl upwards during a transition animation</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.AnimationStyle.FLIP_FROM_LEFT-property", 
                "isClassProperty": true, 
                "name": "FLIP_FROM_LEFT", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Flip from left to right during a transition animation</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.AnimationStyle.FLIP_FROM_RIGHT-property", 
                "isClassProperty": true, 
                "name": "FLIP_FROM_RIGHT", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Flip from right to left during a transition animation</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.AnimationStyle.NONE-property", 
                "isClassProperty": true, 
                "name": "NONE", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>No animation</p>"
            }
        ], 
        "returns": null, 
        "since": "0.9", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.UI.iPhone.NavigationGroup": {
        "deprecated": null, 
        "description": "<p>A Navigation Group implements a specialized view that manages the navigation of hierarchical content. The Navigation Group is created by the method <a href=\"Titanium.UI.iPhone.NavigationGroup-object.html\">Titanium.UI.iPhone.NavigationGroup</a>.</p>\n<p><img alt=\"navgroup\" src=\"http://img.skitch.com/20100406-rwe44533tkd94fdnbqqudxynpe.png\"></p>\n<p>A Navigation Group is very similar to Tab Bars with the exception that they do not maintain a group of windows with a interface bar at the bottom.</p>", 
        "events": [
            {
                "filename": "Titanium.UI.iPhone.NavigationGroup.click-event", 
                "name": "click", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a click (longer than touch) against the view"
            }, 
            {
                "filename": "Titanium.UI.iPhone.NavigationGroup.dblclick-event", 
                "name": "dblclick", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double click against the view"
            }, 
            {
                "filename": "Titanium.UI.iPhone.NavigationGroup.doubletap-event", 
                "name": "doubletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a double tap against the view"
            }, 
            {
                "filename": "Titanium.UI.iPhone.NavigationGroup.singletap-event", 
                "name": "singletap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a single tap against the view"
            }, 
            {
                "filename": "Titanium.UI.iPhone.NavigationGroup.swipe-event", 
                "name": "swipe", 
                "properties": {
                    "direction": "direction of the swipe - either left or right", 
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a swipe (left or right) against the view"
            }, 
            {
                "filename": "Titanium.UI.iPhone.NavigationGroup.touchcancel-event", 
                "name": "touchcancel", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is interrupted by the device. this happens in circumenstances such as an incoming call to allow the UI to clean up state."
            }, 
            {
                "filename": "Titanium.UI.iPhone.NavigationGroup.touchend-event", 
                "name": "touchend", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when a touch event is completed"
            }, 
            {
                "filename": "Titanium.UI.iPhone.NavigationGroup.touchmove-event", 
                "name": "touchmove", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects movement of a touch.  Event coordinates are always relative to the view in which the initial touch occurred"
            }, 
            {
                "filename": "Titanium.UI.iPhone.NavigationGroup.touchstart-event", 
                "name": "touchstart", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired as soon as the device detects a gesture"
            }, 
            {
                "filename": "Titanium.UI.iPhone.NavigationGroup.twofingertap-event", 
                "name": "twofingertap", 
                "properties": {
                    "globalPoint": "a dictionary with properties x and y describing the point of the event in screen coordinates", 
                    "source": "the source object that fired the event", 
                    "type": "the name of the event fired", 
                    "x": "the x point of the event in receiving view coordiantes", 
                    "y": "the y point of the event, in receiving view coordinates"
                }, 
                "value": "fired when the device detects a two-finger tap against the view"
            }
        ], 
        "examples": [
            {
                "code": "<p>In this example, we open 2 windows in a navigation group.  When you run this, the initial window should be blue.  When you click the back button, you should see a window that should be red.</p>\n<pre><code>var win = Titanium.UI.createWindow();\nvar win1 = Titanium.UI.createWindow({\n    backgroundColor:\"red\",\n    title:\"Red Window\"\n});\nvar nav = Titanium.UI.iPhone.createNavigationGroup({\n   window: win1\n});\nwin.add(nav);\nwin.open();\nvar win2 = Titanium.UI.createWindow({\n    backgroundColor:\"blue\",\n    title:\"Blue Window\"\n});\nnav.open(win2,{animated:true});\n</code></pre>", 
                "description": "Simple Navigation Group"
            }
        ], 
        "methods": [
            {
                "filename": "Titanium.UI.iPhone.NavigationGroup.add-method", 
                "name": "add", 
                "parameters": [
                    {
                        "description": "the view to add to this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "add a child to the view hierarchy"
            }, 
            {
                "filename": "Titanium.UI.iPhone.NavigationGroup.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.UI.iPhone.NavigationGroup.animate-method", 
                "name": "animate", 
                "parameters": [
                    {
                        "description": "either a dictionary of animation properties or an Animation object", 
                        "name": "obj", 
                        "type": "object"
                    }, 
                    {
                        "description": "function to be invoked upon completion of the animation", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "animate the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.NavigationGroup.close-method", 
                "name": "close", 
                "parameters": [
                    {
                        "description": "window to close", 
                        "name": "window", 
                        "type": "object"
                    }, 
                    {
                        "description": "optional dictionary. the only current property supported is <tt>animated</tt> which is a boolean to indicate if the window should be closed animated (default) or not.", 
                        "name": "properties", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "<p>close a window and remove it from the navigation group</p>"
            }, 
            {
                "filename": "Titanium.UI.iPhone.NavigationGroup.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.UI.iPhone.NavigationGroup.hide-method", 
                "name": "hide", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "hide the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.NavigationGroup.open-method", 
                "name": "open", 
                "parameters": [
                    {
                        "description": "window to open within the tab group", 
                        "name": "window", 
                        "type": "object"
                    }, 
                    {
                        "description": "optional dictionary. the only current property supported is <tt>animated</tt> which is a boolean to indicate if the window should be opened animated (default) or not.", 
                        "name": "properties", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "<p>open a window within the navigation group</p>"
            }, 
            {
                "filename": "Titanium.UI.iPhone.NavigationGroup.remove-method", 
                "name": "remove", 
                "parameters": [
                    {
                        "description": "the view to remove from this views hiearchy", 
                        "name": "view", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "remove a previously add view from the view hiearchy"
            }, 
            {
                "filename": "Titanium.UI.iPhone.NavigationGroup.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "remove a previously added event listener"
            }, 
            {
                "filename": "Titanium.UI.iPhone.NavigationGroup.show-method", 
                "name": "show", 
                "parameters": [], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "1.2", 
                "value": "make the view visible"
            }, 
            {
                "filename": "Titanium.UI.iPhone.NavigationGroup.toImage-method", 
                "name": "toImage", 
                "parameters": [
                    {
                        "description": "function to be invoked upon completion. if non-null, this method will be performed asynchronously. if null, it will be performed immediately", 
                        "name": "f", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "1.2", 
                "value": "return a Blob image of the rendered view"
            }
        ], 
        "notes": "<p>The <tt>window</tt> property must be set initially in the constructor when creating a navigation group to the root level window.  All Navigation Groups must have at least one root window that cannot be removed.</p>", 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.NavigationGroup.anchorPoint-property", 
                "isClassProperty": false, 
                "name": "anchorPoint", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the anchor point value. anchor specifies the position by which animation should occur. center is 0.5, 0.5"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.NavigationGroup.animatedCenterPoint-property", 
                "isClassProperty": false, 
                "name": "animatedCenterPoint", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "read-only object with x and y properties of where the view is during animation"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.NavigationGroup.backgroundColor-property", 
                "isClassProperty": false, 
                "name": "backgroundColor", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.NavigationGroup.backgroundDisabledColor-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledColor", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background color of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.NavigationGroup.backgroundDisabledImage-property", 
                "isClassProperty": false, 
                "name": "backgroundDisabledImage", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the disabled background image url of the view. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.NavigationGroup.backgroundFocusedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedColor", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.NavigationGroup.backgroundFocusedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundFocusedImage", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the focused background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.NavigationGroup.backgroundGradient-property", 
                "isClassProperty": false, 
                "name": "backgroundGradient", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a background gradient for the view with the properties: type,startPoint,endPoint,startRadius,endRadius,backfillStart,backfillEnd,colors."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.NavigationGroup.backgroundImage-property", 
                "isClassProperty": false, 
                "name": "backgroundImage", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the background image url of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.NavigationGroup.backgroundLeftCap-property", 
                "isClassProperty": false, 
                "name": "backgroundLeftCap", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the left end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The right end cap is therefore computed by adding the size of the left end cap and the middle portion together and then subtracting that value from the width of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.NavigationGroup.backgroundSelectedColor-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedColor", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background color of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.NavigationGroup.backgroundSelectedImage-property", 
                "isClassProperty": false, 
                "name": "backgroundSelectedImage", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the selected background image url of the view. focusable must be true for normal views. (Android)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.NavigationGroup.backgroundTopCap-property", 
                "isClassProperty": false, 
                "name": "backgroundTopCap", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "End caps specify the portion of an image that should not be resized when an image is stretched. This technique is used to implement buttons and other resizable image-based interface elements. When a button with end caps is resized, the resizing occurs only in the middle of the button, in the region between the end caps. The end caps themselves keep their original size and appearance. This property specifies the size of the top end cap. The middle (stretchable) portion is assumed to be 1 pixel wide. The bottom end cap is therefore computed by adding the size of the top end cap and the middle portion together and then subtracting that value from the height of the image"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.NavigationGroup.borderColor-property", 
                "isClassProperty": false, 
                "name": "borderColor", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the border color of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.NavigationGroup.borderRadius-property", 
                "isClassProperty": false, 
                "name": "borderRadius", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border radius of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.NavigationGroup.borderWidth-property", 
                "isClassProperty": false, 
                "name": "borderWidth", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the border width of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.NavigationGroup.bottom-property", 
                "isClassProperty": false, 
                "name": "bottom", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view bottom position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.NavigationGroup.center-property", 
                "isClassProperty": false, 
                "name": "center", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "a dictionary with properties x and y to indicate the center of the views position relative to the parent view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.NavigationGroup.font-family-property", 
                "isClassProperty": false, 
                "name": "font-family", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font family"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.NavigationGroup.font-size-property", 
                "isClassProperty": false, 
                "name": "font-size", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font size"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.NavigationGroup.font-style-property", 
                "isClassProperty": false, 
                "name": "font-style", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font style, either normal or italics"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.NavigationGroup.font-weight-property", 
                "isClassProperty": false, 
                "name": "font-weight", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "string", 
                "type_jsca": "string", 
                "value": "the font weight, either normal or bold"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.NavigationGroup.height-property", 
                "isClassProperty": false, 
                "name": "height", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view height. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.NavigationGroup.left-property", 
                "isClassProperty": false, 
                "name": "left", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view left position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.NavigationGroup.opacity-property", 
                "isClassProperty": false, 
                "name": "opacity", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float", 
                "type_jsca": "float", 
                "value": "the opacity from 0.0-1.0"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.NavigationGroup.right-property", 
                "isClassProperty": false, 
                "name": "right", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view right position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.NavigationGroup.size-property", 
                "isClassProperty": false, 
                "name": "size", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the size of the view as a dictionary of width and height properties"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.NavigationGroup.top-property", 
                "isClassProperty": false, 
                "name": "top", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view top position. This position is relative to the view's parent. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.NavigationGroup.touchEnabled-property", 
                "isClassProperty": false, 
                "name": "touchEnabled", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean indicating if the view should receive touch events (true, default) or forward them to peers (false)"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.NavigationGroup.transform-property", 
                "isClassProperty": false, 
                "name": "transform", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "object", 
                "type_jsca": "object", 
                "value": "the transformation matrix to apply to the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.NavigationGroup.visible-property", 
                "isClassProperty": false, 
                "name": "visible", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "boolean", 
                "type_jsca": "boolean", 
                "value": "a boolean of the visibility of the view"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.NavigationGroup.width-property", 
                "isClassProperty": false, 
                "name": "width", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "float,string", 
                "type_jsca": "float,string", 
                "value": "property for the view width. Can be either a float value or a dimension string ie 'auto' (default)."
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.NavigationGroup.zIndex-property", 
                "isClassProperty": false, 
                "name": "zIndex", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "1.2", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "the z index position relative to other sibling views"
            }
        ], 
        "returns": null, 
        "since": "1.2", 
        "subtype": "view", 
        "type": "object"
    }, 
    "Titanium.UI.iPhone.ProgressBarStyle": {
        "deprecated": null, 
        "description": "<p>A set of constants for the bar styles used on the <tt>style</tt> property of <a href=\"Titanium.UI.ProgressBar-object.html\">Titanium.UI.ProgressBar</a>.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.ProgressBarStyle.BAR-property", 
                "isClassProperty": true, 
                "name": "BAR", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The style of progress view that is used in a toolbar.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.ProgressBarStyle.DEFAULT-property", 
                "isClassProperty": true, 
                "name": "DEFAULT", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>he standard progress-view style. This is the default.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.ProgressBarStyle.PLAIN-property", 
                "isClassProperty": true, 
                "name": "PLAIN", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The standard progress-view style. Same as <tt>DEFAULT</tt>.</p>"
            }
        ], 
        "returns": null, 
        "since": "0.8", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.UI.iPhone.RowAnimationStyle": {
        "deprecated": null, 
        "description": "<p>A set of constants for the Animation Styles used for transition on table view rows.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.RowAnimationStyle.BOTTOM-property", 
                "isClassProperty": true, 
                "name": "BOTTOM", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The inserted row or rows slides in from the bottom; the deleted row or rows slides out toward the bottom.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.RowAnimationStyle.FADE-property", 
                "isClassProperty": true, 
                "name": "FADE", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The inserted or deleted row or rows fades into or out of the table view.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.RowAnimationStyle.LEFT-property", 
                "isClassProperty": true, 
                "name": "LEFT", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The inserted row or rows slides in from the left; the deleted row or rows slides out to the left.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.RowAnimationStyle.NONE-property", 
                "isClassProperty": true, 
                "name": "NONE", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>No animation is performed. The new cell value appears as if the cell had just been reloaded.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.RowAnimationStyle.RIGHT-property", 
                "isClassProperty": true, 
                "name": "RIGHT", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The inserted row or rows slides in from the right; the deleted row or rows slides out to the right.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.RowAnimationStyle.TOP-property", 
                "isClassProperty": true, 
                "name": "TOP", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The inserted row or rows slides in from the top; the deleted row or rows slides out toward the top.</p>"
            }
        ], 
        "returns": null, 
        "since": "0.9", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.UI.iPhone.ScrollIndicatorStyle": {
        "deprecated": null, 
        "description": "<p>A set of constants for the styles available for <a href=\"Titanium.UI.ActivityIndicator-object.html\">Titanium.UI.ActivityIndicator</a> objects.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.ScrollIndicatorStyle.BLACK-property", 
                "isClassProperty": true, 
                "name": "BLACK", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>A style of indicator which is black smaller than the default style. This style is good against a white content background.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.ScrollIndicatorStyle.DEFAULT-property", 
                "isClassProperty": true, 
                "name": "DEFAULT", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The default style of scroll indicator, which is black with a white border. This style is good against any content background.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.ScrollIndicatorStyle.WHITE-property", 
                "isClassProperty": true, 
                "name": "WHITE", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>A style of indicator is white and smaller than the default style. This style is good against a black content background.</p>"
            }
        ], 
        "returns": null, 
        "since": "0.9", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.UI.iPhone.StatusBar": {
        "deprecated": null, 
        "description": "<p>A set of constants for the status bar style.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.StatusBar.DEFAULT-property", 
                "isClassProperty": true, 
                "name": "DEFAULT", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The default status bar style</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.StatusBar.GRAY-property", 
                "isClassProperty": true, 
                "name": "GRAY", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The gray colored status bar style</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.StatusBar.OPAQUE_BLACK-property", 
                "isClassProperty": true, 
                "name": "OPAQUE_BLACK", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The opaque black status bar style.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.StatusBar.TRANSLUCENT_BLACK-property", 
                "isClassProperty": true, 
                "name": "TRANSLUCENT_BLACK", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The translucent black status bar style. This style provides some level of transparency to the device background.</p>"
            }
        ], 
        "returns": null, 
        "since": "0.9", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.UI.iPhone.SystemButton": {
        "deprecated": null, 
        "description": "<p>A set of constants for the system button style for buttons.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemButton.ACTION-property", 
                "isClassProperty": true, 
                "name": "ACTION", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>action icon. Usable in nav bars and toolbars only.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemButton.ACTIVITY-property", 
                "isClassProperty": true, 
                "name": "ACTIVITY", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>special style that shows an activity indicator. when visible, the activity indicator is already started.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemButton.ADD-property", 
                "isClassProperty": true, 
                "name": "ADD", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>add icon. Usable in nav bars and toolbars only.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemButton.BOOKMARKS-property", 
                "isClassProperty": true, 
                "name": "BOOKMARKS", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>bookmarks icon. Usable in nav bars and toolbars only.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemButton.CAMERA-property", 
                "isClassProperty": true, 
                "name": "CAMERA", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>camera icon. Usable in nav bars and toolbars only.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemButton.CANCEL-property", 
                "isClassProperty": true, 
                "name": "CANCEL", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>cancel icon. localized. Usable in nav bars and toolbars only.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemButton.COMPOSE-property", 
                "isClassProperty": true, 
                "name": "COMPOSE", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>compose icon. Usable in nav bars and toolbars only.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemButton.CONTACT_ADD-property", 
                "isClassProperty": true, 
                "name": "CONTACT_ADD", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>green style plus (+) icon</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemButton.DISCLOSURE-property", 
                "isClassProperty": true, 
                "name": "DISCLOSURE", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>disclosure style icon</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemButton.DONE-property", 
                "isClassProperty": true, 
                "name": "DONE", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>done icon. localized. Usable in nav bars and toolbars only.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemButton.EDIT-property", 
                "isClassProperty": true, 
                "name": "EDIT", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>edit icon. localized. Usable in nav bars and toolbars only.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemButton.FAST_FORWARD-property", 
                "isClassProperty": true, 
                "name": "FAST_FORWARD", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>fast forward icon. Usable in nav bars and toolbars only.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemButton.FIXED_SPACE-property", 
                "isClassProperty": true, 
                "name": "FIXED_SPACE", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Blank space to add between other items. Only the <tt>width</tt> property is used when this value is set.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemButton.FLEXIBLE_SPACE-property", 
                "isClassProperty": true, 
                "name": "FLEXIBLE_SPACE", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Blank space to add between other items. The space is distributed equally between the other items. Other item properties are ignored when this value is set.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemButton.INFO_DARK-property", 
                "isClassProperty": true, 
                "name": "INFO_DARK", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>a dark style info circle icon</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemButton.INFO_LIGHT-property", 
                "isClassProperty": true, 
                "name": "INFO_LIGHT", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>a light style info circle icon</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemButton.ORGANIZE-property", 
                "isClassProperty": true, 
                "name": "ORGANIZE", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>organize icon. Usable in nav bars and toolbars only.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemButton.PAUSE-property", 
                "isClassProperty": true, 
                "name": "PAUSE", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>pause icon. Usable in nav bars and toolbars only.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemButton.PLAY-property", 
                "isClassProperty": true, 
                "name": "PLAY", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>play icon. Usable in nav bars and toolbars only.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemButton.REFRESH-property", 
                "isClassProperty": true, 
                "name": "REFRESH", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>refresh icon. Usable in nav bars and toolbars only.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemButton.REPLY-property", 
                "isClassProperty": true, 
                "name": "REPLY", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>reply icon. Usable in nav bars and toolbars only.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemButton.REWIND-property", 
                "isClassProperty": true, 
                "name": "REWIND", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>rewind icon. Usable in nav bars and toolbars only.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemButton.SAVE-property", 
                "isClassProperty": true, 
                "name": "SAVE", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>save icon. localized. Usable in nav bars and toolbars only.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemButton.SPINNER-property", 
                "isClassProperty": true, 
                "name": "SPINNER", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>same as ACTIVITY</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemButton.STOP-property", 
                "isClassProperty": true, 
                "name": "STOP", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>stop icon. Usable in nav bars and toolbars only.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemButton.TRASH-property", 
                "isClassProperty": true, 
                "name": "TRASH", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>trash icon. Usable in nav bars and toolbars only.</p>"
            }
        ], 
        "returns": null, 
        "since": "0.8", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.UI.iPhone.SystemButtonStyle": {
        "deprecated": null, 
        "description": "<p>A set of constants for the system button styles that can be used for the button <tt>style</tt> property.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemButtonStyle.BAR-property", 
                "isClassProperty": true, 
                "name": "BAR", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Used by tabbed bar and button bar only to use the more condensed style used in nav bars and tool bars.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemButtonStyle.BORDERED-property", 
                "isClassProperty": true, 
                "name": "BORDERED", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>A simple button style with a border.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemButtonStyle.DONE-property", 
                "isClassProperty": true, 
                "name": "DONE", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The style for a done button - for example, a button that completes some task and returns to the previous view.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemButtonStyle.PLAIN-property", 
                "isClassProperty": true, 
                "name": "PLAIN", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Glows when tapped. The default item style.</p>"
            }
        ], 
        "returns": null, 
        "since": "0.8", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.UI.iPhone.SystemIcon": {
        "deprecated": null, 
        "description": "<p>A set of constants for the system icon styles that can be used on a tab group tab.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemIcon.BOOKMARKS-property", 
                "isClassProperty": true, 
                "name": "BOOKMARKS", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Bookmark style icon</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemIcon.CONTACTS-property", 
                "isClassProperty": true, 
                "name": "CONTACTS", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Contacts style icon</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemIcon.DOWNLOADS-property", 
                "isClassProperty": true, 
                "name": "DOWNLOADS", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Downloads style icon</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemIcon.FAVORITES-property", 
                "isClassProperty": true, 
                "name": "FAVORITES", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Favorites style icon</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemIcon.FEATURED-property", 
                "isClassProperty": true, 
                "name": "FEATURED", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Featured style icon</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemIcon.HISTORY-property", 
                "isClassProperty": true, 
                "name": "HISTORY", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>History style icon</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemIcon.MORE-property", 
                "isClassProperty": true, 
                "name": "MORE", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>More style icon</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemIcon.MOST_RECENT-property", 
                "isClassProperty": true, 
                "name": "MOST_RECENT", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Most recent style icon</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemIcon.MOST_VIEWED-property", 
                "isClassProperty": true, 
                "name": "MOST_VIEWED", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Most viewed style icon</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemIcon.RECENTS-property", 
                "isClassProperty": true, 
                "name": "RECENTS", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Recents style icon</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemIcon.SEARCH-property", 
                "isClassProperty": true, 
                "name": "SEARCH", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Search style icon</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.SystemIcon.TOP_RATED-property", 
                "isClassProperty": true, 
                "name": "TOP_RATED", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.8", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Top rated style icon</p>"
            }
        ], 
        "returns": null, 
        "since": "0.8", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.UI.iPhone.TableViewCellSelectionStyle": {
        "deprecated": null, 
        "description": "<p>A set of constants for the style that can be used for the <tt>selectionStyle</tt> property of <a href=\"Titanium.UI.TableViewRow-object.html\">Titanium.UI.TableViewRow</a>.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.TableViewCellSelectionStyle.BLUE-property", 
                "isClassProperty": true, 
                "name": "BLUE", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The cell when selected has a blue background. This is the default value.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.TableViewCellSelectionStyle.GRAY-property", 
                "isClassProperty": true, 
                "name": "GRAY", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>Then cell when selected has a gray background.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.TableViewCellSelectionStyle.NONE-property", 
                "isClassProperty": true, 
                "name": "NONE", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The cell has no distinct style for when it is selected.</p>"
            }
        ], 
        "returns": null, 
        "since": "0.9", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.UI.iPhone.TableViewScrollPosition": {
        "deprecated": null, 
        "description": "<p>A set of constants for the position value that can be used for the <tt>position</tt> property of <a href=\"Titanium.UI.TableView-object.html\">Titanium.UI.TableView</a> when invoking <tt>scrollToIndex</tt>.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.TableViewScrollPosition.BOTTOM-property", 
                "isClassProperty": true, 
                "name": "BOTTOM", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The table view scrolls the row of interest to the bottom of the visible table view.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.TableViewScrollPosition.MIDDLE-property", 
                "isClassProperty": true, 
                "name": "MIDDLE", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The table view scrolls the row of interest to the middle of the visible table view.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.TableViewScrollPosition.NONE-property", 
                "isClassProperty": true, 
                "name": "NONE", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The table view scrolls the row of interest to be fully visible with a minimum of movement. If the row is already fully visible, no scrolling occurs. For example, if the row is above the visible area, the behavior is identical to that specified by <tt>TOP</tt>. This is the default.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.TableViewScrollPosition.TOP-property", 
                "isClassProperty": true, 
                "name": "TOP", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The table view scrolls the row of interest to the top of the visible table view.</p>"
            }
        ], 
        "returns": null, 
        "since": "0.9", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.UI.iPhone.TableViewSeparatorStyle": {
        "deprecated": null, 
        "description": "<p>A set of constants for the style that can be used for the <tt>separatorStyle</tt> property of <a href=\"Titanium.UI.TableView-object.html\">Titanium.UI.TableView</a>.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.TableViewSeparatorStyle.NONE-property", 
                "isClassProperty": true, 
                "name": "NONE", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The separator cell has no distinct style.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.TableViewSeparatorStyle.SINGLE_LINE-property", 
                "isClassProperty": true, 
                "name": "SINGLE_LINE", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>The separator cell has a single line running across its width. This is the default value.</p>"
            }
        ], 
        "returns": null, 
        "since": "0.9", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.UI.iPhone.TableViewStyle": {
        "deprecated": null, 
        "description": "<p>A set of constants for the style that can be used for the button <tt>style</tt> property of <a href=\"Titanium.UI.TableView-object.html\">Titanium.UI.TableView</a>.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "iphone", 
            "ipad"
        ], 
        "properties": [
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.TableViewStyle.GROUPED-property", 
                "isClassProperty": true, 
                "name": "GROUPED", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>A table view whose sections present distinct groups of rows. The section headers and footers do not float.</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.UI.iPhone.TableViewStyle.PLAIN-property", 
                "isClassProperty": true, 
                "name": "PLAIN", 
                "platforms": [
                    "iphone", 
                    "ipad"
                ], 
                "since": "0.9", 
                "type": "int", 
                "type_jsca": "int", 
                "value": "<p>A plain table view. Any section headers or footers are displayed as inline separators and float when the table view is scrolled.</p>"
            }
        ], 
        "returns": null, 
        "since": "0.9", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.Utils": {
        "deprecated": null, 
        "description": "<p>The top level Utils module.  The Utils module is a set of common JavaScript functions that are \nuseful for applications.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.Utils.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Utils.base64decode-method", 
                "name": "base64decode", 
                "parameters": [
                    {
                        "description": "the string to use for the input", 
                        "name": "str", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "string", 
                "since": "0.9", 
                "value": "<p>decode a Base64 string</p>"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Utils.base64encode-method", 
                "name": "base64encode", 
                "parameters": [
                    {
                        "description": "the string to use for the input", 
                        "name": "str", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "string", 
                "since": "0.9", 
                "value": "<p>encode a string into Base64</p>"
            }, 
            {
                "filename": "Titanium.Utils.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Utils.md5HexDigest-method", 
                "name": "md5HexDigest", 
                "parameters": [
                    {
                        "description": "the string to use for the input", 
                        "name": "str", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "string", 
                "since": "0.9", 
                "value": "<p>compute a MD5 hash algorithm against the input and return a hex-based string</p>"
            }, 
            {
                "filename": "Titanium.Utils.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "remove a previously added event listener"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [], 
        "returns": null, 
        "since": "0.9", 
        "subtype": null, 
        "type": "module"
    }, 
    "Titanium.XML": {
        "deprecated": null, 
        "description": "<p>The top level XML module.  The XML module is used parsing and processing XML-based content.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.XML.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.XML.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.XML.parseString-method", 
                "name": "parseString", 
                "parameters": [
                    {
                        "description": "the XML content as a string", 
                        "name": "xml", 
                        "type": "string"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "object", 
                "since": "0.9", 
                "value": "<p>parse an XML string into a DOMDocument</p>"
            }, 
            {
                "filename": "Titanium.XML.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.9", 
                "value": "remove a previously added event listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.XML.serializeToString-method", 
                "name": "serializeToString", 
                "parameters": [
                    {
                        "description": "the XML DOMNode or DOMDocument to serialize", 
                        "name": "node", 
                        "type": "DOMNode"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "string", 
                "since": "0.9", 
                "value": "<p>serialize a DOMDocument or DOMNode and its descendants into an XML string</p>"
            }
        ], 
        "notes": null, 
        "objects": [
            "Titanium.XML.DOMDocument"
        ], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [], 
        "returns": null, 
        "since": "0.9", 
        "subtype": null, 
        "type": "module"
    }, 
    "Titanium.XML.DOMDocument": {
        "deprecated": null, 
        "description": "<p>The DOMDocument returned from <a href=\"Titanium.XML.parseString.html\">Titanium.XML.parseString</a>. The result is an object that implementes the DOM Level 2 API.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [], 
        "returns": null, 
        "since": "0.9", 
        "subtype": null, 
        "type": "object"
    }, 
    "Titanium.Yahoo": {
        "deprecated": null, 
        "description": "<p>The top level Yahoo module.  The Yahoo module is used for accessing Yahoo related API services.</p>", 
        "events": [], 
        "examples": [], 
        "methods": [
            {
                "filename": "Titanium.Yahoo.addEventListener-method", 
                "name": "addEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function to invoke when the event is fired", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "add an event listener for the instance to receive view triggered events"
            }, 
            {
                "filename": "Titanium.Yahoo.fireEvent-method", 
                "name": "fireEvent", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "event object", 
                        "name": "event", 
                        "type": "object"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "fire a synthesized event to the views listener"
            }, 
            {
                "filename": "Titanium.Yahoo.removeEventListener-method", 
                "name": "removeEventListener", 
                "parameters": [
                    {
                        "description": "name of the event", 
                        "name": "name", 
                        "type": "string"
                    }, 
                    {
                        "description": "callback function passed in addEventListener", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "remove a previously added event listener"
            }, 
            {
                "deprecated": false, 
                "filename": "Titanium.Yahoo.yql-method", 
                "name": "yql", 
                "parameters": [
                    {
                        "description": "the YQL query to execute", 
                        "name": "yql", 
                        "type": "string"
                    }, 
                    {
                        "description": "the function to execute when the query completes. The event will contain the boolean property <tt>success</tt> if successful. If <tt>success</tt> is false, the <tt>message</tt> property will contain the error message. If <tt>success</tt> is true, the <tt>data</tt> property will contain the data payload received from the YQL.", 
                        "name": "callback", 
                        "type": "function"
                    }
                ], 
                "platforms": [
                    "android", 
                    "iphone", 
                    "ipad"
                ], 
                "returntype": "void", 
                "since": "0.8", 
                "value": "<p>invoke a Yahoo YQL query</p>"
            }
        ], 
        "notes": null, 
        "objects": [], 
        "parameters": [], 
        "platforms": [
            "android", 
            "iphone", 
            "ipad"
        ], 
        "properties": [], 
        "returns": null, 
        "since": "0.8", 
        "subtype": null, 
        "type": "module"
    }
}